	-----------------------------------------------------------------------------------------------------------------------------------------
	--[[ Copyright (c) 2015, Vict8r, Karalaura, NatsuoKE & Itachi Akatsuki				All rights reserved / 20 November 2015 Colombia. ]]--
	-----------------------------------------------------------------------------------------------------------------------------------------
	--> Kara Effector 3.3 natsuki				   --> IRC Chanel: #KaraEffector
	--> http://www.karaeffector.com	  			   --> http://www.facebook.com/karaeffector
	--> http://www.youtube.com/user/victor8607	   --> http://www.youtube.com/user/NatsuoKE		--> http://www.youtube.com/user/karalaura2012
	-----------------------------------------------------------------------------------------------------------------------------------------
	--[[ El proyecto Effector es un archivo lua que tiene la capacidad de implementar Efectos Karaoke y de Líneas de Traducción prediseñados,
	también brinda la opción de poderlos modificar y crear nuevos Efectos si así se desea. El Effector está dotado de una amplia Librería que
	permite ejecutar los fx que tiene por Default y también crear nuevas y multiples combinaciones.
	El uso del Effector es libre, si se desea se pueden colocar los respectivos créditos de su autor y/o colaboradores. La mayor parte de las
	combinaciones de Efectos y Funciones son capaces de reproducir casi cualquier tipo de fx, además de poseer una amplia variedad de figuras
	Shapes para los efectos que así lo requieran.
	Deseamos que el Effector les sea de gran utilidad y sirva de punto de inicio para que cada uno pueda hacer libremente sus propios efectos
	y lograr combinaciones que sean usadas cuando se necesiten. Recomendamos evitar cualquier forma de modificación en el código del Effector
	o de su Librería, a menos que estén completamente seguros de lo que están haciendo ya que lo que más factible es que deje de funcionar de
	manera correcta. Sin más, nos despedimos, esperando que este trabajo sea del agrado de todos ustedes. ^^'... ]]--
	--=====================================================================================================================================--
	include( "karaskel.lua" )
	include( "Effector-utils-lib-3.3.lua" )
	--=====================================================================================================================================--
	script_name		   = "Kara Effector[fx]"
	script_description = "Effects Automation Karaokes. Creating Effects with Modifiable Parameters"
	script_author	   = "Project KaraLaura"
	script_version	   = "3.3"
	--=====================================================================================================================================--
	Path_Effector_newfx_lua = nil
	--Path_Effector_newfx_lua = "C:\\Program Files (x86)\\Aegisub\\automation\\include\\Effector-newfx-3.3.lua"
	--=====================================================================================================================================--
	leadin_fx, hilight_fx, leadout_fx = { }, { }, { }
	shape_fx, transla_fx, function_fx = { }, { }, { }
	leadin_fx_library, hilight_fx_library, leadout_fx_library = { }, { }, { }
	shape_fx_library, transla_fx_library, function_fx_library = { }, { }, { }
	list_mode = {
		[ 1 ] = "lead-in[fx]",
		[ 2 ] = "hi-light[fx]",
		[ 3 ] = "lead-out[fx]",
		[ 4 ] = "shape[fx]",
		[ 5 ] = "translation[fx]",
		[ 6 ] = "function[fx]"
	}
	list_fx = {
		[ 1 ] = leadin_fx,
		[ 2 ] = hilight_fx,
		[ 3 ] = leadout_fx,
		[ 4 ] = shape_fx,
		[ 5 ] = transla_fx,
		[ 6 ] = function_fx
	}
	list_library = {
		[ 1 ] = leadin_fx_library,
		[ 2 ] = hilight_fx_library,
		[ 3 ] = leadout_fx_library,
		[ 4 ] = shape_fx_library,
		[ 5 ] = transla_fx_library,
		[ 6 ] = function_fx_library
	}
	--=====================================================================================================================================--
	
	count_save = 1
	function effector.do_fx( subs, meta, line, sett )
		--------------------------------------------------------------
		xres = meta.res_x or 1280
		yres = meta.res_y or 720
		ratio = 1
		if xres then
			ratio = xres / 1280
		end
		local msa = aegisub.ms_from_frame( 1 )
		local msb = aegisub.ms_from_frame( 101 )
		frame_dur = 41.708
		if msb then
			frame_dur = math.round( ( msb - msa ) / 100, 3 )
		end
		modules3w = 0
		modulec3s = 0
		modulec3w = 0
		----------------------------------------------------------------
		line.i, line.n = l_counter, maxil_counter
		line.index = idx_line[ line.i ] + count_line_dialogue - ini_line
		ii = line.index
		----------------------------------------------------------------
		fx, var = { }, { }
		l = linefx[ ii ]
		L = linefx[ ii ].styleref
		line.dur = l.duration
		l_fx = line.effect
		-------------------------------------------------------------------------------
		l_layer, l_style, l_actor, l_spacing = l.layer, l.style, l.actor, l.spacing
		l_ml, l_mr, l_mt, l_mb = l.margin_l, l.margin_r, l.margin_t, l.margin_b
		l_align, l_dur, l_x, l_y, l_i = l.align, line.dur, l.center, l.middle, line.i
		l_start, l_end, l_mid, l_n = l.start_time, l.end_time, l.mid_time, line.n
		l_left, l_center, l_right, l_width = l.left, l.center, l.right, l.width
		l_top, l_middle, l_bottom, l_height = l.top, l.middle, l.bottom, l.height
		l_angle, l_outline, l_shadow, l_mv = l.angle, l.outline, l.shadow, l.margin_v
		l_scale_x, l_scale_y, l_fsize, l_fname = l.scale_x, l.scale_y, l.fontsize, l.fontname
		l_color1, l_color2, l_color3, l_color4 = l.color1, l.color2, l.color3, l.color4
		l_alpha1, l_alpha2, l_alpha3, l_alpha4 = l.alpha1, l.alpha2, l.alpha3, l.alpha4
		-------------------------------------------------------------------------------
		lfx = linefx[ ii ]
		txt_chars = line.text_stripped:gsub( "\\N", " " ):gsub( "  ", " " )
		char, left, width, line.char = { }, l.left, 0, linefx[ ii ].char
		char.i = 1
		char.n = unicode.len( txt_chars )
		if fx__.noblank then
			char.n = unicode.len( txt_chars:gsub( " ", "" ) )
		end
		----------------------------------------
		text.color1 = color.ass( sett.color_1c )
		text.color1c = text.color1
		text.alpha1 = ass_alpha( sett.alpha_1a )
		text.alpha1a = text.alpha1
		text.color2 = color.ass( sett.color_2c )
		text.color2c = text.color2
		text.alpha2 = ass_alpha( sett.alpha_2a )
		text.alpha2a = text.alpha2
		text.color3 = color.ass( sett.color_3c )
		text.color3c = text.color3
		text.alpha3 = ass_alpha( sett.alpha_3a )
		text.alpha3a = text.alpha3
		text.color4 = color.ass( sett.color_4c )
		text.color4c = text.color4
		text.alpha4 = ass_alpha( sett.alpha_4a )
		text.alpha4a = text.alpha4
		shape.color1 = color.ass( fx__.color1 )
		shape.color1c = shape.color1
		shape.alpha1 = ass_alpha( fx__.alpha1 )
		shape.alpha1a = shape.alpha1
		shape.color3 = color.ass( fx__.color3 )
		shape.color3c = shape.color3
		shape.alpha3 = ass_alpha( fx__.alpha3 )
		shape.alpha3a = shape.alpha3
		shape.color4 = color.ass( fx__.color4 )
		shape.color4c = shape.color4
		shape.alpha4 = ass_alpha( fx__.alpha4 )
		shape.alpha4a = shape.alpha4
		---------------------------------------
		txt_c1 = "\\1c" .. text.color1
		if text.color1 == l.color1 then
			txt_c1 = ""
		end
		txt_a1 = "\\1a" .. text.alpha1
		if text.alpha1 == l.alpha1 then
			txt_a1 = ""
		end
		txt_c3 = "\\3c" .. text.color3
		if text.color3 == l.color3 then
			txt_c3 = ""
		end
		txt_a3 = "\\3a" .. text.alpha3
		if text.alpha3 == l.alpha3 then
			txt_a3 = ""
		end
		txt_c4 = "\\4c" .. text.color4
		if text.color4 == l.color4 then
			txt_c4 = ""
		end
		txt_a4 = "\\4a" .. text.alpha4
		if text.alpha4 == l.alpha4 then
			txt_a4 = ""
		end
		----------------------------------------------------------------------------------
		text.color = format( "\\1c%s\\3c%s\\4c%s", text.color1, text.color3, text.color4 )
		text.alpha = format( "\\1a%s\\3a%s\\4a%s", text.alpha1, text.alpha3, text.alpha4 )
		text.style = txt_c1 .. txt_c3 .. txt_c4 .. txt_a1 .. txt_a3 .. txt_a4
		text.alpha0 = "\\alpha&HFF&"
		shape.color = format( "\\1c%s\\3c%s\\4c%s", shape.color1, shape.color3, shape.color4 )
		shape.alpha = format( "\\1a%s\\3a%s\\4a%s", shape.alpha1, shape.alpha3, shape.alpha4 )
		shape.style = shape.color .. shape.alpha
		shape.alpha0 = "\\alpha&HFF&"
		if sett.tags_filter == "No Tags Color and Alpha"
			or sett.tags_filter == "No Tags Color and Alpha [VSFilterMod]" then
			text.style = ""
			shape.style = ""
		end
		----------------------------
		effector.effect_offset( )
		----------------------------
		fx.mode = "h"
		if fx__.v_kanji then
			fx.mode = "v"
		end
		noblank1 = script_name .. " " .. script_author
		noblank2 = script_name .. " " .. script_author
		blk = " "
		if fx__.noblank then
			noblank1, noblank2 = "", " "
			blk = ""
		end
		fx.filter = "2.39"
		fx.tm = tag.to_vsf
		if sett.tags_filter == "VSFilterMod"
			or sett.tags_filter == "No Tags Color and Alpha [VSFilterMod]" then
			fx.filter = "mod"
			fx.tm = tag.to_mod
		end
		local l = table.copy( line )
		--===========================================================--
		if line.i == 1 then	--Autosave
			local GUI_fx = "PfxM_Box"
			local lib_title = tostring( os.date( ) ):sub( 1, -4 ):gsub( "(%d+)/(%d+)", "%2/%1" )
			local file_maxn = 24
			local file_nmfx = format( "AutoSave_KE_%s", (count_save - 1) % file_maxn + 1 )
			local file_name = format( "%sautosave\\Effector AutoSave %s.lua", aegisub.decode_path( "?user/" ), (count_save - 1) % file_maxn + 1 )
			local file_save, infile_fx
			file_save = io.open( file_name, "w" )
			infile_fx = format( "%s = table.duplicate(%s); table.inbox(%s, \"%s: %s\",\"%s\",%s,%s,\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s); table.insert(leadin_fx_library, 1, %s); table.insert(leadin_fx, 1, \"%s\"); table.insert(hilight_fx_library, 1, %s); table.insert(hilight_fx, 1, \"%s\"); table.insert(leadout_fx_library, 1, %s); table.insert(leadout_fx, 1, \"%s\"); table.insert(shape_fx_library, 1, %s); table.insert(shape_fx, 1, \"%s\"); table.insert(transla_fx_library, 1, %s); table.insert(transla_fx, 1, \"%s\")",
				file_nmfx, GUI_fx, file_nmfx, lib_title, file_nmfx:gsub( "_", " " ), fx_box[ 29 ].value, ((fx_box[ 30 ].value == true) and "true" or "false"),
				((fx_box[ 31 ].value == true) and "true" or "false"), fx_box[ 32 ].value, fx_box[ 33 ].value, fx_box[ 34 ].value, fx_box[ 35 ].value,
				fx_box[ 36 ].value, fx_box[ 37 ].value, Ps( fx_box[ 38 ].text ), Ps( fx_box[ 39 ].text ), Ps( fx_box[ 40 ].text ), Ps( fx_box[ 41 ].text ),
				Ps( fx_box[ 42 ].text ), Ps( fx_box[ 43 ].text ), Ps( fx_box[ 44 ].text ), Ps( fx_box[ 45 ].text ), Ps( fx_box[ 46 ].text ),
				Ps( fx_box[ 47 ].text ), Ps( fx_box[ 48 ].text ), Ps( fx_box[ 49 ].text ), Ps( fx_box[ 50 ].text ), Ps( fx_box[ 51 ].text ),
				Ps( fx_box[ 52 ].text ), Ps( fx_box[ 53 ].text ), Ps( fx_box[ 54 ].text ), Ps( fx_box[ 55 ].text ), Ps( fx_box[ 56 ].text ),
				Ps( fx_box[ 57 ].text ), fx_box[ 66 ].value, ((fx_box[ 67 ].value == true) and "true" or "false"), file_nmfx, file_nmfx:gsub( "_", " " ),
				file_nmfx, file_nmfx:gsub( "_", " " ), file_nmfx, file_nmfx:gsub( "_", " " ), file_nmfx, file_nmfx:gsub( "_", " " ),
				file_nmfx, file_nmfx:gsub( "_", " " )
			)
			file_save:write( "	", infile_fx, "\n" )
			count_save = count_save + 1
			--aegisub.decode_path( "?data" ) -- path del aegis
		end
		--===========================================================--
		function maxloop( new_maxloop_v, new_maxloop_h, new_maxloop_3 )
			fx.loop_v = ceil( new_maxloop_v or 1 )
			fx.loop_h = ceil( new_maxloop_h or 1 )
			fx.loop_3 = ceil( new_maxloop_3 or 1 )
			fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
			maxj = fx.maxloop_fx
			return ""
		end
		function replay( num_replay )
			fx.replay_fx = ceil( num_replay )
			maxJ = fx.replay_fx
			return ""
		end
		function relayer( new_layer )
			fx.layer = ceil( new_layer )
			return ""
		end
		function retime( mode, add_start, add_end )
			add_start = HMS_to_ms( add_start ) or 0
			add_end = HMS_to_ms( add_end ) or 0
			if mode == "line" then				-- mode[01]
				l.start_time = line.start_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "preline" then		-- mode[02]
				l.start_time = line.start_time + add_start
				l.end_time = line.start_time + add_end
			elseif mode == "postline" then		-- mode[03]
				l.start_time = line.end_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "word" then			-- mode[04]
				l.start_time = line.start_time + word.start_time + add_start
				l.end_time = line.start_time + word.end_time + add_end
			elseif mode == "preword" then		-- mode[05]
				l.start_time = line.start_time + word.start_time + add_start
				l.end_time = line.start_time + word.start_time + add_end
			elseif mode == "postword" then		-- mode[06]
				l.start_time = line.start_time + word.end_time + add_start
				l.end_time = line.start_time + word.start_time + add_end
			elseif mode == "syl" then			-- mode[07]
				l.start_time = line.start_time + syl.start_time + add_start
				l.end_time = line.start_time + syl.end_time + add_end
			-- Demo mode --
			elseif mode == "sylmodule" then
				l.start_time = line.start_time + syl.start_time + add_start + (syl.duration + add_start + add_end) * (j - 1) / maxj
				l.end_time   = line.start_time + syl.start_time + add_start + (syl.duration + add_start + add_end) * (j - 0) / maxj
			---------------
			elseif mode == "presyl" then		-- mode[08]
				l.start_time = line.start_time + syl.start_time + add_start
				l.end_time = line.start_time + syl.start_time + add_end
			elseif mode == "postsyl" then		-- mode[09]
				l.start_time = line.start_time + syl.end_time + add_start
				l.end_time = line.start_time + syl.end_time + add_end
			elseif mode == "furi" then			-- mode[10]
				l.start_time = line.start_time + furi.start_time + add_start
				l.end_time = line.start_time + furi.end_time + add_end
			elseif mode == "prefuri" then		-- mode[11]
				l.start_time = line.start_time + furi.start_time + add_start
				l.end_time = line.start_time + furi.start_time + add_end
			elseif mode == "postfuri" then		-- mode[12]
				l.start_time = line.start_time + furi.end_time + add_start
				l.end_time = line.start_time + furi.end_time + add_end
			elseif mode == "char" then			-- mode[13]
				l.start_time = line.start_time + char.start_time + add_start
				l.end_time = line.start_time + char.end_time + add_end
			elseif mode == "prechar" then		-- mode[14]
				l.start_time = line.start_time + char.start_time + add_start
				l.end_time = line.start_time + char.start_time + add_end
			elseif mode == "postchar" then		-- mode[15]
				l.start_time = line.start_time + char.end_time + add_start
				l.end_time = line.start_time + char.start_time + add_end
			elseif mode == "start2word"	then	-- mode[16]
				l.start_time = line.start_time + add_start
				l.end_time = line.start_time + word.start_time + add_end
			elseif mode == "word2end" then		-- mode[17]
				l.start_time = line.start_time + word.end_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "start2syl" then		-- mode[18]
				l.start_time = line.start_time + add_start
				l.end_time = line.start_time + syl.start_time + add_end
			elseif mode == "syl2end" then		-- mode[19]
				l.start_time = line.start_time + syl.end_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "start2furi"	then	-- mode[20]
				l.start_time = line.start_time + add_start
				l.end_time = line.start_time + furi.start_time + add_end
			elseif mode == "furi2end" then		-- mode[21]
				l.start_time = line.start_time + furi.end_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "start2char"	then	-- mode[22]
				l.start_time = line.start_time + add_start
				l.end_time = line.start_time + char.start_time + add_end
			elseif mode == "char2end" then		-- mode[23]
				l.start_time = line.start_time + char.end_time + add_start
				l.end_time = line.end_time + add_end
			elseif mode == "linepct" then		-- mode[24]
				l.start_time = line.start_time + add_start * line.duration / 100
				l.end_time = line.start_time + add_end * line.duration / 100
			elseif mode == "wordpct" then		-- mode[25]
				l.start_time = line.start_time + word.start_time + add_start * word.duration / 100
				l.end_time = line.start_time + word.start_time + add_end * word.duration / 100
			elseif mode == "sylpct" then		-- mode[26]
				l.start_time = line.start_time + syl.start_time + add_start * syl.duration / 100
				l.end_time = line.start_time + syl.start_time + add_end * syl.duration / 100
			elseif mode == "furipct" then		-- mode[27]
				l.start_time = line.start_time + furi.start_time + add_start * furi.duration / 100
				l.end_time = line.start_time + furi.start_time + add_end * furi.duration / 100
			elseif mode == "charpct" then		-- mode[28]
				l.start_time = line.start_time + char.start_time + add_start * char.duration / 100
				l.end_time = line.start_time + char.start_time + add_end * char.duration / 100
			elseif mode == "set" or mode == "abs" then	-- mode[29]
				l.start_time = add_start
				l.end_time = add_end
			elseif mode == "fxpretime" then		-- mode[30]
				l.start_time = fx.start_time + add_start
				l.end_time = fx.start_time + add_end
			elseif mode == "fxtime"	 then		-- mode[31]
				l.start_time = fx.start_time + add_start
				l.end_time = fx.end_time + add_end
			elseif mode == "fxposttime"	then	-- mode[32]
				l.start_time = fx.end_time + add_start
				l.end_time = fx.end_time + add_end
			elseif mode == "fxpct" then			-- mode[33]
				l.start_time = fx.start_time + add_start * fx.dur / 100
				l.end_time = fx.start_time + add_end * fx.dur / 100
			elseif mode == "startsyl2char" then	-- mode[34]
				l.start_time = line.start_time + syl.start_time + add_start
				l.end_time = line.start_time + char.start_time + add_end
			elseif mode == "startword2syl" then	-- mode[35]
				l.start_time = line.start_time + word.start_time + add_start
				l.end_time = line.start_time + syl.start_time + add_end
			elseif mode == "startword2char" then-- mode[36]
				l.start_time = line.start_time + word.start_time + add_start
				l.end_time = line.start_time + char.start_time + add_end
			elseif mode == "syl2endword" then	-- mode[37]
				l.start_time = line.start_time + syl.end_time + add_start
				l.end_time = line.start_time + word.end_time + add_end
			elseif mode == "char2endsyl" then	-- mode[38]
				l.start_time = line.start_time + char.end_time + add_start
				l.end_time = line.start_time + syl.end_time + add_end
			elseif mode == "char2endword" then	-- mode[39]
				l.start_time = line.start_time + char.end_time + add_start
				l.end_time = line.start_time + word.end_time + add_end
			else								-- mode["default"]
				l.start_time = line.start_time
				l.end_time = line.end_time
			end
			fx.start_time = l.start_time
			fx.end_time = l.end_time
			fx.dur = fx.end_time - fx.start_time
			return ""
		end
		--------------------------------------------------------------
		function export_text( mode )
			local newfile = aegisub.dialog.save( "Kara Effector[fx]: Export File", "", "", "Text files (.txt)|.txt", false )
			local fxmode, fxname = mode, nil
			if mode:match( "," ) then
				fxmode = mode:match( "%w+[ %w]*" )
				fxname = mode:match( "%,+[ %S]*" ):gsub( "%,[ ]*", "" ):gsub( " ", "_" )
			end
			if newfile then
				local file = io.open( newfile, "w" )
				if fxmode == "export times ms" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].start_time .. "," .. linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].end_time .. "\n" )
					end
				elseif fxmode == "export times" then
					for i = 1, line.n do
						file:write( ms_to_HMS( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].start_time ) .. "," .. ms_to_HMS( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].end_time ) .. "\n" )
					end
				elseif fxmode == "export lines" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].raw .. "\n" )
					end
				elseif fxmode == "export text" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].text .. "\n")
					end
				elseif fxmode == "export hira" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].hira.text .. "\n" )
					end
				elseif fxmode == "export kata" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].kata.text .. "\n" )
					end
				elseif fxmode == "export roma" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].roma.text .. "\n" )
					end
				elseif fxmode == "export text_stripped"	then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].text_stripped .. "\n" )
					end
				elseif fxmode == "export hira_stripped" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].hira.text_stripped .. "\n" )
					end
				elseif fxmode == "export kata_stripped" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].kata.text_stripped .. "\n" )
					end
				elseif fxmode == "export roma_stripped" then
					for i = 1, line.n do
						file:write( linefx[ idx_line[ i ] + count_line_dialogue - ini_line ].roma.text_stripped .. "\n" )
					end
				elseif fxmode == "export config" then
					if fx__.folderfx == "lead-in[fx]" then
						library_fx, library_mode = "leadin_fx_library", "leadin_fx"
					elseif fx__.folderfx == "hi-light[fx]" then
						library_fx, library_mode = "hilight_fx_library", "hilight_fx"
					elseif fx__.folderfx == "lead-out[fx]" then
						library_fx, library_mode = "leadout_fx_library", "leadout_fx"
					elseif fx__.folderfx == "shape[fx]" then
						library_fx, library_mode = "shape_fx_library", "shape_fx"
					elseif fx__.folderfx == "translation[fx]" then
						library_fx, library_mode = "transla_fx_library", "transla_fx"
					elseif fx__.folderfx == "function[fx]" then
						library_fx, library_mode = "function_fx_library", "function_fx"
					end
					library_title = fx__.folderfx
					lines_comment = false
					newFX = fxname or library_mode .. "_KE" .. tostring( os.time( ) ):sub( -6, -1 )
					if fx__.folderfx == "lead-in[fx]"
						or fx__.folderfx == "hi-light[fx]"
						or fx__.folderfx == "lead-out[fx]"
						or fx__.folderfx == "function[fx]" then
						fx_GUI = "PfxM_Box"
					elseif fx__.folderfx == "shape[fx]" then
						fx_GUI = "Shape_Box"
					elseif fx__.folderfx == "translation[fx]" then
						if fx_box[ 29 ].value == "Char" then
							fx_box[ 29 ].value = "Translation Char"
						elseif fx_box[ 29 ].value == "Syl"
							or fx_box[ 29 ].value == "Furi"
							or fx_box[ 29 ].value == "Word"
							or fx_box[ 29 ].value == "Convert to Hiragana"
							or fx_box[ 29 ].value == "Convert to Katakana"
							or fx_box[ 29 ].value == "Convert to Romaji" then
							fx_box[ 29 ].value = "Translation Word"
						elseif fx_box[ 29 ].value == "Line" then
							fx_box[ 29 ].value = "Translation Line"
						end
						fx_GUI = "Trans_Box"
					end
					New_fx_config = format( "%s = table.duplicate(%s); table.inbox(%s, \"%s: %s\",\"%s\",%s,%s,\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s); table.insert(%s, %s); table.insert(%s, \"%s\")",
						newFX, fx_GUI, newFX, library_title, newFX:gsub( "_", " " ), fx_box[ 29 ].value, ((fx_box[ 30 ].value == true) and "true" or "false"),
						((fx_box[ 31 ].value == true) and "true" or "false"), fx_box[ 32 ].value, fx_box[ 33 ].value, fx_box[ 34 ].value, fx_box[ 35 ].value,
						fx_box[ 36 ].value, fx_box[ 37 ].value, Ps( fx_box[ 38 ].text ), Ps( fx_box[ 39 ].text ), Ps( fx_box[ 40 ].text ),
						Ps( fx_box[ 41 ].text ), Ps( fx_box[ 42 ].text ), Ps( fx_box[ 43 ].text ), Ps( fx_box[ 44 ].text ), Ps( fx_box[ 45 ].text ),
						Ps( fx_box[ 46 ].text ), Ps( fx_box[ 47 ].text ), Ps( fx_box[ 48 ].text ), Ps( fx_box[ 49 ].text ), Ps( fx_box[ 50 ].text ),
						Ps( fx_box[ 51 ].text ), Ps( fx_box[ 52 ].text ), Ps( fx_box[ 53 ].text ), Ps( fx_box[ 54 ].text ), Ps( fx_box[ 55 ].text ),
						Ps( fx_box[ 56 ].text ), Ps( fx_box[ 57 ].text ), fx_box[ 66 ].value, ((fx_box[ 67 ].value == true) and "true" or "false"),
						library_fx, newFX, library_mode, newFX:gsub( "_", " " )
					)
					if fx__.folderfx == "lead-in[fx]" then
						fx_libx = "LIfx"
					elseif fx__.folderfx == "hi-light[fx]" then
						fx_libx = "HLfx"
					elseif fx__.folderfx == "lead-out[fx]" then
						fx_libx = "LOfx"
					elseif fx__.folderfx == "shape[fx]" then
						fx_libx = "SHfx"
					elseif fx__.folderfx == "translation[fx]" then
						fx_libx = "TLfx"
					elseif fx__.folderfx == "function[fx]" then
						fx_libx = "FTfx"
					end
					fx_date = format( "--[[%s %s]] ", fx_libx, tostring( os.date( ) ):sub( 1, -4 ):gsub( "(%d+)/(%d+)", "%2/%1" ) )
					file:write( fx_date .. New_fx_config .. "\n	" )
				end
			end
		end
		---------------------------------------------
		if (fx__.t_type == "Line"
			or fx__.t_type == "Syl"
			or fx__.t_type == "Char"
			or fx__.t_type == "Furi"
			or fx__.t_type == "Convert to Hiragana"
			or fx__.t_type == "Convert to Katakana"
			or fx__.t_type == "Convert to Romaji"
			or fx__.t_type == "Template Line [Word]"
			or fx__.t_type == "Template Line [Syl]"
			or fx__.t_type == "Template Line [Char]")
			and line.text_stripped:gsub( " ", "" ):gsub( "	", "" ) ~= noblank1 then
			
			if fx__.printfx then
				if fx__.folderfx == "lead-in[fx]" then
					library_fx, library_mode = "leadin_fx_library", "leadin_fx"
				elseif fx__.folderfx == "hi-light[fx]" then
					library_fx, library_mode = "hilight_fx_library", "hilight_fx"
				elseif fx__.folderfx == "lead-out[fx]" then
					library_fx, library_mode = "leadout_fx_library", "leadout_fx"
				elseif fx__.folderfx == "shape[fx]" then
					library_fx, library_mode = "shape_fx_library", "shape_fx"
				elseif fx__.folderfx == "translation[fx]" then
					library_fx, library_mode = "transla_fx_library", "transla_fx"
				elseif fx__.folderfx == "function[fx]" then
					library_fx, library_mode = "function_fx_library", "function_fx"
				end
				library_title = fx__.folderfx
				lines_comment = false
				if line.i == 1 then
					newFX = fx__.namefx:gsub( " ", "_" )
					if newFX == "" then
						newFX = library_mode .. "_KE" .. tostring( os.time( ) ):sub( -6, -1 )
					end
					if fx__.folderfx == "lead-in[fx]"
						or fx__.folderfx == "hi-light[fx]"
						or fx__.folderfx == "lead-out[fx]"
						or fx__.folderfx == "function[fx]" then
						fx_GUI = "PfxM_Box"
					elseif fx__.folderfx == "shape[fx]" then
						fx_GUI = "Shape_Box"
					elseif fx__.folderfx == "translation[fx]" then
						if fx_box[ 29 ].value == "Char" then
							fx_box[ 29 ].value = "Translation Char"
						elseif fx_box[ 29 ].value == "Syl"
							or fx_box[ 29 ].value == "Furi"
							or fx_box[ 29 ].value == "Word"
							or fx_box[ 29 ].value == "Convert to Hiragana"
							or fx_box[ 29 ].value == "Convert to Katakana"
							or fx_box[ 29 ].value == "Convert to Romaji" then
							fx_box[ 29 ].value = "Translation Word"
						elseif fx_box[ 29 ].value == "Line" then
							fx_box[ 29 ].value = "Translation Line"
						end
						fx_GUI = "Trans_Box"
					end
					New_fx_config = format( "%s = table.duplicate(%s); table.inbox(%s, \"%s: %s\",\"%s\",%s,%s,\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s); table.insert(%s, %s); table.insert(%s, \"%s\")",
						newFX, fx_GUI, newFX, library_title, newFX:gsub( "_", " " ), fx_box[ 29 ].value, ((fx_box[ 30 ].value == true) and "true" or "false"),
						((fx_box[ 31 ].value == true) and "true" or "false"), fx_box[ 32 ].value, fx_box[ 33 ].value, fx_box[ 34 ].value, fx_box[ 35 ].value,
						fx_box[ 36 ].value, fx_box[ 37 ].value, Ps( fx_box[ 38 ].text ), Ps( fx_box[ 39 ].text ), Ps( fx_box[ 40 ].text ),
						Ps( fx_box[ 41 ].text ), Ps( fx_box[ 42 ].text ), Ps( fx_box[ 43 ].text ), Ps( fx_box[ 44 ].text ), Ps( fx_box[ 45 ].text ),
						Ps( fx_box[ 46 ].text ), Ps( fx_box[ 47 ].text ), Ps( fx_box[ 48 ].text ), Ps( fx_box[ 49 ].text ), Ps( fx_box[ 50 ].text ),
						Ps( fx_box[ 51 ].text ), Ps( fx_box[ 52 ].text ), Ps( fx_box[ 53 ].text ), Ps( fx_box[ 54 ].text ), Ps( fx_box[ 55 ].text ),
						Ps( fx_box[ 56 ].text ), Ps( fx_box[ 57 ].text ), fx_box[ 66 ].value, ((fx_box[ 67 ].value == true) and "true" or "false"),
						library_fx, newFX, library_mode, newFX:gsub( "_", " " )
					)
					if Path_Effector_newfx_lua == nil then
						l.comment = true
						l.effect = "Effector [fx] Config"
						l.start_time, l.end_time = 0, 0
						l.text = New_fx_config
						subs.append( l )
					else
						if fx__.folderfx == "lead-in[fx]" then
							fx_libx = "LIfx"
						elseif fx__.folderfx == "hi-light[fx]" then
							fx_libx = "HLfx"
						elseif fx__.folderfx == "lead-out[fx]" then
							fx_libx = "LOfx"
						elseif fx__.folderfx == "shape[fx]" then
							fx_libx = "SHfx"
						elseif fx__.folderfx == "translation[fx]" then
							fx_libx = "TLfx"
						elseif fx__.folderfx == "function[fx]" then
							fx_libx = "FTfx"
						end
						fx_date = format( "--[[%s %s]] ", fx_libx, tostring( os.date( ) ):sub( 1, -4 ):gsub( "(%d+)/(%d+)", "%2/%1" ) )
						effector.savefx( fx_date .. New_fx_config .. "\n	", Path_Effector_newfx_lua )
						aegisub.debug.out( "The effect ★%s★ is saved in the Folder %s, you must reload the script Kara Effector so you can see it in the list effects type %s.\n\nEl efecto ★%s★ se ha guardado en el Folder %s, debes recargar el script Kara Effector para que puedas verlo en la lista de efectos tipo %s.", newFX:gsub( "_", " " ), fx__.folderfx, fx__.folderfx, newFX:gsub( "_", " " ), fx__.folderfx, fx__.folderfx )
						aegisub.progress.set( 100 )
					end
				end
			else
				if fx__.namefx:sub( 1, 7 ) == "export " then
					if line.i == 1 then
						export_text( fx__.namefx )
						lines_comment = false
					end
					fx_box[ 62 ].text = ""
				else
					actor_fx = fx__.effect:gsub( "%[.+[%W+]*", "" )
					actor_fx = actor_fx:gsub( "%d%d/%d%d/%d%d %d%d:%d%d: ", "" )
					
					local FX_mode
					if fx__.t_type == "Syl"
						or fx__.t_type == "Char"
						or fx__.t_type == "Convert to Hiragana"
						or fx__.t_type == "Convert to Katakana"
						or fx__.t_type == "Convert to Romaji" then
						FX_mode = line.kara.n
					elseif fx__.t_type == "Furi" then
						FX_mode = line.furi.n
					elseif fx__.t_type == "Line"
						or fx__.t_type == "Template Line [Word]"
						or fx__.t_type == "Template Line [Syl]"
						or fx__.t_type == "Template Line [Char]" then
						FX_mode = 1
					end
					
					for i = 1, FX_mode do
						furi = line.furi[ i ]
						syl  = line.kara[ i ]
						local x = line.left + syl.center
						local y = line.middle
						-----------------------------------------------------------
						hira = linefx[ ii ].hira[ i ]
						kata = linefx[ ii ].kata[ i ]
						roma = linefx[ ii ].roma[ i ]
						hira.n = line.kara.n
						kata.n = line.kara.n
						roma.n = line.kara.n
						hira.i = i
						kata.i = i
						roma.i = i
						-----------------------------------------------------------
						syl.n = line.kara.n
						syl.dur = syl.duration
						syl.mid_time = syl.start_time + syl.dur / 2
						syl.center = x
						syl.middle = y
						syl.left = syl.center - syl.width / 2
						syl.right = syl.center + syl.width / 2
						syl.top = syl.middle - syl.height / 2
						syl.bottom = syl.middle + syl.height / 2
						syl.widtht = syl.width + syl.prespacewidth + syl.postspacewidth
						syl.widthmax = math.max( unpack( mmwth[ ii ].sy ) )
						syl.widthmin = math.min( unpack( mmwth[ ii ].sy ) )
						syl.durmax = math.max( unpack( mmdur[ ii ].sy ) )
						syl.durmin = math.min( unpack( mmdur[ ii ].sy ) )
						syl.text = syl.text_stripped
						-----------------------------------------------------------
						
						if fx__.t_type == "Syl"
							or fx__.t_type == "Line"
							or fx__.t_type == "Convert to Hiragana"
							or fx__.t_type == "Convert to Katakana"
							or fx__.t_type == "Convert to Romaji"
							or fx__.t_type == "Template Line [Word]"
							or fx__.t_type == "Template Line [Syl]"
							or fx__.t_type == "Template Line [Char]" then
							
							if syl.text ~= noblank1
								and syl.text ~= noblank2 then
								--[[---------------------------
								if fx__.t_type == "Line"
									or fx__.t_type == "Template Line [Word]"
									or fx__.t_type == "Template Line [Syl]"
									or fx__.t_type == "Template Line [Char]" then
									syl = line
								end
								--]]---------------------------
								effector.default_val2( )
								-----------------------------
								--shape_offset_shmove_x = syl.width/2 - 50				<-- el 50 hace referencia a la mitad del ancho de la shape
								--shape_offset_shmove_y = l.descent - syl.height/2 + 50	<-- el 50 hace referencia a la mitad del alto  de la shape
								shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", syl.height, syl.width, syl.height, syl.width + syl.height )
								shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", syl.height, syl.width + syl.height, syl.height, syl.width )
								----------------------------------------------
								S_ = aegisub.word( line.text, line.dur, aegisub.word2s( ) )
								----------------------------------------------
								word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = word.start_time, word.end_time, word.mid_time, word.dur, word.i, word.n, word.left, word.center, word.right, word.bottom, word.middle, word.top, word.width, word.height
								syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = syl.start_time, syl.end_time, syl.mid_time, syl.dur, syl.i, syl.n, syl.left, syl.center, syl.right, syl.bottom, syl.middle, syl.top, syl.width, syl.height
								furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								----------------------------------------------
								C_ = aegisub.syls2c( )
								wordsyl = { }
								wordsyl.i, wordsyl.n = aegisub.wordsi( syl.i )
								----------------------------------------------
								if fx__.t_type == "Template Line [Char]" then
									char.n = unicode.len( line.text_stripped )
								end
								----------------------------------------------
								fx.replay_fx, J = 1, 1
								maxJ = fx.replay_fx
								while J <= fx.replay_fx do
									j = 1
									moduler = (J - 1) / (maxJ - 1)
									if fx.replay_fx == 1 then
										moduler = 0
									end
									module = 0
									module1 = module
									module2 = module1
									fxgroup = true
									-----------------------------------------------
									effector.default_val( )
									-----------------------------------------------
									if pcall( loadstring( format( "return function( fx__, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) then
										variable_ = loadstring( format( "return function( fx__, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
										var_KEfx_ = variable_( fx__, line, x, y )
									end
									variable_ = loadstring( format( "return function( fx__, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
									if line.i == 1
										and syl.i == 1
										and J == 1 then
										var.once = remember( "var_once", variable_( fx__, line, x, y ) )
									else
										var.once = recall.var_once
									end
									if syl.i == 1
										and J == 1 then
										var.line = variable_( fx__, line, x, y )
									end
									if wordsyl.i == 1
										and J == 1 then
										var.word = variable_( fx__, line, x, y )
									end
									if J == 1 then
										var.rep = variable_( fx__, line, x, y )
									end
									var.syl = variable_( fx__, line, x, y )
									var.furi, var.char = var.syl, var.syl
									var.loop = variable_( fx__, line, x, y )
									-----------------------------------------------
									maxloop1 = loadstring( format( "return function( fx__, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
									maxloop_fx = maxloop1( fx__, line, x, y )
									loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (val_width + 2 * L.outline) / (val_height + 2 * L.outline) )
									maxloop_fx = maxloop1( fx__, line, x, y )
									fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
									fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
									fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
									fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
									maxj = fx.maxloop_fx
									-----------------------------------------------
									while j <= fx.maxloop_fx do
										var.loop = variable_( fx__, line, x, y )
										--variables de modulo--
										module = (j - 1) / (maxj - 1)
										if fx.maxloop_fx == 1 then
											module = 0
										end
										module1 = (syl.i + module - 1) / (syl.n + module - 1)
										if syl.n == 1 then
											module1 = module
										end
										module2 = (line.i + module1 - 1) / (line.n + module1 - 1)
										if line.n == 1 then
											module2 = module1
										end
										if wordsyl.n > 1 then
											modules3w = (wordsyl.i - 1) / (wordsyl.n - 1)
										end
										--variables de tiempo--
										fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										if fx__.start_t:match( "retime" ) then
											local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
											time_rtm = time_rtm( fx__, meta, line )
										else
											start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
											start_t	= start_t1( fx__, meta, line )
											fx.start_time = start_t[ 1 ] or line.start_time
											l.start_time = fx.start_time
											end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
											end_t = end_t1( fx__, meta, line )
											fx.end_time = end_t[ 1 ] or line.end_time
											l.end_time = fx.end_time
											fx.dur = fx.end_time - fx.start_time
										end
										---------------------------------------------------
										without = { }
										ini = line.start_time - fx.start_time
										without.syl = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + syl.start_time, ini + syl.start_time + ((syl.start_time == 0) and 1 or 0), ini + syl.end_time, ini + syl.end_time, text.alpha1, text.alpha3, text.alpha4 )
										syl.syl_start = ini + syl.start_time
										syl.syl_end = syl.syl_start + syl.dur
										word.word_start = ini + word.start_time
										word.word_end = word.word_start + word.dur
										--variables de punto de referencia--
										center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
										center_x = center_x1( fx__, meta, line, x, y )
										fx.center_x = center_x[ 1 ] or val_center
										center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
										center_y = center_y1( fx__, meta, line, x, y )
										fx.center_y = center_y[ 1 ] or val_middle
										--variables de escalas de funciones paramétricas-- 
										if j == 1 then
											scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
											scale_x = scale_x1( fx__, meta, line )
											fx.scale_x = scale_x[ 1 ] or 1
											if fx.scale_x <= 0 then
												fx.scale_x = 0.1
											end
											scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
											scale_y = scale_y1( fx__, meta, line )
											fx.scale_y = scale_y[ 1 ] or 1
											if fx.scale_y <= 0 then
												fx.scale_y = 0.1
											end
										end
										offset_maxspace = scale_x[ 2 ] or 0
										offset_h = center_y[ 2 ] or 0.9
										--variables de dominio de funciones--
										if j == 1 then
											s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
											s_i = s_i1( fx__, meta, line )
											fx.domain_i = s_i[ 1 ] or 0
											s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
											s_f = s_f1( fx__, meta, line )
											fx.domain_f = s_f[ 1 ] or 1
										end
										local s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
										--variables de funciones paramétricas--
										fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
										fun_x = fun_x1( fx__, meta, line, s )
										fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
										fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
										fun_y = fun_y1( fx__, meta, line, s )
										fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
										--definir líneas de texto, verticales u horizontales--
										fx.pos_x, fx.pos_y = effector.knj( fx__.v_kanji )
										fx.off_x, fx.off_y = effector.modify_pos( )
										--variables de posiciones--
										fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
										fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
										fx.pos_l = fx.pos_x - val_width / 2
										fx.pos_r = fx.pos_x + val_width / 2
										fx.pos_t = fx.pos_y - l.height / 2
										fx.pos_b = fx.pos_y + l.height / 2
										x, y = fx.pos_x, fx.pos_y
										--variables de tamaño--
										sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
										sizefx = sizefx1( fx__, meta, line, s )
										fx.sizex = L.scale_x
										fx.sizey = L.scale_y
										fx.tag_size = ""
										if #sizefx > 0 then
											fx.sizex = math.round( sizefx[ 1 ], 2 )
											fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
											fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
										end
										--variables de alineación y de capa (layer)--
										align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
										align = align1( fx__, meta, line, s )
										fx.align = ""
										if #align > 0 then
											fx.align = "\\an" .. align[ 1 ]
										end
										layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
										layer = layer1( fx__, meta, line, s )
										fx.layer = layer[ 1 ] or l_layer
										--variables de posiciones definitivas, dependiendo del "move"--
										move_x11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
										move_x = math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
										move_y11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
										move_y = math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
										--variables de tiempo del movimiento--
										fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
										move_t = move_t1( fx__, meta, line, s )
										fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
										fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
										tags_times = ""
										if #move_t > 0 then
											tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
										end
										--posiciones finales--
										effector.pos_config( )
										fx.pos = effector.pos( Nmove, tb_pos, tags_times )
										--------------------------------------------------
										returnfx = { [ 1 ] = fx__.returnfx }
										if pcall( loadstring( format( "return function( fx__, meta, syl, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
											returnfx1 = loadstring( format( "return function( fx__, meta, syl, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
											returnfx = returnfx1( fx__, meta, syl, line )
										end
										Rline = 1
										if returnfx[ 2 ] == "random" then
											Rline = 2 - R( count_fx + 1 )
										end
										T_line = false
										if #returnfx > 0
											or returnfx[ 1 ] ~= nil then
											if type( returnfx[ 1 ] ) == "table" then
												returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
											end
											returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
											fx.Det = ""
											tags_style = text.style
											if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
												fx.Det = "\\p1"
												if returnfx[ 1 ]:match( "\\p%d" ) then
													fx.Det = ""
												end
												tags_style = shape.style
											end
											if fx.Det == "\\p1"
												or returnfx[ 1 ]:match( "\\p%d" ) then
												if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
													or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
													fx.tag_size = ""
												elseif fx.tag_size == "" then
													fx.tag_size = "\\fscx100\\fscy100"
												end
											end
											if fx__.t_type ~= "Template Line [Word]"
												and fx__.t_type ~= "Template Line [Syl]"
												and fx__.t_type ~= "Template Line [Char]" then
												if fx__.language ~= "Automation Auto-4" then
													addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
													addtag = addtag1( fx__, meta, line, x, y )
													for k, v in pairs( addtag ) do
														if type( addtag[ k ] ) == "table" then
															addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
														end
													end
													fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
												else
													fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
												end
												fx.add_tags = tag.dark( fx.add_tags )
											else
												returnfx[ 1 ] = tag.to_temp( tag.HTML_to_ass( fx__.addtag ) )
												returnfx[ 1 ] = tag.dark( returnfx[ 1 ] )
												fx.add_tags = ""
												T_line = true
											end
											if fxgroup == true then
												if fx__.modify == false
													and fx__.namefx ~= "raw" then
													Ltags_style = ""
													if T_line == false then
														Ltags_style = tags_style
													end
													l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, Ltags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
													l.effect = "Effector [fx]"
													l.layer = fx.layer
													l.actor = actor_fx
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												elseif fx__.modify == false
													and fx__.namefx == "raw" then
													l.text = fx.tm( returnfx[ 1 ] )
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												else
													lines_comment = false
													line.start_time = fx.start_time
													line.end_time = fx.end_time
													line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
												end
											end
										end
										j = j + 1
										time_fff = tonumber( os.time( ) )
										aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
										aegisub.progress.set( 100 * line.i / line.n )
									end
									J = J + 1
								end
							end
						end

						if fx__.t_type == "Char" then
							if syl.text ~= noblank1
								and syl.text ~= noblank2 then
								-----------------------------
								sylchar = { i = 0 }
								for cfx in unicode.chars( syl.text_stripped ) do
									char.text = cfx
									char.text_stripped = cfx
									width, height, descent, extlead = aegisub.text_extents( line.styleref, char.text )
									char.width = width
									char.height = height
									char.top = l.top
									char.middle = l.middle
									char.bottom = l.bottom
									char.left = left
									char.right = left + char.width
									char.center = left + char.width / 2
									sylchar.i = sylchar.i + ((char.text == " ") and 0 or 1)
									sylchar.n = unicode.len( syl.text_stripped:gsub( " ", "" ) )
									char.start_time = syl.start_time + syl.duration * (sylchar.i - 1) / sylchar.n
									char.end_time = syl.start_time + syl.duration * sylchar.i / sylchar.n
									char.duration = char.end_time - char.start_time
									char.dur = char.duration
									char.mid_time = char.start_time + char.dur / 2
									sylchar.start_time = char.start_time - syl.start_time
									sylchar.mid_time = char.mid_time - syl.start_time
									sylchar.end_time = char.end_time - syl.start_time
									char.widthmax = math.max( unpack( mmwth[ ii ].ch ) )
									char.widthmin = math.min( unpack( mmwth[ ii ].ch ) )
									char.durmax = math.max( unpack( mmdur[ ii ].ch ) )
									char.durmin = math.min( unpack( mmdur[ ii ].ch ) )
									-----------------------------------------------
									effector.default_val2( )
									-----------------------------------------------
									shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", char.height, char.width, char.height, char.width + char.height )
									shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", char.height, char.width + char.height, char.height, char.width )
									-----------------------------------------------
									W_ = aegisub.word( line.text, line.dur, aegisub.word2c( ) )
									-----------------------------------------------
									word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = word.start_time, word.end_time, word.mid_time, word.dur, word.i, word.n, word.left, word.center, word.right, word.bottom, word.middle, word.top, word.width, word.height
									syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = syl.start_time, syl.end_time, syl.mid_time, syl.dur, syl.i, syl.n, syl.left, syl.center, syl.right, syl.bottom, syl.middle, syl.top, syl.width, syl.height
									furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = hira.start_time, hira.end_time, hira.mid_time, hira.dur, hira.i, hira.n, hira.left, hira.center, hira.right, hira.bottom, hira.middle, hira.top, hira.width, hira.height
									kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = kata.start_time, kata.end_time, kata.mid_time, kata.dur, kata.i, kata.n, kata.left, kata.center, kata.right, kata.bottom, kata.middle, kata.top, kata.width, kata.height
									roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = roma.start_time, roma.end_time, roma.mid_time, roma.dur, roma.i, roma.n, roma.left, roma.center, roma.right, roma.bottom, roma.middle, roma.top, roma.width, roma.height
									char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = char.start_time, char.end_time, char.mid_time, char.dur, char.i, char.n, char.left, char.center, char.right, char.bottom, char.middle, char.top, char.width, char.height
									-----------------------------------------------
									wordchar, wordsyl = { }, { }
									wordchar.i, wordchar.n = aegisub.wordci( char.i )
									wordsyl.i,  wordsyl.n  = aegisub.wordsi( syl.i )
									-----------------------------------------------
									fx.replay_fx, J = 1, 1
									maxJ = fx.replay_fx
									while J <= fx.replay_fx do
										j = 1
										moduler = (J - 1) / (maxJ - 1)
										if fx.replay_fx == 1 then
											moduler = 0
										end
										module = 0
										module1 = module
										module2 = module1
										fxgroup = true
										-----------------------------------------------
										effector.default_val( )
										-----------------------------------------------
										if pcall( loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) == true then
											variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
											var_KEfx_ = variable_( fx__, meta, line, x, y )
										end
										variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
										if line.i == 1
											and syl.i == 1
											and sylchar.i == 1
											and J == 1 then
											var.once = remember( "var_once", variable_( fx__, meta, line, x, y ) )
										else
											var.once = recall.var_once
										end
										if syl.i  == 1
										and sylchar.i == 1
											and J == 1 then
											var.line = variable_( fx__, meta, line, x, y )
										end
										if wordchar.i == 1
											and J == 1 then
											var.word = variable_( fx__, meta, line, x, y )
										end
										if sylchar.i == 1
											and J == 1 then
											var.syl = variable_( fx__, meta, line, x, y )
										end
										if J == 1 then
											var.rep = variable_( fx__, meta, line, x, y )
										end
										var.char = variable_( fx__, meta, line, x, y )
										var.furi = var.char
										var.loop = variable_( fx__, meta, line, x, y )
										text.char_size( )
										-----------------------------------------------
										maxloop1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
										maxloop_fx = maxloop1( fx__, meta, line, x, y )
										loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (char.width + 2 * L.outline) / (line.height + 2 * L.outline) )
										maxloop_fx = maxloop1( fx__, meta, line, x, y )
										fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
										fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
										fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
										fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
										maxj = fx.maxloop_fx
										-----------------------------------------------
										while j <= fx.maxloop_fx do
											ci = 0
											var.loop = variable_( fx__, meta, line, x, y )
											--variables de modulo--
											module = (j - 1) / (maxj - 1)
											if fx.maxloop_fx == 1 then
												module = 0
											end
											module1 = (char.i + module - 1) / (char.n + module - 1)
											if char.n == 1 then
												module1 = module
											end
											module2 = (line.i + module1 - 1) / (line.n + module1 - 1)
											if line.n == 1 then
												module2 = module1
											end
											if wordsyl.n > 1 then
												modules3w = (wordsyl.i - 1) / (wordsyl.n - 1)
											end
											if sylchar.n > 1 then
												modulec3s = (sylchar.i - 1) / (sylchar.n - 1)
											end
											if type( wordchar.n ) == "number"
												and wordchar.n > 1 then
												modulec3w = (wordchar.i - 1) / (wordchar.n - 1)
											end
											--variables de tiempo--
											fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
												function( time_HMS )
													return tostring( HMS_to_ms( time_HMS ) )
												end
											)
											fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
												function( time_HMS )
													return tostring( HMS_to_ms( time_HMS ) )
												end
											)
											if fx__.start_t:match( "retime" ) then
												local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
												time_rtm = time_rtm( fx__, meta, line, module )
											else
												start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
												start_t	= start_t1( fx__, meta, line, module )
												fx.start_time = start_t[ 1 ] or line.start_time
												l.start_time = fx.start_time
												end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
												end_t = end_t1( fx__, meta, line, module )
												fx.end_time = end_t[ 1 ] or line.end_time
												l.end_time = fx.end_time
												fx.dur = fx.end_time - fx.start_time
											end
											---------------------------------------------------
											without = { }
											ini = line.start_time - fx.start_time
											without.char = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + char.start_time, ini + char.start_time + ((char.start_time == 0) and 1 or 0), ini + char.end_time, ini + char.end_time, text.alpha1, text.alpha3, text.alpha4 )
											without.syl = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + syl.start_time, ini + syl.start_time + ((syl.start_time == 0) and 1 or 0), ini + syl.end_time, ini + syl.end_time, text.alpha1, text.alpha3, text.alpha4 )
											syl.syl_start = ini + syl.start_time
											syl.syl_end = syl.syl_start + syl.dur
											word.word_start = ini + word.start_time
											word.word_end = word.word_start + word.dur
											char.syl_start = ini + char.start_time
											char.syl_end = char.syl_start + char.dur
											--variables de punto de referencia--
											center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
											center_x = center_x1( fx__, meta, line, x, y )
											fx.center_x = center_x[ 1 ] or val_center
											center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
											center_y = center_y1( fx__, meta, line, x, y )
											fx.center_y = center_y[ 1 ] or val_middle
											--variables de escalas de funciones paramétricas-- 
											if j == 1 then
												scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
												scale_x	= scale_x1( fx__, meta, line )
												fx.scale_x = scale_x[ 1 ] or 1
												if fx.scale_x <= 0 then
													fx.scale_x = 0.1
												end
												scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
												scale_y	= scale_y1( fx__, meta, line )
												fx.scale_y = scale_y[ 1 ] or 1
												if fx.scale_y <= 0 then
													fx.scale_y = 0.1
												end
											end
											offset_maxspace = scale_x[ 2 ] or 0
											offset_h = center_y[ 2 ] or 0.9
											--variables de dominio de funciones--
											if j == 1 then
												s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
												s_i = s_i1( fx__, meta, line )
												fx.domain_i = s_i[ 1 ] or 0
												s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
												s_f = s_f1( fx__, meta, line )
												fx.domain_f = s_f[ 1 ] or 1
											end
											local s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
											--variables de funciones paramétricas--
											fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
											fun_x = fun_x1( fx__, meta, line, s )
											fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
											fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
											fun_y = fun_y1( fx__, meta, line, s )
											fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
											--definir líneas de texto, verticales u horizontales--
											fx.pos_x, fx.pos_y = effector.knj( fx__.v_kanji )
											fx.off_x, fx.off_y = effector.modify_pos( )
											--variables de posiciones--
											fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
											fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
											fx.pos_l = fx.pos_x - char.width / 2
											fx.pos_r = fx.pos_x + char.width / 2
											fx.pos_t = fx.pos_y - char.height / 2
											fx.pos_b = fx.pos_y + char.height / 2
											x, y = fx.pos_x, fx.pos_y
											--variables de tamaño--
											sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
											sizefx = sizefx1( fx__, meta, line, s )
											fx.sizex = L.scale_x
											fx.sizey = L.scale_y
											fx.tag_size = ""
											if #sizefx > 0 then
												fx.sizex = math.round( sizefx[ 1 ], 2 )
												fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
												fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
											end
											--variables de alineación y de capa (layer)--
											align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
											align = align1( fx__, meta, line, s )
											fx.align = ""
											if #align > 0 then
												fx.align = "\\an" .. align[ 1 ]
											end
											layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
											layer = layer1( fx__, meta, line, s )
											fx.layer = layer[ 1 ] or l_layer
											--variables de posiciones, dependiendo del "move"--
											move_x11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
											move_x	= math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
											move_y11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
											move_y	= math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
											--variables de tiempo del movimiento--
											fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
												function( time_HMS )
													return tostring( HMS_to_ms( time_HMS ) )
												end
											)
											move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
											move_t	= move_t1( fx__, meta, line, s )
											fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
											fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
											tags_times = ""
											if #move_t > 0 then
												tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
											end
											--posiciones finales--
											effector.pos_config( )
											fx.pos = effector.pos( Nmove, tb_pos, tags_times )
											--------------------------------------------------
											returnfx = { [ 1 ] = fx__.returnfx }
											if pcall( loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
												returnfx1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
												returnfx = returnfx1( fx__, meta, line )
											end
											Rline = 1
											if returnfx[ 2 ] == "random" then
												Rline = 2 - R( count_fx + 1 )
											end
											if fx__.noblank == true
												and (returnfx[ 1 ] == "" or returnfx[ 1 ] == " ") then
												returnfx[ 1 ] = nil
											end
											if #returnfx > 0
												or returnfx[ 1 ] ~= nil then
												if type( returnfx[ 1 ] ) == "table" then
													returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
												end
												returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
												fx.Det = ""
												tags_style = text.style
												if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
													fx.Det = "\\p1"
													if returnfx[ 1 ]:match( "\\p%d" ) then
														fx.Det = ""
													end
													tags_style = shape.style
												end
												if fx.Det == "\\p1"
													or returnfx[ 1 ]:match( "\\p%d" ) then
													if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
														or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
														fx.tag_size = ""
													elseif fx.tag_size == "" then
														fx.tag_size = "\\fscx100\\fscy100"
													end
												end
												if fx__.language ~= "Automation Auto-4" then
													addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
													addtag = addtag1( fx__, meta, line, x, y )
													for k, v in pairs( addtag ) do
														if type( addtag[ k ] ) == "table" then
															addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
														end
													end
													fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
												else
													fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
												end
												fx.add_tags = tag.dark( fx.add_tags )
												if fxgroup == true then
													if fx__.modify == false
														and fx__.namefx ~= "raw" then
														l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, tags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
														l.effect = "Effector [fx]"
														l.layer = fx.layer
														l.actor = actor_fx
														subs.insert( #subs + Rline, l )
														count_fx = count_fx + 1
													elseif fx__.modify == false
														and fx__.namefx == "raw" then
														l.text = fx.tm( returnfx[ 1 ] )
														subs.insert( #subs + Rline, l )
														count_fx = count_fx + 1
													else
														lines_comment = false
														line.start_time = fx.start_time
														line.end_time = fx.end_time
														line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
													end
												end
												ci = 1
											end
											j = j + 1
											time_fff = tonumber( os.time( ) )
											aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
											aegisub.progress.set( 100 * line.i / line.n )
										end
										J = J + 1
									end
									left = left + width
									char.i = char.i + ci
								end
							end
						end
						
						if fx__.t_type == "Furi" then
							if furi.text ~= noblank1
								and furi.text ~= noblank2 then
								------------------------------
								function maxmin( mode )
									local mwidth, mduration = { }, { }
									for i = 1, furi.n do
										mwidth[ i ] = line.furi[ i ].width + line.furi[ i ].postspacewidth + line.furi[ i ].prespacewidth
										mduration[ i ] = line.furi[ i ].duration
									end
									if mode == "maxw" then
										return math.max( unpack( mwidth ) )
									end
									if mode == "minw" then
										return math.min( unpack( mwidth ) )
									end
									if mode == "maxd" then
										return math.max( unpack( mduration ) )
									end
									if mode == "mind" then
										return math.min( unpack( mduration ) )
									end
								end
								furi.center = furi.center + l.left
								furi.middle = syl.middle - l.height + l.descent / 2
								furi.i = i
								furi.n = line.furi.n
								furi.left = furi.center - furi.width / 2
								furi.right = furi.center + furi.width / 2
								furi.top = furi.middle - furi.height / 2
								furi.bottom = furi.middle + furi.height / 2
								furi.dur = furi.duration
								furi.mid_time = furi.start_time + furi.dur / 2
								furi.widthmax = maxmin( "maxw" )
								furi.widthmin = maxmin( "minw" )
								furi.durmax = maxmin( "maxd" )
								furi.durmin = maxmin( "mind" )
								----------------------------------------------
								effector.default_val2( )
								----------------------------------------------
								shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", furi.height, furi.width, furi.height, furi.width + furi.height )
								shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", furi.height, furi.width + furi.height, furi.height, furi.width )
								----------------------------------------------
								word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = syl.start_time, syl.end_time, syl.mid_time, syl.dur, syl.i, syl.n, syl.left, syl.center, syl.right, syl.bottom, syl.middle, syl.top, syl.width, syl.height
								furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = furi.start_time, furi.end_time, furi.mid_time, furi.dur, furi.i, furi.n, furi.left, furi.center, furi.right, furi.bottom, furi.middle, furi.top, furi.width, furi.height
								hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								----------------------------------------------
								fx.replay_fx, J = 1, 1
								maxJ = fx.replay_fx
								while J <= fx.replay_fx do
									j = 1
									moduler = (J - 1) / (maxJ - 1)
									if fx.replay_fx == 1 then
										moduler = 0
									end
									module = 0
									module1 = module
									module2 = module1
									fxgroup = true
									-----------------------------------------------
									effector.default_val( )
									-----------------------------------------------
									if pcall( loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) == true then
										variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
										var_KEfx_ = variable_( fx__, meta, line, x, y )
									end
									variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
									if line.i == 1
										and furi.i == 1
										and J == 1 then
										var.once = remember( "v_once", variable_( fx__, meta, line, x, y ) )
									else
										var.once = recall.v_once
									end
									if furi.i == 1
										and J == 1 then
										var.line = variable_( fx__, meta, line, x, y )
									end
									if J == 1 then
										var.rep  = variable_( fx__, meta, line, x, y )
									end
									var.furi = variable_( fx__, meta, line, x, y )
									var.word, var.syl, var.char = var.furi, var.furi, var.furi
									var.loop = variable_( fx__, meta, line, x, y )
									-----------------------------------------------
									maxloop1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (furi.width + 2 * L.outline) / (furi.height + 2 * L.outline) )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
									fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
									fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
									fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
									maxj = fx.maxloop_fx
									-----------------------------------------------
									while j <= fx.maxloop_fx do
										var.loop = variable_( fx__, meta, line, x, y )
										--variables de modulo--
										module = (j - 1) / (maxj - 1)
										if fx.maxloop_fx == 1 then
											module = 0
										end
										module1 = (furi.i + module - 1) / (furi.n + module - 1)
										if furi.n == 1 then
											module1 = module
										end
										module2 = (line.i + module1 - 1) / (line.n + module1 - 1)
										if line.n == 1 then
											module2 = module1
										end
										--variables de tiempo--
										fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										if fx__.start_t:match( "retime" ) then
											local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
											time_rtm = time_rtm( fx__, meta, line )
										else
											start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
											start_t	= start_t1( fx__, meta, line )
											fx.start_time = start_t[ 1 ] or line.start_time
											l.start_time = fx.start_time
											end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
											end_t = end_t1( fx__, meta, line )
											fx.end_time = end_t[ 1 ] or line.end_time
											l.end_time = fx.end_time
											fx.dur = fx.end_time - fx.start_time
										end
										---------------------------------------------------
										without = { }
										ini = line.start_time - fx.start_time
										without.furi = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + furi.start_time, ini + furi.start_time + ((furi.start_time == 0) and 1 or 0), ini + furi.end_time, ini + furi.end_time, text.alpha1, text.alpha3, text.alpha4 )
										furi.syl_start = ini + furi.start_time
										furi.syl_end = furi.syl_start + furi.dur
										--variables de punto de referencia--
										center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
										center_x = center_x1( fx__, meta, line, x, y )
										fx.center_x = center_x[ 1 ] or val_center
										center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
										center_y = center_y1( fx__, meta, line, x, y )
										fx.center_y = center_y[ 1 ] or val_middle
										--variables de escalas de funciones paramétricas-- 
										if j == 1 then
											scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
											scale_x	= scale_x1( fx__, meta, line )
											fx.scale_x = scale_x[ 1 ] or 1
											if fx.scale_x <= 0 then
												fx.scale_x = 0.1
											end
											scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
											scale_y	= scale_y1( fx__, meta, line )
											fx.scale_y = scale_y[ 1 ] or 1
											if fx.scale_y <= 0 then
												fx.scale_y = 0.1
											end
										end
										offset_maxspace = scale_x[ 2 ] or 0
										--variables de dominio de funciones--
										if j == 1 then
											s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
											s_i = s_i1( fx__, meta, line )
											fx.domain_i = s_i[ 1 ] or 0
											s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
											s_f = s_f1( fx__, meta, line )
											fx.domain_f = s_f[ 1 ] or 1
										end
										local s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
										--variables de funciones paramétricas--
										fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
										fun_x = fun_x1( fx__, meta, line, s )
										fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
										fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
										fun_y = fun_y1( fx__, meta, line, s )
										fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
										--definir posición inicial--
										fx.pos_x = fx.center_x
										fx.pos_y = fx.center_y
										--fx.pos_x, fx.pos_y = effector.knj( fx__.v_kanji )
										fx.off_x, fx.off_y = effector.modify_pos( )
										--variables de posiciones--
										fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
										fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
										fx.pos_l = fx.pos_x - furi.width / 2
										fx.pos_r = fx.pos_x + furi.width / 2
										fx.pos_t = fx.pos_y - furi.height / 2
										fx.pos_b = fx.pos_y + furi.height / 2
										x, y = fx.pos_x, fx.pos_y
										--variables de tamaño--
										sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
										sizefx = sizefx1( fx__, meta, line, s )
										fx.sizex = L.scale_x
										fx.sizey = L.scale_y
										fx.tag_size = ""
										if #sizefx > 0 then
											fx.sizex = math.round( sizefx[ 1 ], 2 )
											fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
											fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
										end
										--variables de alineación y de capa (layer)--
										align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
										align = align1( fx__, meta, line, s )
										fx.align = ""
										if #align > 0 then
											fx.align = "\\an" .. align[ 1 ]
										end
										layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
										layer = layer1( fx__, meta, line, s )
										fx.layer = layer[ 1 ] or l_layer
										--variables de posiciones definitivas, dependiendo del "move"--
										move_x11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
										move_x = math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
										move_y11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
										move_y = math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
										--variables de tiempo del movimiento--
										fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
										move_t = move_t1( fx__, meta, line, s )
										fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
										fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
										tags_times = ""
										if #move_t > 0 then
											tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
										end
										--posiciones finales--
										effector.pos_config( )
										fx.pos = effector.pos( Nmove, tb_pos, tags_times )
										--------------------------------------------------
										returnfx = { [ 1 ] = fx__.returnfx }
										if pcall( loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
											returnfx1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
											returnfx = returnfx1( fx__, meta, line )
										end
										Rline = 1
										if returnfx[ 2 ] == "random" then
											Rline = 2 - R( count_fx + 1 )
										end
										if #returnfx > 0
											or returnfx[ 1 ] ~= nil then
											if type( returnfx[ 1 ] ) == "table" then
												returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
											end
											returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
											fx.Det = ""
											tags_style = text.style
											if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
												fx.Det = "\\p1"
												if returnfx[ 1 ]:match( "\\p%d" ) then
													fx.Det = ""
												end
												tags_style = shape.style
											end
											if fx.Det == "\\p1"
												or returnfx[ 1 ]:match( "\\p%d" ) then
												if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
													or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
													fx.tag_size = ""
												elseif fx.tag_size == "" then
													fx.tag_size = "\\fscx100\\fscy100"
												end
											end
											if fx__.language ~= "Automation Auto-4" then
												addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
												addtag = addtag1( fx__, meta, line, x, y )
												for k, v in pairs( addtag ) do
													if type( addtag[ k ] ) == "table" then
														addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
													end
												end
												fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
											else
												fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
											end
											fx.add_tags = tag.dark( fx.add_tags )
											if fxgroup == true then
												if fx__.modify == false
													and fx__.namefx ~= "raw" then
													l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, tags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
													l.effect = "Effector [fx]"
													l.style = furi.style.name
													l.layer = fx.layer
													l.actor = actor_fx
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												elseif fx__.modify == false
													and fx__.namefx == "raw" then
													l.text = fx.tm( returnfx[ 1 ] )
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												else
													lines_comment = false
													line.start_time = fx.start_time
													line.end_time = fx.end_time
													line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
												end
											end
										end
										j = j + 1
										time_fff = tonumber( os.time( ) )
										aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
										aegisub.progress.set( 100 * line.i / line.n )
									end
									J = J + 1
								end
							end
						end
					end
				end
			end
		end
		
		if (fx__.t_type == "Translation Line"
			or fx__.t_type == "Translation Word"
			or fx__.t_type == "Translation Char"
			or fx__.t_type == "Word")
			and line.text_stripped:gsub( " ", "" ):gsub( "	", "" ) ~= noblank1 then
			
			local x = line.center
			local y	= line.middle
			if fx__.folderfx == "lead-in[fx]" then
				library_fx, library_mode = "leadin_fx_library", "leadin_fx"
			elseif fx__.folderfx == "hi-light[fx]" then
				library_fx, library_mode = "hilight_fx_library", "hilight_fx"
			elseif fx__.folderfx == "lead-out[fx]" then
				library_fx, library_mode = "leadout_fx_library", "leadout_fx"
			elseif fx__.folderfx == "shape[fx]" then
				library_fx, library_mode = "shape_fx_library", "shape_fx"
			elseif fx__.folderfx == "translation[fx]" then
				library_fx, library_mode = "transla_fx_library", "transla_fx"
			elseif fx__.folderfx == "function[fx]" then
				library_fx, library_mode = "function_fx_library", "function_fx"
			end
			if fx__.printfx == true then
				library_title = fx__.folderfx
				lines_comment = false
				if line.i == 1 then
					newFX = fx__.namefx:gsub( " ", "_" )
					if newFX == "" then
						newFX = library_mode .. "_KE" .. tostring( os.time( ) ):sub( -6, -1 )
					end
					if fx__.folderfx == "translation[fx]" then
						fx_GUI = "Trans_Box"
					elseif fx__.folderfx == "shape[fx]" then
						fx_GUI = "Shape_Box"
					else
						fx_GUI = "PfxM_Box"
					end
					New_fx_config = format( "%s = table.duplicate(%s); table.inbox(%s, \"%s: %s\",\"%s\",%s,%s,\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s); table.insert(%s, %s); table.insert(%s, \"%s\")",
						newFX, fx_GUI, newFX, library_title, newFX:gsub( "_", " " ), fx_box[ 29 ].value, ((fx_box[ 30 ].value == true) and "true" or "false"),
						((fx_box[ 31 ].value == true) and "true" or "false"), fx_box[ 32 ].value, fx_box[ 33 ].value, fx_box[ 34 ].value, fx_box[ 35 ].value,
						fx_box[ 36 ].value, fx_box[ 37 ].value, Ps( fx_box[ 38 ].text ), Ps( fx_box[ 39 ].text ), Ps( fx_box[ 40 ].text ),
						Ps( fx_box[ 41 ].text ), Ps( fx_box[ 42 ].text ), Ps( fx_box[ 43 ].text ), Ps( fx_box[ 44 ].text ), Ps( fx_box[ 45 ].text ),
						Ps( fx_box[ 46 ].text ), Ps( fx_box[ 47 ].text ), Ps( fx_box[ 48 ].text ), Ps( fx_box[ 49 ].text ), Ps( fx_box[ 50 ].text ),
						Ps( fx_box[ 51 ].text ), Ps( fx_box[ 52 ].text ), Ps( fx_box[ 53 ].text ), Ps( fx_box[ 54 ].text ), Ps( fx_box[ 55 ].text ),
						Ps( fx_box[ 56 ].text ), Ps( fx_box[ 57 ].text ), fx_box[ 66 ].value, ((fx_box[ 67 ].value == true) and "true" or "false"),
						library_fx, newFX, library_mode, newFX:gsub( "_", " " )
					)
					if Path_Effector_newfx_lua == nil then
						l.comment = true
						l.effect = "Effector [fx] Config"
						l.start_time, l.end_time = 0, 0
						l.text = New_fx_config
						subs.append( l )
					else
						if fx__.folderfx == "lead-in[fx]" then
							fx_libx = "LIfx"
						elseif fx__.folderfx == "hi-light[fx]" then
							fx_libx = "HLfx"
						elseif fx__.folderfx == "lead-out[fx]" then
							fx_libx = "LOfx"
						elseif fx__.folderfx == "shape[fx]" then
							fx_libx = "SHfx"
						elseif fx__.folderfx == "translation[fx]" then
							fx_libx = "TLfx"
						elseif fx__.folderfx == "function[fx]" then
							fx_libx = "FTfx"
						end
						fx_date = format( "--[[%s %s]] ", fx_libx, tostring( os.date( ) ):sub( 1, -4 ):gsub( "(%d+)/(%d+)", "%2/%1" ) )
						effector.savefx( fx_date .. New_fx_config .. "\n	", Path_Effector_newfx_lua )
						aegisub.debug.out( "The effect ★%s★ is saved in the Folder %s, you must reload the script Kara Effector so you can see it in the list effects type %s.\n\nEl efecto ★%s★ se ha guardado en el Folder %s, debes recargar el script Kara Effector para que puedas verlo en la lista de efectos tipo %s.", newFX:gsub( "_", " " ), fx__.folderfx, fx__.folderfx, newFX:gsub( "_", " " ), fx__.folderfx, fx__.folderfx )
						aegisub.progress.set( 100 )
					end
				end
			else
				if fx__.namefx:sub( 1, 7 ) == "export " then
					if line.i == 1 then
						export_text( fx__.namefx )
						lines_comment = false
					end
					fx_box[ 62 ].text = ""
				else
					actor_fx = fx__.effect:gsub( "%[.+[%W+]*", "" )
					actor_fx = actor_fx:gsub( "%d%d/%d%d/%d%d %d%d:%d%d: ", "" )
					
					if line.text_stripped:gsub( " ", "" ):gsub( "	", "" ) ~= noblank1
						and line.duration > 0 then

						if fx__.t_type == "Translation Line" then
							-----------------------------------------------
							effector.default_val2( )
							-----------------------------------------------
							shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", l.height, l.width, l.height, l.width + l.height )
							shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", l.height, l.width + l.height, l.height, l.width )
							-----------------------------------------------
							word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
							-----------------------------------------------
							W_ = aegisub.line2W( )
							S_ = aegisub.line2S( )
							C_ = aegisub.line2C( )
							-----------------------------------------------
							fx.replay_fx, J = 1, 1
							maxJ = fx.replay_fx
							while J <= fx.replay_fx do
								j = 1
								moduler = (J - 1) / (maxJ - 1)
								if fx.replay_fx == 1 then
									moduler = 0
								end
								module = 0
								module1 = module
								module2 = module1
								fxgroup = true
								-----------------------------------------------
								effector.default_val( )
								-----------------------------------------------
								if pcall( loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) == true then
									variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
									var_KEfx_ = variable_( fx__, meta, line, x, y )
								end
								variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
								if line.i == 1
									and J == 1 then
									var.once = remember( "var_once", variable_( fx__, meta, line, x, y ) )
								else
									var.once = recall.var_once
								end
								if J == 1 then
									var.rep = variable_( fx__, meta, line, x, y )
								end
								var.line = variable_( fx__, meta, line, x, y )
								var.word, var.syl, var.furi, var.char = var.line, var.line, var.line, var.line
								var.loop = variable_( fx__, meta, line, x, y )
								-----------------------------------------------
								maxloop1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
								maxloop_fx = maxloop1( fx__, meta, line, x, y )
								loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (line.width + 2 * L.outline) / (line.height + 2 * L.outline) )
								maxloop_fx = maxloop1( fx__, meta, line, x, y )
								fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
								fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
								fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
								fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
								maxj = fx.maxloop_fx
								-----------------------------------------------
								while j <= fx.maxloop_fx do
									var.loop = variable_( fx__, meta, line, x, y )
									--variables de modulo--
									module = (j - 1) / (maxj - 1)
									if fx.maxloop_fx == 1 then
										module = 0
									end
									module2 = (line.i + module - 1) / (line.n + module - 1)
									if line.n == 1 then
										module2 = module
									end
									--variables de tiempo--
									fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
										function( time_HMS )
											return tostring( HMS_to_ms( time_HMS ) )
										end
									)
									fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
										function( time_HMS )
											return tostring( HMS_to_ms( time_HMS ) )
										end
									)
									if fx__.start_t:match( "retime" ) then
										local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
										time_rtm = time_rtm( fx__, meta, line )
									else
										start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
										start_t	= start_t1( fx__, meta, line )
										fx.start_time = start_t[ 1 ] or line.start_time
										l.start_time = fx.start_time
										end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
										end_t = end_t1( fx__, meta, line )
										fx.end_time = end_t[ 1 ] or line.end_time
										l.end_time = fx.end_time
										fx.dur = fx.end_time - fx.start_time
									end
									---------------------------------------------------
									--variables de punto de referencia--
									center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
									center_x = center_x1( fx__, meta, line, x, y )
									fx.center_x = center_x[ 1 ] or val_center
									center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
									center_y = center_y1( fx__, meta, line, x, y )
									fx.center_y = center_y[ 1 ] or val_middle
									--variables de escalas de funciones paramétricas-- 
									if j == 1 then
										scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
										scale_x	= scale_x1( fx__, meta, line )
										fx.scale_x = scale_x[ 1 ] or 1
										if fx.scale_x <= 0 then
											fx.scale_x = 0.1
										end
										scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
										scale_y	= scale_y1( fx__, meta, line )
										fx.scale_y = scale_y[ 1 ] or 1
										if fx.scale_y <= 0 then
											fx.scale_y = 0.1
										end
									end
									offset_maxspace = scale_x[ 2 ] or 0
									--variables de dominio de funciones--
									if j == 1 then
										s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
										s_i = s_i1( fx__, meta, line )
										fx.domain_i = s_i[ 1 ] or 0
										s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
										s_f = s_f1( fx__, meta, line )
										fx.domain_f = s_f[ 1 ] or 1
									end
									local
									s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
									--variables de funciones paramétricas--
									fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
									fun_x = fun_x1( fx__, meta, line, s )
									fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
									fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
									fun_y = fun_y1( fx__, meta, line, s )
									fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
									--definir las posiciones iniciales--
									fx.pos_x = fx.center_x
									fx.pos_y = fx.center_y
									fx.off_x, fx.off_y = effector.modify_pos( )
									--variables de posiciones--
									fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
									fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
									fx.pos_l = fx.pos_x - l.width / 2
									fx.pos_r = fx.pos_x + l.width / 2
									fx.pos_t = fx.pos_y - l.height / 2
									fx.pos_b = fx.pos_y + l.height / 2
									x, y = fx.pos_x, fx.pos_y
									--variables de tamaño--
									sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
									sizefx = sizefx1( fx__, meta, line, s )
									fx.sizex = L.scale_x
									fx.sizey = L.scale_y
									fx.tag_size = ""
									if #sizefx > 0 then
										fx.sizex = math.round( sizefx[ 1 ], 2 )
										fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
										fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
									end
									--variables de alineación y de capa (layer)--
									align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
									align = align1( fx__, meta, line, s )
									fx.align = ""
									if #align > 0 then
										fx.align = "\\an" .. align[ 1 ]
									end
									layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
									layer = layer1( fx__, meta, line, s )
									fx.layer = layer[ 1 ] or l_layer
									--variables de posiciones, dependiendo del "move"--
									move_x11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
									move_x = math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
									move_y11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
									move_y = math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
									--variables de tiempo del movimiento--
									fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
										function( time_HMS )
											return tostring( HMS_to_ms( time_HMS ) )
										end
									)
									move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
									move_t = move_t1( fx__, meta, line, s )
									fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
									fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
									tags_times = ""
									if #move_t > 0 then
										tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
									end
									--posiciones finales--
									effector.pos_config( )
									fx.pos = effector.pos( Nmove, tb_pos, tags_times )
									--------------------------------------------------
									returnfx = { [ 1 ] = fx__.returnfx }
									if pcall( loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
										returnfx1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
										returnfx = returnfx1( fx__, meta, line )
									end
									Rline = 1
									if returnfx[ 2 ] == "random" then
										Rline = 2 - R( count_fx + 1 )
									end
									if #returnfx > 0
										or returnfx[ 1 ] ~= nil then
										if type( returnfx[ 1 ] ) == "table" then
											returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
										end
										returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
										fx.Det = ""
										tags_style = text.style
										if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
											fx.Det = "\\p1"
											if returnfx[ 1 ]:match( "\\p%d" ) then
												fx.Det = ""
											end
											tags_style = shape.style
										end
										if fx.Det == "\\p1"
											or returnfx[ 1 ]:match( "\\p%d" ) then
											if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
												or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
												fx.tag_size = ""
											elseif fx.tag_size == "" then
												fx.tag_size = "\\fscx100\\fscy100"
											end
										end
										if fx__.language ~= "Automation Auto-4" then
											addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
											addtag = addtag1( fx__, meta, line, x, y )
											for k, v in pairs( addtag ) do
												if type( addtag[ k ] ) == "table" then
													addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
												end
											end
											fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
										else
											fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
										end
										fx.add_tags = tag.dark( fx.add_tags )
										if fxgroup == true then
											if fx__.modify == false
												and fx__.namefx ~= "raw" then
												l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, tags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
												l.effect = "Effector [fx]"
												l.layer = fx.layer
												l.actor = actor_fx
												subs.insert( #subs + Rline, l )
												count_fx = count_fx + 1
											elseif fx__.modify == false
												and fx__.namefx == "raw" then
												l.text = fx.tm( returnfx[ 1 ] )
												subs.insert( #subs + Rline, l )
												count_fx = count_fx + 1
											else
												lines_comment = false
												line.start_time = fx.start_time
												line.end_time = fx.end_time
												line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
											end
										end
									end
									j = j + 1
									time_fff = tonumber( os.time( ) )
									aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
									aegisub.progress.set( 100 * line.i / line.n )
								end
								J = J + 1
							end
						end

						if fx__.t_type == "Word"
							or fx__.t_type == "Translation Word" then
							-----------------------------------------------
							fx.replay_fx, J = 1, 1
							maxJ = fx.replay_fx
							while J <= fx.replay_fx do
								moduler = (J - 1) / (maxJ - 1)
								if fx.replay_fx == 1 then
									moduler = 0
								end
								module = 0
								module1 = module
								module2 = module1
								fxgroup = true
								--------------------------------------------------
								word = { }
								for w in line.text_stripped:gmatch( "%S+" ) do
									table.insert( word, w )
								end
								word.i, word.n, width, left = 1, #word, 0, line.left
								--------------------------------------------------
								for w in line.text_stripped:gsub( "\\N", " " ):gsub( "  ", " " ):gmatch( "%S+" ) do
									j = 1
									word.text = w
									word.text_stripped = w
									width = aegisub.text_extents( line.styleref, word.text )
									widtht = aegisub.text_extents( line.styleref, word.text .. " " )
									word.width = width
									word.height = l.height
									word.top = l.top
									word.middle = l.middle
									word.bottom = l.bottom
									word.left = left
									word.right = left + word.width
									word.center = left + word.width / 2
									word.start_time = line.duration * (word.i - 1) / word.n
									word.end_time = line.duration * (word.i - 0) / word.n
									word.duration = word.end_time - word.start_time
									word.dur = word.duration
									word.mid_time = word.start_time + word.dur / 2
									word.widthmax = math.max( unpack( mmwth[ ii ].wo ) )
									word.widthmin = math.min( unpack( mmwth[ ii ].wo ) )
									word.durmax = math.max( unpack( mmdur[ ii ].wo ) )
									word.durmin = math.min( unpack( mmdur[ ii ].wo ) )
									-----------------------------------------------
									W_ = aegisub.word( line.text, line.dur, word.i )
									-----------------------------------------------
									effector.default_val2( )
									-----------------------------------------------
									shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", word.height, word.width, word.height, word.width + word.height )
									shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", word.height, word.width + word.height, word.height, word.width )
									-----------------------------------------------
									word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = word.start_time, word.end_time, word.mid_time, word.dur, word.i, word.n, word.left, word.center, word.right, word.bottom, word.middle, word.top, word.width, word.height
									syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
									-----------------------------------------------
									S_ = aegisub.word2S( )
									C_ = aegisub.word2C( )
									-----------------------------------------------
									effector.default_val( )
									-----------------------------------------------
									if pcall( loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) == true then
										variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
										var_KEfx_ = variable_( fx__, meta, line, x, y )
									end
									variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
									if line.i == 1
										and word.i == 1
										and J == 1 then
										var.once = remember( "var_once", variable_( fx__, meta, line, x, y ) )
									else
										var.once = recall.var_once
									end
									if word.i == 1
										and J == 1 then
										var.line = variable_( fx__, meta, line, x, y )
									end
									if J == 1 then
										var.rep = variable_( fx__, meta, line, x, y )
									end
									var.word = variable_( fx__, meta, line, x, y )
									var.syl, var.furi, var.char = var.word, var.word, var.word
									var.loop = variable_( fx__, meta, line, x, y )
									-----------------------------------------------
									maxloop1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (word.width + 2 * L.outline) / (word.height + 2 * L.outline) )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
									fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
									fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
									fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
									maxj = fx.maxloop_fx
									-----------------------------------------------
									while j <= fx.maxloop_fx do
										var.loop = variable_( fx__, meta, line, x, y )
										--variables de modulo--
										module = (j - 1) / (maxj - 1)
										if fx.maxloop_fx == 1 then
											module = 0
										end
										module1 = (word.i + module - 1) / (word.n + module - 1)
										if word.n == 1 then
											module1 = module
										end
										module2 = (line.i + module1 - 1) / (line.n + module1 - 1)
										if line.n == 1 then
											module2 = module1
										end
										--variables de tiempo--
										fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										if fx__.start_t:match( "retime" ) then
											local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
											time_rtm = time_rtm( fx__, meta, line )
										else
											start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
											start_t	= start_t1( fx__, meta, line )
											fx.start_time = start_t[ 1 ] or line.start_time
											l.start_time = fx.start_time
											end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
											end_t = end_t1( fx__, meta, line )
											fx.end_time = end_t[ 1 ] or line.end_time
											l.end_time = fx.end_time
											fx.dur = fx.end_time - fx.start_time
										end
										---------------------------------------------------
										without = { }
										ini = line.start_time - fx.start_time
										without.word = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + word.start_time, ini + word.start_time + ((word.start_time == 0) and 1 or 0), ini + word.end_time, ini + word.end_time, text.alpha1, text.alpha3, text.alpha4 )
										word.word_start = ini + word.start_time
										word.word_end = word.word_start + word.dur
										--variables de punto de referencia--
										center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
										center_x = center_x1( fx__, meta, line, x, y )
										fx.center_x = center_x[ 1 ] or val_center
										center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
										center_y = center_y1( fx__, meta, line, x, y )
										fx.center_y = center_y[ 1 ] or val_middle
										--variables de escalas de funciones paramétricas-- 
										if j == 1 then
											scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
											scale_x	= scale_x1( fx__, meta, line )
											fx.scale_x = scale_x[ 1 ] or 1
											if fx.scale_x <= 0 then
												fx.scale_x = 0.1
											end
											scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
											scale_y	= scale_y1( fx__, meta, line )
											fx.scale_y = scale_y[ 1 ] or 1
											if fx.scale_y <= 0 then
												fx.scale_y = 0.1
											end
										end
										offset_maxspace = scale_x[ 2 ] or 0
										--variables de dominio de funciones--
										if j == 1 then
											s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
											s_i = s_i1( fx__, meta, line )
											fx.domain_i = s_i[ 1 ] or 0
											s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
											s_f = s_f1( fx__, meta, line )
											fx.domain_f = s_f[ 1 ] or 1
										end
										local s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
										--variables de funciones paramétricas--
										fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
										fun_x = fun_x1( fx__, meta, line, s )
										fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
										fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
										fun_y = fun_y1( fx__, meta, line, s )
										fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
										--definir las posiciones iniciales--
										fx.pos_x = fx.center_x
										fx.pos_y = fx.center_y
										fx.off_x, fx.off_y = effector.modify_pos( )
										--variables de posiciones--
										fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
										fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
										fx.pos_l = fx.pos_x - word.width / 2
										fx.pos_r = fx.pos_x + word.width / 2
										fx.pos_t = fx.pos_y - word.height / 2
										fx.pos_b = fx.pos_y + word.height / 2
										x, y = fx.pos_x, fx.pos_y
										--variables de tamaño--
										sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
										sizefx = sizefx1( fx__, meta, line, s )
										fx.sizex = L.scale_x
										fx.sizey = L.scale_y
										fx.tag_size = ""
										if #sizefx > 0 then
											fx.sizex = math.round( sizefx[ 1 ], 2 )
											fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
											fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
										end
										--variables de alineación y de capa (layer)--
										align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
										align = align1( fx__, meta, line, s )
										fx.align = ""
										if #align > 0 then
											fx.align = "\\an" .. align[ 1 ]
										end
										layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
										layer = layer1( fx__, meta, line, s )
										fx.layer = layer[ 1 ] or l_layer
										--variables de posiciones, dependiendo del "move"--
										move_x11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
										move_x = math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
										move_y11 = loadstring( format( "return function( fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
										move_y = math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
										--variables de tiempo del movimiento--
										fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
										move_t = move_t1( fx__, meta, line, s )
										fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
										fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
										tags_times = ""
										if #move_t > 0 then
											tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
										end
										--posiciones finales--
										effector.pos_config( )
										fx.pos = effector.pos( Nmove, tb_pos, tags_times )
										--------------------------------------------------
										returnfx = { [ 1 ] = fx__.returnfx }
										if pcall( loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
											returnfx1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
											returnfx = returnfx1( fx__, meta, line )
										end
										Rline = 1
										if returnfx[ 2 ] == "random" then
											Rline = 2 - R( count_fx + 1 )
										end
										if #returnfx > 0
											or returnfx[ 1 ] ~= nil then
											if type( returnfx[ 1 ] ) == "table" then
												returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
											end
											returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
											fx.Det = ""
											tags_style = text.style
											if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
												fx.Det = "\\p1"
												if returnfx[ 1 ]:match( "\\p%d" ) then
													fx.Det = ""
												end
												tags_style = shape.style
											end
											if fx.Det == "\\p1"
												or returnfx[ 1 ]:match( "\\p%d" ) then
												if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
													or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
													fx.tag_size = ""
												elseif fx.tag_size == "" then
													fx.tag_size = "\\fscx100\\fscy100"
												end
											end
											if fx__.language ~= "Automation Auto-4" then
												addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
												addtag = addtag1( fx__, meta, line, x, y )
												for k, v in pairs( addtag ) do
													if type( addtag[ k ] ) == "table" then
														addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
													end
												end
												fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
											else
												fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
											end
											fx.add_tags = tag.dark( fx.add_tags )
											if fxgroup == true then
												if fx__.modify == false
													and fx__.namefx ~= "raw" then
													l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, tags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
													l.effect = "Effector [fx]"
													l.layer = fx.layer
													l.actor = actor_fx
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												elseif fx__.modify == false
													and fx__.namefx == "raw" then
													l.text = fx.tm( returnfx[ 1 ] )
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												else
													lines_comment = false
													line.start_time = fx.start_time
													line.end_time = fx.end_time
													line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
												end
											end
										end
										j = j + 1
										time_fff = tonumber( os.time( ) )
										aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
										aegisub.progress.set( 100 * line.i / line.n )
									end
									left = left + widtht
									word.i = word.i + 1
								end
								J = J + 1
							end
						end

						if fx__.t_type == "Translation Char" then
							-----------------------------------------------
							for cfxt in unicode.chars( line.text_stripped:gsub( "\\N", " " ):gsub( "  ", " " ) ) do
								char.text = cfxt
								char.text_stripped = cfxt
								width, height, descent, extlead = aegisub.text_extents( line.styleref, char.text )
								char.width = width
								char.height = height
								char.top = l.top
								char.middle = l.middle
								char.bottom = l.bottom
								char.left = left
								char.right = left + char.width
								char.center = left + char.width / 2
								char.start_time = line.duration * (char.i - 1) / char.n
								char.end_time = line.duration * (char.i - 0) / char.n
								char.duration = char.end_time - char.start_time
								char.dur = char.duration
								char.mid_time = char.start_time + char.dur / 2
								char.widthmax = math.max( unpack( mmwth[ ii ].ch ) )
								char.widthmin = math.min( unpack( mmwth[ ii ].ch ) )
								char.durmax = math.max( unpack( mmdur[ ii ].ch ) )
								char.durmin = math.min( unpack( mmdur[ ii ].ch ) )
								-----------------------------------------------
								effector.default_val2( )
								-----------------------------------------------
								shape.trapeze1t = format( "m 0 0 l 0 %d l %d %d l %d 0 ", char.height, char.width, char.height, char.width + char.height )
								shape.trapeze1b = format( "m 0 0 l 0 %d l %d %d l %d 0 ", char.height, char.width + char.height, char.height, char.width )
								---------------------------------------------------
								W_ = aegisub.word( line.text, line.dur, aegisub.word2c( ) )
								---------------------------------------------------
								word_start, word_end, word_mid, word_dur, word_i, word_n, word_left, word_center, word_right, word_bottom, word_middle, word_top, word_width, word_height = word.start_time, word.end_time, word.mid_time, word.dur, word.i, word.n, word.left, word.center, word.right, word.bottom, word.middle, word.top, word.width, word.height
								syl_start,  syl_end,  syl_mid,  syl_dur,  syl_i,  syl_n,  syl_left,  syl_center,  syl_right,  syl_bottom,  syl_middle,  syl_top,  syl_width,  syl_height  = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								furi_start, furi_end, furi_mid, furi_dur, furi_i, furi_n, furi_left, furi_center, furi_right, furi_bottom, furi_middle, furi_top, furi_width, furi_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								hira_start, hira_end, hira_mid, hira_dur, hira_i, hira_n, hira_left, hira_center, hira_right, hira_bottom, hira_middle, hira_top, hira_width, hira_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								kata_start, kata_end, kata_mid, kata_dur, kata_i, kata_n, kata_left, kata_center, kata_right, kata_bottom, kata_middle, kata_top, kata_width, kata_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								roma_start, roma_end, roma_mid, roma_dur, roma_i, roma_n, roma_left, roma_center, roma_right, roma_bottom, roma_middle, roma_top, roma_width, roma_height = val_start, val_end, val_mid, val_dur, val_i, val_n, val_left, val_center, val_right, val_bottom, val_middle, val_top, val_width, val_height
								char_start, char_end, char_mid, char_dur, char_i, char_n, char_left, char_center, char_right, char_bottom, char_middle, char_top, char_width, char_height = char.start_time, char.end_time, char.mid_time, char.dur, char.i, char.n, char.left, char.center, char.right, char.bottom, char.middle, char.top, char.width, char.height
								---------------------------------------------------
								wordchar, wordsyl = { }, { }
								wordchar.i, wordchar.n = aegisub.wordci( char.i )
								syl = word
								wordsyl.i, wordsyl.n = aegisub.wordsi( syl.i )
								---------------------------------------------------
								fx.replay_fx, J = 1, 1
								maxJ = fx.replay_fx
								while J <= fx.replay_fx do
									j = 1
									moduler = (J - 1) / (maxJ - 1)
									if fx.replay_fx == 1 then
										moduler = 0
									end
									module = 0
									module1 = module
									module2 = module1
									fxgroup = true
									-----------------------------------------------
									effector.default_val( )
									-----------------------------------------------
									if pcall( loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) ) ) == true then
										variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) %s return \"\" end", tag.HTML_to_ass( fx__.variable ) ) )( )
										var_KEfx_ = variable_( fx__, meta, line, x, y )
									end
									variable_ = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.variable ) ) )( )
									if line.i == 1
										and char.i == 1
										and J == 1 then
										var.once = remember( "var_once", variable_( fx__, meta, line, x, y ) )
									else
										var.once = recall.var_once
									end
									if char.i == 1
										and J == 1 then
										var.line = variable_( fx__, meta, line, x, y )
									end
									if wordchar.i == 1
										and J == 1 then
										var.word = variable_( fx__, meta, line, x, y )
									end
									if J == 1 then
										var.rep = variable_( fx__, meta, line, x, y )
									end
									var.char = variable_( fx__, meta, line, x, y )
									var.syl, var.furi = var.char, var.char
									var.loop = variable_( fx__, meta, line, x, y )
									text.char_size( )
									-----------------------------------------------
									maxloop1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.loops ) ) )( )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									loop_h = ceil( (maxloop_fx[ 1 ] or 1) * (char.width + 2 * L.outline) / (char.height + 2 * L.outline) )
									maxloop_fx = maxloop1( fx__, meta, line, x, y )
									fx.loop_v = ceil( maxloop_fx[ 1 ] or 1 )
									fx.loop_h = ceil( maxloop_fx[ 2 ] or 1 )
									fx.loop_3 = ceil( maxloop_fx[ 3 ] or 1 )
									fx.maxloop_fx = fx.loop_v * fx.loop_h * fx.loop_3
									maxj = fx.maxloop_fx
									-----------------------------------------------
									while j <= fx.maxloop_fx do
										ci = 0
										var.loop = variable_( fx__, meta, syl, line, x, y )
										--variables de modulo--
										module = (j - 1) / (maxj - 1)
										if fx.maxloop_fx == 1 then
											module = 0
										end
										module1 = (char.i + module - 1) / (char.n + module - 1)
										if char.n == 1 then
											module1 = module
										end
										module2 = (line.i + module1 - 1) / (line.n + module1 - 1)
										if line.n == 1 then
											module2 = module1
										end
										if wordsyl.n > 1 then
											modules3w = (wordsyl.i - 1) / (wordsyl.n - 1)
										end
										--[[
										if sylchar.n > 1 then
											modulec3s = (sylchar.i - 1) / (sylchar.n - 1)
										end
										--]]
										if type( wordchar.n ) == "number"
											and wordchar.n > 1 then
											modulec3w = (wordchar.i - 1) / (wordchar.n - 1)
										end
										--variables de tiempo--
										fx__.start_t = fx__.start_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										fx__.end_t = fx__.end_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										if fx__.start_t:match( "retime" ) then
											local time_rtm = loadstring( format( "return function( fx__, meta, line ) return %s end", tag.tonumber( fx__.start_t ) ) )( )
											time_rtm = time_rtm( fx__, meta, line )
										else
											start_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.start_t ) ) )( )
											start_t	= start_t1( fx__, meta, line )
											fx.start_time = start_t[ 1 ] or line.start_time
											l.start_time = fx.start_time
											end_t1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.end_t ) ) )( )
											end_t = end_t1( fx__, meta, line )
											fx.end_time = end_t[ 1 ] or line.end_time
											l.end_time = fx.end_time
											fx.dur = fx.end_time - fx.start_time
										end
										---------------------------------------------------
										without = { }
										ini = line.start_time - fx.start_time
										without.char = format( "\\t(%s,%s,\\1a&HFF&\\3a&HFF&\\4a&HFF&)\\t(%s,%s,\\1a%s\\3a%s\\4a%s)", ini + char.start_time, ini + char.start_time + ((char.start_time == 0) and 1 or 0), ini + char.end_time, ini + char.end_time, text.alpha1, text.alpha3, text.alpha4 )
										word.word_start = ini + word.start_time
										word.word_end = word.word_start + word.dur
										char.char_start = ini + char.start_time
										char.char_end = char.char_start + char.dur
										--variables de punto de referencia--
										center_x1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_x ) ) )( )
										center_x = center_x1( fx__, meta, line, x, y )
										fx.center_x = center_x[ 1 ] or val_center
										center_y1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.tonumber( fx__.center_y ) ) )( )
										center_y = center_y1( fx__, meta, line, x, y )
										fx.center_y = center_y[ 1 ] or val_middle
										--variables de escalas de funciones paramétricas-- 
										if j == 1 then
											scale_x1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_x ) ) )( )
											scale_x	= scale_x1( fx__, meta, line )
											fx.scale_x = scale_x[ 1 ] or 1
											if fx.scale_x <= 0 then
												fx.scale_x = 0.1
											end
											scale_y1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.scale_y ) ) )( )
											scale_y	= scale_y1( fx__, meta, line )
											fx.scale_y = scale_y[ 1 ] or 1
											if fx.scale_y <= 0 then
												fx.scale_y = 0.1
											end
										end
										offset_maxspace = scale_x[ 2 ] or 0
										--variables de dominio de funciones--
										if j == 1 then
											s_i1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_i ) ) )( )
											s_i = s_i1( fx__, meta, line )
											fx.domain_i = s_i[ 1 ] or 0
											s_f1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.tonumber( fx__.s_f ) ) )( )
											s_f = s_f1( fx__, meta, line )
											fx.domain_f = s_f[ 1 ] or 1
										end
										local s = fx.domain_i + module * (fx.domain_f - fx.domain_i)
										--variables de funciones paramétricas--
										fun_x1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_x ) ) )( )
										fun_x = fun_x1( fx__, meta, line, s )
										fx.fun_x = (fun_x[ 1 ] or 0) * fx.scale_x
										fun_y1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.fun_y ) ) )( )
										fun_y = fun_y1( fx__, meta, line, s )
										fx.fun_y = (fun_y[ 1 ] or 0) * fx.scale_y
										--definir las posiciones iniciales--
										fx.pos_x = fx.center_x
										fx.pos_y = fx.center_y
										fx.off_x, fx.off_y = effector.modify_pos( )
										--variables de posiciones--
										fx.pos_x = fx.pos_x + fx.fun_x - fx.off_x
										fx.pos_y = fx.pos_y + fx.fun_y - fx.off_y
										fx.pos_l = fx.pos_x - char.width / 2
										fx.pos_r = fx.pos_x + char.width / 2
										fx.pos_t = fx.pos_y - char.height / 2
										fx.pos_b = fx.pos_y + char.height / 2
										x, y = fx.pos_x, fx.pos_y
										--variables de tamaño--
										sizefx1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.size ) ) )( )
										sizefx = sizefx1( fx__, meta, line, s )
										fx.sizex = L.scale_x
										fx.sizey = L.scale_y
										fx.tag_size = ""
										if #sizefx > 0 then
											fx.sizex = math.round( sizefx[ 1 ], 2 )
											fx.sizey = math.round( sizefx[ 2 ] or fx.sizex, 2 )
											fx.tag_size = format( "\\fscx%s\\fscy%s", fx.sizex, fx.sizey )
										end
										--variables de alineación y de capa (layer)--
										align1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.align ) ) )( )
										align = align1( fx__, meta, line, s )
										fx.align = ""
										if #align > 0 then
											fx.align = "\\an" .. align[ 1 ]
										end
										layer1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.layer ) ) )( )
										layer = layer1( fx__, meta, line, s )
										fx.layer = layer[ 1 ] or l_layer
										--variables de posiciones, dependiendo del "move"--
										move_x11 = loadstring( format( "return function(fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_x ) ) )( )
										move_x = math.round( move_x11( fx__, meta, line, x, y, s ), 2 )
										move_y11 = loadstring( format( "return function(fx__, meta, line, x, y, s ) return { %s } end", tag.tonumber( fx__.move_y ) ) )( )
										move_y = math.round( move_y11( fx__, meta, line, x, y, s ), 2 )
										--variables de tiempo del movimiento--
										fx__.move_t = fx__.move_t:gsub( "(%d+%:%d+%:%d+%.%d+)",
											function( time_HMS )
												return tostring( HMS_to_ms( time_HMS ) )
											end
										)
										move_t1 = loadstring( format( "return function( fx__, meta, line, s ) return { %s } end", tag.tonumber( fx__.move_t ) ) )( )
										move_t = move_t1( fx__, meta, line, s )
										fx.movet_i = math.round( move_t[ 1 ] or 0, 2 )
										fx.movet_f = math.round( move_t[ 2 ] or fx.dur, 2 )
										tags_times = ""
										if #move_t > 0 then
											tags_times = format( ",%s,%s", fx.movet_i, fx.movet_f )
										end
										--posiciones finales--
										effector.pos_config( )
										fx.pos = effector.pos( Nmove, tb_pos, tags_times )
										--------------------------------------------------
										returnfx = { [ 1 ] = fx__.returnfx }
										if pcall( loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) ) ) == true then
											returnfx1 = loadstring( format( "return function( fx__, meta, line ) return { %s } end", tag.HTML_to_ass( fx__.returnfx ) ) )( )
											returnfx = returnfx1( fx__, meta, line )
										end
										Rline = 1
										if returnfx[ 2 ] == "random" then
											Rline = 2 - R( count_fx + 1 )
										end
										if fx__.noblank == true
											and (returnfx[ 1 ] == "" or returnfx[ 1 ] == " ") then
											returnfx[ 1 ] = nil
										end
										if #returnfx > 0
											or returnfx[ 1 ] ~= nil then
											if type( returnfx[ 1 ] ) == "table" then
												returnfx[ 1 ] = table.view( returnfx[ 1 ], "Returnfx_table" )
											end
											returnfx[ 1 ] = tag.dark( tostring( returnfx[ 1 ] ) )
											fx.Det = ""
											tags_style = text.style
											if returnfx[ 1 ]:match( "m %-?%d+[%.%d+]* %-?%d+[%.%d+]*" ) then
												fx.Det = "\\p1"
												if returnfx[ 1 ]:match( "\\p%d" ) then
													fx.Det = ""
												end
												tags_style = shape.style
											end
											if fx.Det == "\\p1"
												or returnfx[ 1 ]:match( "\\p%d" ) then
												if returnfx[ 1 ]:match( "\\fscx%d+[%.%d+]*" )
													or returnfx[ 1 ]:match( "\\fscy%d+[%.%d+]*" ) then
													fx.tag_size = ""
												elseif fx.tag_size == "" then
													fx.tag_size = "\\fscx100\\fscy100"
												end
											end
											if fx__.language ~= "Automation Auto-4" then
												addtag1 = loadstring( format( "return function( fx__, meta, line, x, y ) return { %s } end", tag.HTML_to_ass( fx__.addtag ) ) )( )
												addtag = addtag1( fx__, meta, line, x, y )
												for k, v in pairs( addtag ) do
													if type( addtag[ k ] ) == "table" then
														addtag[ k ] = table.view( addtag[ k ], format( "Add_Tags_%s_table", k ) )
													end
												end
												fx.add_tags = tag.do_tag( table.op( addtag, "concat" ) )
											else
												fx.add_tags = tag.to_Auto4( tag.HTML_to_ass( fx__.addtag ) )
											end
											fx.add_tags = tag.dark( fx.add_tags )
											if fxgroup == true then
												if fx__.modify == false
													and fx__.namefx ~= "raw" then
													l.text = fx.tm( format( "{%s %s: %s [line origin: %s - line fx: %s] %s%s%s%s%s%s}%s", script_name, script_version, fx__.effect:gsub( "%S+[%-%S+]*%[fx%]: ", "" ), ii, count_fx + 1, fx.align, fx.pos, tags_style, fx.tag_size, fx.add_tags, fx.Det, tag.delete_in_return( returnfx[ 1 ] ) ) )
													l.effect = "Effector [fx]"
													l.layer = fx.layer
													l.actor = actor_fx
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												elseif fx__.modify == false
													and fx__.namefx == "raw" then
													l.text = fx.tm( returnfx[ 1 ] )
													subs.insert( #subs + Rline, l )
													count_fx = count_fx + 1
												else
													lines_comment = false
													line.start_time = fx.start_time
													line.end_time = fx.end_time
													line.text = fx.tm( format( "{%s}%s", fx.add_tags, returnfx[ 1 ] ) )
												end
											end
											ci = 1
										end
										j = j + 1
										time_fff = tonumber( os.time( ) )
										aegisub.progress.task( format( "Lines: [%d/%d]  time: [%s]  Lines Generated: %d", count_ln, #idx_line, effector.time( time_iii, time_fff ), count_fx ) )
										aegisub.progress.set( 100 * line.i / line.n )
									end
									J = J + 1
								end
								left = left + width
								char.i = char.i + ci
							end
						end
					end
				end
			end
		end
	end
	
	--lead-in FX List
	ABC_Template_Romaji_to_Hiragana = table.duplicate(PfxM_Box); table.inbox(ABC_Template_Romaji_to_Hiragana, "lead-in[fx]: ABC Template Romaji to Hiragana","Convert to Hiragana",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","hira.middle + l.height/2 + 3*l.descent/4","","","5","0","fx.pos_x","fx.pos_y","","1","0.56*l.scale_x, 0.56*l.scale_y","hira.text","","","Lua",false); table.insert(leadin_fx_library, ABC_Template_Romaji_to_Hiragana); table.insert(leadin_fx, "ABC Template Romaji to Hiragana")
	ABC_Template_Romaji_to_Katakana = table.duplicate(PfxM_Box); table.inbox(ABC_Template_Romaji_to_Katakana, "lead-in[fx]: ABC Template Romaji to Katakana","Convert to Katakana",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","kata.middle + l.height/2 + 3*l.descent/4","","","5","0","fx.pos_x","fx.pos_y","","1","0.56*l.scale_x, 0.56*l.scale_y","kata.text","","","Lua",false); table.insert(leadin_fx_library, ABC_Template_Romaji_to_Katakana); table.insert(leadin_fx, "ABC Template Romaji to Katakana")
	Agitation_Char = table.duplicate(PfxM_Box); table.inbox(Agitation_Char, "lead-in[fx]: Agitation Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + 50*(char.i - char.n/2 + 8) - 360","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x - l.height, fx.pos_x","fx.pos_y","0, 400","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + dy, fx.pos_x, fx.pos_y - dy, fx.pos_x, fx.pos_y }, nil, 450 ), \"\\\\fad(150,0)\"","dy = 8*ratio","Lua",false); table.insert(leadin_fx_library, Agitation_Char); table.insert(leadin_fx, "Agitation Char")
	Asault = table.duplicate(PfxM_Box); table.inbox(Asault, "lead-in[fx]: Asault","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y - 100*ratio, fx.pos_y","200, 400","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\fscx%s\\\\fscy%s\\\\blur3\\\\t(0,400,0.5,\\\\frx0\\\\fscx%s\\\\blur0)\\\\t(0,400,\\\\fscy%s)\\\\fad(150,0)\", fx.pos_x, fx.pos_y, 0.3*l.scale_x, 3*l.scale_y, l.scale_x, l.scale_y )","delay = R( 400, 800 )"); table.insert(leadin_fx_library, Asault); table.insert(leadin_fx, "Asault")
	Asault_Sequence = table.duplicate(PfxM_Box); table.inbox(Asault_Sequence, "lead-in[fx]: Asault Sequence","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - delay","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y - 100*ratio, fx.pos_y","200, 400","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\fscx%s\\\\fscy%s\\\\blur3\\\\t(0,400,0.5,\\\\frx0\\\\fscx%s\\\\blur0)\\\\t(0,400,\\\\fscy%s)\\\\fad(150,0)\", fx.pos_x, fx.pos_y, 0.3*l.scale_x, 3*l.scale_y, l.scale_x, l.scale_y )","delay = R( 400, 800 )","Lua",false); table.insert(leadin_fx_library, Asault_Sequence); table.insert(leadin_fx, "Asault Sequence")
	Asault_Line_I = table.duplicate(PfxM_Box); table.inbox(Asault_Line_I, "lead-in[fx]: Asault Line I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x - d1, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","format( \"\\\\org(%s,%s)\\\\frx-180\\\\fscx%s\\\\t(0,%s,\\\\frx0\\\\fscx%s)\\\\fad(200,0)\", fx.pos_x - d3, fx.pos_y + d2/2, 1.42*l.scale_x, delay, l.scale_x )","delay = 400;\nd1 = 150*ratio*(1 - 2*(syl.i - 1)/(syl.n - 2));\nd2 = 100*ratio;\nd3 = d2*(1 - 2*(syl.i - 1)/(syl.n - 2))","Lua",false); table.insert(leadin_fx_library, Asault_Line_I); table.insert(leadin_fx, "Asault Line I")
	Asault_Line_II = table.duplicate(PfxM_Box); table.inbox(Asault_Line_II, "lead-in[fx]: Asault Line II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 0.85*delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x - d1, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","format( \"\\\\org(%s,%s)\\\\frx-180\\\\fscx%s\\\\t(0,%s,\\\\frx0\\\\fscx%s)\\\\fad(200,0)\", fx.pos_x - d3, fx.pos_y + d2/2, 1.42*l.scale_x, delay, l.scale_x )","delay = 420;\nd1 = 150*ratio*(1 - 2*(syl.i - 1)/(syl.n - 2));\nd2 = 100*ratio;\nd3 = d2*(1 - 2*(syl.i - 1)/(syl.n - 2))","Lua",false); table.insert(leadin_fx_library, Asault_Line_II); table.insert(leadin_fx, "Asault Line II")
	Auxiliar_Bord_Shine_I = table.duplicate(PfxM_Box); table.inbox(Auxiliar_Bord_Shine_I, "lead-in[fx]: Auxiliar Bord Shine I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 20 )","fx.start_time + delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\shad0\\\\bord2\\\\blur2\\\\1a&HFF&\\\\3c&HFFFFFF&\\\\t(0,%s,\\\\fscx%s\\\\fscy%s\\\\blur5)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\blur2)\\\\fad(200,200)\", fx.dur/2, 1.25*l.scale_x, 1.25*l.scale_y, fx.dur/2, fx.dur, l.scale_x, l.scale_y )","delay = 640 + 15*char.i","Lua",false); table.insert(leadin_fx_library, Auxiliar_Bord_Shine_I); table.insert(leadin_fx, "Auxiliar Bord Shine I")
	Auxiliar_Multiclip_H = table.duplicate(PfxM_Box); table.inbox(Auxiliar_Multiclip_H, "lead-in[fx]: Auxiliar Multiclip H","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 300","l.start_time + time_li( 40 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + 0.28*l.height*(-1)^j, fx.pos_x","fx.pos_y","0, 300 - frame_dur","8","","syl.text","tag.clip( fx.pos_l - l.height, fx.pos_t, syl.width + 2*l.height, syl.height ), \"\\\\fad(100,0)\"","","Lua",false); table.insert(leadin_fx_library, Auxiliar_Multiclip_H); table.insert(leadin_fx, "Auxiliar Multiclip H")
	Auxiliar_Spark_Shine_I = table.duplicate(PfxM_Box); table.inbox(Auxiliar_Spark_Shine_I, "lead-in[fx]: Auxiliar Spark Shine I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 45 )","fx.start_time + delay + 10*j","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 ), fx.dur )","delay = 640 + 30*syl.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua",false); table.insert(leadin_fx_library, Auxiliar_Spark_Shine_I); table.insert(leadin_fx, "Auxiliar Spark Shine I")
	Auxiliar_Spark_Shine_II = table.duplicate(PfxM_Box); table.inbox(Auxiliar_Spark_Shine_II, "lead-in[fx]: Auxiliar Spark Shine II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 45 )","fx.start_time + delay + 10*j","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 )*(-1)^syl.i, fx.dur )","delay = 640 + 30*syl.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua",false); table.insert(leadin_fx_library, Auxiliar_Spark_Shine_II); table.insert(leadin_fx, "Auxiliar Spark Shine II")
	Auxiliar_Spark_Shine_III = table.duplicate(PfxM_Box); table.inbox(Auxiliar_Spark_Shine_III, "lead-in[fx]: Auxiliar Spark Shine III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 45 )","fx.start_time + delay + 10*j","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","18","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 )*(-1)^j, fx.dur )","delay = 640 + 30*syl.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua",false); table.insert(leadin_fx_library, Auxiliar_Spark_Shine_III); table.insert(leadin_fx, "Auxiliar Spark Shine III")
	Baker_Street_I = table.duplicate(PfxM_Box); table.inbox(Baker_Street_I, "lead-in[fx]: Baker Street I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 40 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","4 + j","0","fx.pos_x + tag.only( j == 2, syl.width/2 )","fx.pos_y","","2","","j == 1 and syl.text or shape.rectangle","tag.only( j == 2, format( \"\\\\bord0\\\\shad0\\\\fscx%s\\\\fscy%s\\\\t(100,260,\\\\fscx0)\", syl.width, l.height - l.descent/2 ) ), \"\\\\fad(120,0)\"","","Lua",false); table.insert(leadin_fx_library, Baker_Street_I); table.insert(leadin_fx, "Baker Street I")
	Char_Random_LI_I = table.duplicate(PfxM_Box); table.inbox(Char_Random_LI_I, "lead-in[fx]: Char Random LI I","Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 30 ) + delay*(j - 1) - 200","tag.only( j == maxj, l.start_time + syl.start_time, fx.start_time + delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","4","","tag.only( j == maxj, char.text, string.char( R( 97, 122 ) ) )","tag.only( j ~= maxj, format( \"\\\\alpha%s\\\\t(\\\\alpha%s)\", alpha.interpolate( \"&HFF&\", \"&H00&\", (j-1)/maxj ), alpha.interpolate( \"&HFF&\", \"&H00&\", j/maxj ) ) )","delay = 80","Lua",false); table.insert(leadin_fx_library, Char_Random_LI_I); table.insert(leadin_fx, "Char Random LI I")
	Char_Random_LI_II = table.duplicate(PfxM_Box); table.inbox(Char_Random_LI_II, "lead-in[fx]: Char Random LI II","Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + delay*(j - 1) + var.syl.delay2 - delay*maxj","tag.only( j == maxj, l.start_time + syl.start_time, fx.start_time + delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","R( 4, 5 )","","tag.only( j == maxj, char.text, string.char( R( 97, 122 ) ) )","tag.only( j ~= maxj, format( \"\\\\alpha%s\\\\t(\\\\alpha%s)\", alpha.interpolate( \"&HFF&\", \"&H00&\", (j-1)/maxj), alpha.interpolate( \"&HFF&\", \"&H00&\", j/maxj ) ) )","delay = 2*frame_dur;\ndelay2 = R( -300,100 )","Lua",false); table.insert(leadin_fx_library, Char_Random_LI_II); table.insert(leadin_fx, "Char Random LI II")
	Char_Under_Sea = table.duplicate(PfxM_Box); table.inbox(Char_Under_Sea, "lead-in[fx]: Char Under Sea","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( delay )","l.end_time + time_lo( delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Omove( mi_shape, 0, fx.dur, 880, 0.8 ), \"\\\\fad(200,200)\"","delay = 12;\nmi_shape = \"m -18 -16 l 18 16 l 36 0 l 18 -16 l -18 16 l -36 0 \"","Lua",false); table.insert(leadin_fx_library, Char_Under_Sea); table.insert(leadin_fx, "Char Under Sea")
	Char_Under_Sea_without_Syl = table.duplicate(PfxM_Box); table.inbox(Char_Under_Sea_without_Syl, "lead-in[fx]: Char Under Sea without Syl","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( delay )","l.end_time + time_lo( delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Omove( mi_shape, 0, fx.dur, 880, 0.8 ), without.syl, \"\\\\fad(200,200)\"","delay = 12;\nmi_shape = \"m -18 -16 l 18 16 l 36 0 l 18 -16 l -18 16 l -36 0 \"","Lua",false); table.insert(leadin_fx_library, Char_Under_Sea_without_Syl); table.insert(leadin_fx, "Char Under Sea without Syl")
	Chess_Multi_Color = table.duplicate(PfxM_Box); table.inbox(Chess_Multi_Color, "lead-in[fx]: Chess Multi Color","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","2, 2","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height, 71 ), format( \"\\\\1c%s\", colors[ (j + char.i - 2)%4 + 1 ] )","colors = { \"&H00F3F3&\", \"&HFF8D00&\", \"&H0102FB&\", \"&H15F905&\" }","Lua",false); table.insert(leadin_fx_library, Chess_Multi_Color); table.insert(leadin_fx, "Chess Multi Color")
	Clip_Curves = table.duplicate(PfxM_Box); table.inbox(Clip_Curves, "lead-in[fx]: Clip Curves","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","curves( )","curves = function( )\n	local function curves2( )\n		local Shape, Shapes, mod = format( \"m 0 %s \", l.height ), { }, { }\n		mod[ 1 ] = format( \"b %s %s %s 0 %s 0 \", l.height / 2, l.height, l.height / 2, l.height )\n		mod[ 2 ] = format( \"b %s 0 %s %s %s %s \", l.height / 2, l.height / 2, l.height, l.height, l.height )\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. shape.displace( mod[ i%2 + 1 ], i * l.height, 0 )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n		Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj - delay, delay * j / maxj - delay )\n		local shape_1, shape_2 = curves2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.45 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"start2syl\", 0, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Curves); table.insert(leadin_fx, "Clip Curves")
	Clip_Curves_LI_Line = table.duplicate(PfxM_Box); table.inbox(Clip_Curves_LI_Line, "lead-in[fx]: Clip Curves LI Line","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","curves( )","curves = function( )\n	local function curves2( )\n		local Shape, Shapes, mod = format( \"m 0 %s \", l.height ), { }, { }\n		mod[ 1 ] = format( \"b %s %s %s 0 %s 0 \", l.height / 2, l.height, l.height / 2, l.height )\n		mod[ 2 ] = format( \"b %s 0 %s %s %s %s \", l.height / 2, l.height / 2, l.height, l.height, l.height )\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. shape.displace( mod[ i%2 + 1 ], i * l.height, 0 )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n		Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = curves2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.45 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Curves_LI_Line); table.insert(leadin_fx, "Clip Curves LI Line")
	Clip_Randoms = table.duplicate(PfxM_Box); table.inbox(Clip_Randoms, "lead-in[fx]: Clip Randoms","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","randoms( )","randoms = function( )\n	local function randoms2( )\n		local Shape = format( \"m 0 %s \", R( l.height ) )\n		local Shape_width = 0\n		local i, widthx = 0, 0\n		local Shapes\n		if j == 1 then\n			Shapes = remember( \"shps\", { } )\n			while Shape_width < l.width + l.height do\n				widthx = R( l.height )\n				Shape = Shape .. format( \"l %s %s \", Shape_width + widthx, R( l.height ) )\n				Shape_width = Shape_width + widthx\n				i = i + 1\n			end\n			Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n			Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		else\n			Shapes = recall.shps\n		end\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj - delay, delay * j / maxj - delay )\n		local shape_1, shape_2 = randoms2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.3 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"start2syl\", 0, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Randoms); table.insert(leadin_fx, "Clip Randoms")
	Clip_Randoms_LI_Line = table.duplicate(PfxM_Box); table.inbox(Clip_Randoms_LI_Line, "lead-in[fx]: Clip Randoms LI Line","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","randoms( )","randoms = function( )\n	local function randoms2( )\n		local Shape = format( \"m 0 %s \", R( l.height ) )\n		local Shape_width = 0\n		local i, widthx = 0, 0\n		local Shapes\n		if j == 1 then\n			Shapes = remember( \"shps\", { } )\n			while Shape_width < l.width + l.height do\n				widthx = R( l.height )\n				Shape = Shape .. format( \"l %s %s \", Shape_width + widthx, R( l.height ) )\n				Shape_width = Shape_width + widthx\n				i = i + 1\n			end\n			Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n			Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		else\n			Shapes = recall.shps\n		end\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = randoms2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Randoms_LI_Line); table.insert(leadin_fx, "Clip Randoms LI Line")
	Clip_Triangles = table.duplicate(PfxM_Box); table.inbox(Clip_Triangles, "lead-in[fx]: Clip Triangles","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","triangles( )","triangles = function( )\n	local function triangles2( )\n		local Shape, Shapes = \"m \", { }\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. format( \"%s %s l \", i * l.height, l.height * math.i( i )[ \"1,0\" ] )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"%s 0 l 0 0 l 0 %s \", (i - 1) * l.height, l.height )\n		Shapes[ 2 ] = Shape .. format( \"%s %s l 0 %s \", (i - 1) * l.height, l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj - delay, delay * j / maxj - delay )\n		local shape_1, shape_2 = triangles2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"start2syl\", 0, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Triangles); table.insert(leadin_fx, "Clip Triangles")
	Clip_Triangles_LI_Line = table.duplicate(PfxM_Box); table.inbox(Clip_Triangles_LI_Line, "lead-in[fx]: Clip Triangles LI Line","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","triangles( )","triangles = function( )\n	local function triangles2( )\n		local Shape, Shapes = \"m \", { }\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. format( \"%s %s l \", i * l.height, l.height * math.i( i )[ \"1,0\" ] )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"%s 0 l 0 0 l 0 %s \", (i - 1) * l.height, l.height )\n		Shapes[ 2 ] = Shape .. format( \"%s %s l 0 %s \", (i - 1) * l.height, l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = triangles2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Clip_Triangles_LI_Line); table.insert(leadin_fx, "Clip Triangles LI Line")
	Crazy_Oscill_I = table.duplicate(PfxM_Box); table.inbox(Crazy_Oscill_I, "lead-in[fx]: Crazy Oscill I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 40 ) - 100","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( 4*frame_dur, frame_dur, \"\\\\fscx( R( l.scale_x, 1.35*l.scale_x ) )\\\\fscy( R( l.scale_y, 1.35*l.scale_y ) )\\\\fr( R( -8, 8 ) )\\\\fax( Rc( -0.25, 0.25 ) )\\\\fay( Rc( -0.25, 0.25 ) )\" ), format( \"\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\fax0\\\\fay0)\\\\fad(160,0)\", 4*frame_dur, 4*frame_dur + 1, l.scale_x, l.scale_y )","","Lua",false); table.insert(leadin_fx_library, Crazy_Oscill_I); table.insert(leadin_fx, "Crazy Oscill I")
	Curve_Line_I = table.duplicate(PfxM_Box); table.inbox(Curve_Line_I, "lead-in[fx]: Curve Line I","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","text.bezier( mi_shape, 1 )","mi_shape = shape.displace( \"m 0 0 b 100 -42 220 42 320 0 b 420 -42 540 42 640 0 b 740 -42 860 42 960 0 b 1060 -42 1180 42 1280 0 \", 0, l.middle )","Lua",false); table.insert(leadin_fx_library, Curve_Line_I); table.insert(leadin_fx, "Curve Line I")
	Deformed_Zoom_I = table.duplicate(PfxM_Box); table.inbox(Deformed_Zoom_I, "lead-in[fx]: Deformed Zoom I","Syl",true,false,"#FFFFFF","#5B5B5B","#C8C8C8","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","( J == 1 ) and 130 - 30 * module or nil","( J == 1 ) and text_shapes( 1 )[(j - 1)%4 + 1] or syl.text","replay( 2 ), ( J == 1) and maxloop( 4 ) .. retime( \"preline\", time_li( 40 ) + (j - 1) * frame_dur - 100, time_li( 40 ) + j * frame_dur - 100 ) .. \"\\\\alpha-{ 180, 12 }\" or retime( \"start2syl\", time_li( 40 ) + 4 * frame_dur - 100, 0 )","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.25\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x * Ratio + Rd( Pixel, -Pixel )\n				y = y * Ratio + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(leadin_fx_library, Deformed_Zoom_I); table.insert(leadin_fx, "Deformed Zoom I")
	Displace_Char_preline_I = table.duplicate(PfxM_Box); table.inbox(Displace_Char_preline_I, "lead-in[fx]: Displace Char preline I","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 300","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove( fx.pos_x + Dx*( 2*module1 - 1), fx.pos_y, fx.pos_x, fx.pos_y, 0, 300, 1.5 ), format( \"\\\\fscx%s\\\\fscy%s\\\\t(0,300,1.5,\\\\fscx%s\\\\fscy%s)\\\\fad(150,0)\", 0.4*l.scale_x, 0.4*l.scale_y, l.scale_x, l.scale_y )","Dx = 200*ratio","Lua",false); table.insert(leadin_fx_library, Displace_Char_preline_I); table.insert(leadin_fx, "Displace Char preline I")
	Distort_Clip_in_Line = table.duplicate(PfxM_Box); table.inbox(Distort_Clip_in_Line, "lead-in[fx]: Distort Clip in Line","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - delay1 - delay2*j","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x +Dx, fx.pos_x","fx.pos_y","0, delay1","4","","syl.text","format( \"%s\\\\t(0,%s,0.7,\\\\frx-360)\\\\fad(200,0)\", tag.clip( fx.pos_l, fx.pos_t, xres, syl.height ), delay1 )","delay1 = 400;\ndelay2 = 100;\nDx = 220*ratio","Lua",false); table.insert(leadin_fx_library, Distort_Clip_in_Line); table.insert(leadin_fx, "Distort Clip in Line")
	Distort_in_Syl_I = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I, "lead-in[fx]: Distort in Syl I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + 70*(syl.i - syl.n/2 - 1) - 300","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\3vc%s\\\\org(%s,%s)\\\\rnd6\\\\blur10\\\\bord2\\\\shad0\\\\fscy%s\\\\t(0,300,0.8,\\\\rnd0\\\\blur0)\\\\t(0,500,0.8,\\\\bord%s\\\\shad%s\\\\3vc%s\\\\fscy%s)\\\\fad(150,0)', color.vc('&HFFFFFF&'), fx.pos_x, -10000*ratio, 0.8*l.scale_y, l.outline, l.shadow, text.color3, l.scale_y)",""); table.insert(leadin_fx_library, Distort_in_Syl_I); table.insert(leadin_fx, "Distort in Syl I")
	Distort_in_Syl_I_buttLine = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_buttLine, "lead-in[fx]: Distort in Syl I buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid2( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\3vc%s\\\\org(%s,%s)\\\\rnd6\\\\blur10\\\\bord2\\\\shad0\\\\fscy%s\\\\t(0,300,0.8,\\\\rnd0\\\\blur0)\\\\t(0,500,0.8,\\\\bord%s\\\\shad%s\\\\3vc%s\\\\fscy%s)\\\\fad(150,0)', color.vc('&HFFFFFF&'), fx.pos_x, -10000*ratio, 0.8*l.scale_y, l.outline, l.shadow, text.color3, l.scale_y)",""); table.insert(leadin_fx_library, Distort_in_Syl_I_buttLine); table.insert(leadin_fx, "Distort in Syl I buttLine")
	Distort_in_Syl_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_Inverse, "lead-in[fx]: Distort in Syl I Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 50*(syl.i - 1) - 500","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\3vc%s\\\\org(%s,%s)\\\\rnd6\\\\blur10\\\\bord2\\\\shad0\\\\fscy%s\\\\t(0,300,0.8,\\\\rnd0\\\\blur0)\\\\t(0,500,0.8,\\\\bord%s\\\\shad%s\\\\3vc%s\\\\fscy%s)\\\\fad(150,0)', color.vc('&HFFFFFF&'), fx.pos_x, -10000*ratio, 0.8*l.scale_y, l.outline, l.shadow, text.color3, l.scale_y)",""); table.insert(leadin_fx_library, Distort_in_Syl_I_Inverse); table.insert(leadin_fx, "Distort in Syl I Inverse")
	Distort_in_Syl_I_midLine = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_midLine, "lead-in[fx]: Distort in Syl I midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid1( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\3vc%s\\\\org(%s,%s)\\\\rnd6\\\\blur10\\\\bord2\\\\shad0\\\\fscy%s\\\\t(0,300,0.8,\\\\rnd0\\\\blur0)\\\\t(0,500,0.8,\\\\bord%s\\\\shad%s\\\\3vc%s\\\\fscy%s)\\\\fad(150,0)', color.vc('&HFFFFFF&'), fx.pos_x, -10000*ratio, 0.8*l.scale_y, l.outline, l.shadow, text.color3, l.scale_y)",""); table.insert(leadin_fx_library, Distort_in_Syl_I_midLine); table.insert(leadin_fx, "Distort in Syl I midLine")
	Distort_Line_Syl_I = table.duplicate(PfxM_Box); table.inbox(Distort_Line_Syl_I, "lead-in[fx]: Distort Line Syl I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 120","l.end_time + 120","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.oscill2( { \"random\" }, \"\\\\frRs( 40 )\" ), tag.clip( ), \"\\\\fad(120,120)\"","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Distort_Line_Syl_I); table.insert(leadin_fx, "Distort Line Syl I")
	Distort_Line_Syl_II = table.duplicate(PfxM_Box); table.inbox(Distort_Line_Syl_II, "lead-in[fx]: Distort Line Syl II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 120","l.end_time + 120","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","7","","syl.text","format( \"\\\\org(%s,%s)\", fx.move_x1, fx.move_y1 - 10000 ), tag.oscill2( { \"random\" }, \"\\\\frRcs( 0.1 )\" ), tag.clip( ), \"\\\\fad(120,120)\"","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Distort_Line_Syl_II); table.insert(leadin_fx, "Distort Line Syl II")
	Distort_Line_Syl_III = table.duplicate(PfxM_Box); table.inbox(Distort_Line_Syl_III, "lead-in[fx]: Distort Line Syl III","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 120","l.end_time + 120","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1, syl.width/8","","syl.text","format( \"\\\\org(%s,%s)\", fx.move_x1 - 10000, fx.move_y1 ), tag.oscill2( { \"random\" }, \"\\\\frRcs( 0.1 )\" ), tag.clip( fx.pos_l - l.outline, fx.pos_t, syl.width + 4*l.outline, syl.height ), \"\\\\fad(120,120)\"","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Distort_Line_Syl_III); table.insert(leadin_fx, "Distort Line Syl III")
	Distort_Line_Syl_IV = table.duplicate(PfxM_Box); table.inbox(Distort_Line_Syl_IV, "lead-in[fx]: Distort Line Syl IV","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 120","l.end_time + 120","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1, syl.width/8","","syl.text","tag.oscill2( { \"random\" }, \"\\\\frRcs( 30 )\\\\frxyRcs( 70 )\" ), tag.clip( fx.pos_l - l.outline, fx.pos_t, syl.width + 4*l.outline, syl.height ), \"\\\\fad(120,120)\"","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Distort_Line_Syl_IV); table.insert(leadin_fx, "Distort Line Syl IV")
	Double_Screw_template_line_char_I = table.duplicate(PfxM_Box); table.inbox(Double_Screw_template_line_char_I, "lead-in[fx]: Double Screw template line char I","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\frx180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\frx0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\frx-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220; delay_char = 20; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Double_Screw_template_line_char_I); table.insert(leadin_fx, "Double Screw template line char I")
	Double_Screw_template_line_char_II = table.duplicate(PfxM_Box); table.inbox(Double_Screw_template_line_char_II, "lead-in[fx]: Double Screw template line char II","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\fry180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\fry0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\fry-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220; delay_char = 20; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Double_Screw_template_line_char_II); table.insert(leadin_fx, "Double Screw template line char II")
	Double_Screw_template_line_char_III = table.duplicate(PfxM_Box); table.inbox(Double_Screw_template_line_char_III, "lead-in[fx]: Double Screw template line char III","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\fr180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\fr0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\fr-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220; delay_char = 20; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Double_Screw_template_line_char_III); table.insert(leadin_fx, "Double Screw template line char III")
	Emerge_Clip_Grip_I = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I, "lead-in[fx]: Emerge Clip Grip I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200,0)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_I); table.insert(leadin_fx, "Emerge Clip Grip I")
	Emerge_Clip_Grip_I_buttline = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_buttline, "lead-in[fx]: Emerge Clip Grip I buttline","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200,0)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_I_buttline); table.insert(leadin_fx, "Emerge Clip Grip I buttline")
	Emerge_Clip_Grip_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_Inverse, "lead-in[fx]: Emerge Clip Grip I Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(syl.i - 1) - 600","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200,0)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_I_Inverse); table.insert(leadin_fx, "Emerge Clip Grip I Inverse")
	Emerge_Clip_Grip_I_midline = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_midline, "lead-in[fx]: Emerge Clip Grip I midline","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200,0)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_I_midline); table.insert(leadin_fx, "Emerge Clip Grip I midline")
	Emerge_Clip_Grip_II = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II, "lead-in[fx]: Emerge Clip Grip II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - R( 30, 50 )*10","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,0)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height ), tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_II); table.insert(leadin_fx, "Emerge Clip Grip II")
	Emerge_Clip_Grip_II_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_buttLine, "lead-in[fx]: Emerge Clip Grip II buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 ) - 120 - R( 30, 50 )*10","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,0)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height ), tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_II_buttLine); table.insert(leadin_fx, "Emerge Clip Grip II buttLine")
	Emerge_Clip_Grip_II_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_Inverse, "lead-in[fx]: Emerge Clip Grip II Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(syl.i - 1) - 300 - R( 30, 50 )*10","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,0)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height ), tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_II_Inverse); table.insert(leadin_fx, "Emerge Clip Grip II Inverse")
	Emerge_Clip_Grip_II_midLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_midLine, "lead-in[fx]: Emerge Clip Grip II midLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 70 ) - 120 - R( 30, 50 )*10","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","syl.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,0)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height ), tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Grip_II_midLine); table.insert(leadin_fx, "Emerge Clip Grip II midLine")
	Emerge_Clip_Grip_III = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_III, "lead-in[fx]: Emerge Clip Grip III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - R( var.loop.d1 - var.loop.d2 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","5, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200,0)\"","d1 = 1000;\nd2 = 300"); table.insert(leadin_fx_library, Emerge_Clip_Grip_III); table.insert(leadin_fx, "Emerge Clip Grip III")
	Emerge_Clip_Horizontal = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal, "lead-in[fx]: Emerge Clip Horizontal","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200, 0)\"","dx = R(-50, 50)*ratio;\ndy = R(-40, 40)*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Horizontal); table.insert(leadin_fx, "Emerge Clip Horizontal")
	Emerge_Clip_Horizontal_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_buttLine, "lead-in[fx]: Emerge Clip Horizontal buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Horizontal_buttLine); table.insert(leadin_fx, "Emerge Clip Horizontal buttLine")
	Emerge_Clip_Horizontal_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_Inverse, "lead-in[fx]: Emerge Clip Horizontal Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(syl.i - 1) - 600","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Horizontal_Inverse); table.insert(leadin_fx, "Emerge Clip Horizontal Inverse")
	Emerge_Clip_Horizontal_midLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_midLine, "lead-in[fx]: Emerge Clip Horizontal midLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Horizontal_midLine); table.insert(leadin_fx, "Emerge Clip Horizontal midLine")
	Emerge_Clip_Vertical = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical, "lead-in[fx]: Emerge Clip Vertical","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 400","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( syl.width/7 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Vertical); table.insert(leadin_fx, "Emerge Clip Vertical")
	Emerge_Clip_Vertical_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_buttLine, "lead-in[fx]: Emerge Clip Vertical buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( syl.width/7 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Vertical_buttLine); table.insert(leadin_fx, "Emerge Clip Vertical buttLine")
	Emerge_Clip_Vertical_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_Inverse, "lead-in[fx]: Emerge Clip Vertical Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(syl.i - 1) - 600","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( syl.width/7 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Vertical_Inverse); table.insert(leadin_fx, "Emerge Clip Vertical Inverse")
	Emerge_Clip_Vertical_midLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_midLine, "lead-in[fx]: Emerge Clip Vertical midLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 70 ) - 120","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( syl.width/7 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), \"\\\\fad(200, 0)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Vertical_midLine); table.insert(leadin_fx, "Emerge Clip Vertical midLine")
	Emerge_Clip_Sequence_HV_Syl = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Sequence_HV_Syl, "lead-in[fx]: Emerge Clip Sequence HV Syl","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 50 ) - 300","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + ((char.i%2 == 0) and var.loop.dx or 0), fx.pos_x","fx.pos_y + ((char.i%2 == 1) and var.loop.dy or 0), fx.pos_y","0, 450","(char.i%2 == 0) and 8 or 1, (char.i%2 == 1) and 8 or 1","","char.text","tag.clip( fx.pos_l - 20, fx.pos_t - 20, char.width + 40, char.height + 40 ), \"\\\\fad(200,0)\"","dx = R( -80, 80 )*ratio;\ndy = R( -80, 80 )*ratio"); table.insert(leadin_fx_library, Emerge_Clip_Sequence_HV_Syl); table.insert(leadin_fx, "Emerge Clip Sequence HV Syl")
	Flashing_Intro_Aux = table.duplicate(PfxM_Box); table.inbox(Flashing_Intro_Aux, "lead-in[fx]: Flashing Intro Aux","Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","15","","line.text_stripped","format( \"\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\fr%s\\\\1a&HDD&\\\\3a&HEE&\\\\4a&HEE&s\\\\t(0,%s,0.8,\\\\fr0\\\\blur0%s)\", fx.pos_x - 10000*ratio, fx.pos_y, Angle*(2*module - 1), delay, tag.only( (j == maxj/2), format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 400;\nAngle = 0.2*ratio","Lua",false); table.insert(leadin_fx_library, Flashing_Intro_Aux); table.insert(leadin_fx, "Flashing Intro Aux")
	Function_Alpha_Delay_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_Delay_MOD, "lead-in[fx]: Function Alpha Delay MOD","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - var.syl.delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.delay( 0, 800, \"&HFF&\", text.alpha1, \"\\\\1va\", \"\\\\3va\" )","delay = 600 - R( 0, 20 )*10","Lua",false); table.insert(leadin_fx_library, Function_Alpha_Delay_MOD); table.insert(leadin_fx, "Function Alpha Delay MOD")
	Function_Alpha_Mask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_Mask_MOD, "lead-in[fx]: Function Alpha Mask MOD","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 300","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.mask( \"\\\\1va\", text.alpha1 ), \"\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Function_Alpha_Mask_MOD); table.insert(leadin_fx, "Function Alpha Mask MOD")
	Function_Alpha_MoveMask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_MoveMask_MOD, "lead-in[fx]: Function Alpha MoveMask MOD","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 300","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.movemask( fx.dur, 240, \"\\\\1va\", text.alpha1 ), \"\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Function_Alpha_MoveMask_MOD); table.insert(leadin_fx, "Function Alpha MoveMask MOD")
	Function_Color_Gradient_Vertical = table.duplicate(PfxM_Box); table.inbox(Function_Color_Gradient_Vertical, "lead-in[fx]: Function Color Gradient Vertical","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1vc%s\\\\fad(200,0)\", color.gradientv( \"&HFFFFFF&\", \"&H47950B&\" ) )",""); table.insert(leadin_fx_library, Function_Color_Gradient_Vertical); table.insert(leadin_fx, "Function Color Gradient Vertical")
	Function_Color_Gradient_Horizontal_I = table.duplicate(PfxM_Box); table.inbox(Function_Color_Gradient_Horizontal_I, "lead-in[fx]: Function Color Gradient Horizontal I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1vc%s\\\\fad(200,0)\", color.gradienth( \"&HCB00FF&\", \"&HFE8D00&\" ) )",""); table.insert(leadin_fx_library, Function_Color_Gradient_Horizontal_I); table.insert(leadin_fx, "Function Color Gradient Horizontal I")
	Function_Color_Gradient_Horizontal_II = table.duplicate(PfxM_Box); table.inbox(Function_Color_Gradient_Horizontal_II, "lead-in[fx]: Function Color Gradient Horizontal II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\1vc%s\\\\fad(200,0)\", color.gradienth( \"&HFFFFFF&\", \"&HFE8D00&\", \"1 - abs(2*%s - 1)\" ) )",""); table.insert(leadin_fx_library, Function_Color_Gradient_Horizontal_II); table.insert(leadin_fx, "Function Color Gradient Horizontal II")
	Function_Color_Mask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Color_Mask_MOD, "lead-in[fx]: Function Color Mask MOD","Syl",true,false,"#FFFFFF","#67D7FE","#000000","0","0","0","l.start_time + time_li( 60 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.mask( \"\\\\1vc\", \"&H07F92B&\" ), \"\\\\bord0\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Function_Color_Mask_MOD); table.insert(leadin_fx, "Function Color Mask MOD")
	Function_Color_MoveMask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Color_MoveMask_MOD, "lead-in[fx]: Function Color MoveMask MOD","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemask( fx.dur, 180, \"\\\\1vc\", \"&HFF8D00&\" ), \"\\\\fad(200,0)\\\\bord0\"","","Lua",false); table.insert(leadin_fx_library, Function_Color_MoveMask_MOD); table.insert(leadin_fx, "Function Color MoveMask MOD")
	Function_Color_MoveMask_Vertical_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Color_MoveMask_Vertical_MOD, "lead-in[fx]: Function Color MoveMask Vertical MOD","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemaskv( fx.dur, 240, \"\\\\1vc\", \"&H00CCFF&\" ), \"\\\\fad(200,0)\\\\bord0\"","","Lua",false); table.insert(leadin_fx_library, Function_Color_MoveMask_Vertical_MOD); table.insert(leadin_fx, "Function Color MoveMask Vertical MOD")
	Function_Color_Set = table.duplicate(PfxM_Box); table.inbox(Function_Color_Set, "lead-in[fx]: Function Color Set","Syl",true,false,"#929292","#0B2442","#000000","25","25","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.set( times, colors, \"\\\\1c\" )","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:20.200\", \"0:00:30.116\", \"0:00:43.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\" }","Lua",false); table.insert(leadin_fx_library, Function_Color_Set); table.insert(leadin_fx, "Function Color Set")
	Function_Color_Set_Mask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Color_Set_Mask_MOD, "lead-in[fx]: Function Color Set Mask MOD","Syl",true,false,"#FFFFFF","#0B2442","#000000","25","25","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.set( times, table.set( var.line.colors ), \"\\\\1vc\" )","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:22.200\", \"0:00:25.116\", \"0:00:33.066\" };\ncolors = color.masktable( { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\", text.color1 } )","Lua",false); table.insert(leadin_fx_library, Function_Color_Set_Mask_MOD); table.insert(leadin_fx, "Function Color Set Mask MOD")
	Function_Color_Set_Move_Mask_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Color_Set_Move_Mask_MOD, "lead-in[fx]: Function Color Set Move Mask MOD","Syl",true,false,"#EAEAEA","#EAEAEA","#EAEAEA","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.setmovemask( 400, \"\\\\1vc\", times, colors )","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:22.200\", \"0:00:25.116\", \"0:00:33.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\", text.color1 }","Lua",false); table.insert(leadin_fx_library, Function_Color_Set_Move_Mask_MOD); table.insert(leadin_fx, "Function Color Set Move Mask MOD")
	Function_Shape_MoveVC_Demo_I_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Shape_MoveVC_Demo_I_MOD, "lead-in[fx]: Function Shape MoveVC Demo I MOD","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x - var.loop.dx, fx.pos_x","fx.pos_y - var.loop.dy, fx.pos_y","0, var.loop.delay + 70*j","1","","syl.text","shape.movevc( shape.multi1( \"default\", 5 ), \"tag\" ), \"\\\\fad(200,0)\"","delay = 600;\ndx = R(-25, 25)*ratio;\ndy = R(-25, 25)*ratio","Lua",false); table.insert(leadin_fx_library, Function_Shape_MoveVC_Demo_I_MOD); table.insert(leadin_fx, "Function Shape MoveVC Demo I MOD")
	Function_Tag_Oscill_Color_and_Blur = table.duplicate(PfxM_Box); table.inbox(Function_Tag_Oscill_Color_and_Blur, "lead-in[fx]: Function Tag Oscill Color and Blur","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 200","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\bord3\\\\3c&H00FF00&\\\\fad(200,0)%s%s\", tag.oscill( fx.dur, 300, table.concat1( { \"&HFF8D00&\", \"&HFF00FF&\", \"&H00FF00&\" }, \"\\\\3c\" ) ), tag.oscill( fx.dur, 300, \"\\\\blur4\", \"\\\\blur1\" ) )","","Lua",false); table.insert(leadin_fx_library, Function_Tag_Oscill_Color_and_Blur); table.insert(leadin_fx, "Function Tag Oscill Color and Blur")
	Function_Tag_Oscill_Snake_Move_MOD = table.duplicate(PfxM_Box); table.inbox(Function_Tag_Oscill_Snake_Move_MOD, "lead-in[fx]: Function Tag Oscill Snake Move MOD","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\fad(300,0)%s\\\\t(%s,%s,\\\\fsvp0)\", tag.oscill( delay, 140, \"\\\\fsvp\" .. Height, \"\\\\fsvp\" .. -Height ), delay, delay + 1 )","Height = 5*ratio;\ndelay = 800","Lua",false); table.insert(leadin_fx_library, Function_Tag_Oscill_Snake_Move_MOD); table.insert(leadin_fx, "Function Tag Oscill Snake Move MOD")
	Ghost_Line_line_Aux = table.duplicate(PfxM_Box); table.inbox(Ghost_Line_line_Aux, "lead-in[fx]: Ghost Line line Aux","Line",true,false,"#6E6E6E","#ADC4D6","#6A8DD6","0","0","0","l.start_time + R( line.dur - 600 )","fx.start_time + 600","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","(line.dur - 600)/920","","line.text_stripped","shape.Rmove( 15*ratio, 15*ratio ), format( \"\\\\bord0\\\\shad0\\\\blur0.4\\\\t(\\\\blur4)\\\\1c%s\", color1 )","color1 = shape.color1","Lua",false); table.insert(leadin_fx_library, Ghost_Line_line_Aux); table.insert(leadin_fx, "Ghost Line line Aux")
	Ghost_Line_line_Multicolor_Aux = table.duplicate(PfxM_Box); table.inbox(Ghost_Line_line_Multicolor_Aux, "lead-in[fx]: Ghost Line line Multicolor Aux","Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + R( line.dur - 120 )","fx.start_time + 360","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","line.dur/360","","line.text_stripped","shape.Rmove( 20*ratio, 16*ratio, 0, fx.dur, 0.75 ), \"\\\\3c\" .. random.color( ),\"\\\\alpha&H86&\\\\blur3\\\\fad(0,120)\"","","Lua",false); table.insert(leadin_fx_library, Ghost_Line_line_Multicolor_Aux); table.insert(leadin_fx, "Ghost Line line Multicolor Aux")
	Ghost_Line_preline = table.duplicate(PfxM_Box); table.inbox(Ghost_Line_preline, "lead-in[fx]: Ghost Line preline","Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay*(maxj - J)","fx.start_time + delay","","","","","line.center","line.middle","","","5","0","fx.pos_x + R( -50, 50 )*ratio, fx.pos_x","fx.pos_y + R( -50, 50 )*ratio, fx.pos_y","","4","","line.text_stripped","replay( 3 ), tag.clip( ), \"\\\\alpha\" .. alpha.interpolate( 240, 60, moduler )","delay = 4*frame_dur","Lua",false); table.insert(leadin_fx_library, Ghost_Line_preline); table.insert(leadin_fx, "Ghost Line preline")
	Ghost_Shake_Multi_LI = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_Multi_LI, "lead-in[fx]: Ghost Shake Multi LI","Syl",true,false,"#2991FF","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","mi_leadin( ), \"\\\\fad(120,0)\"","color1 = shape.color1;\ncolor2 = shape.color3;\nmi_leadin = function( )\n	maxloop( 4 )\n	if j < maxj then\n		retime( \"preline\", 40*(syl.i - 1) - 400, 40*(syl.i - 1) + 40 )\n		relayer( 1 )\n		return format( \"%s\\\\bord0\\\\shad0\\\\blur0.8\\\\1c%s\", shape.Rmove( 15*ratio, 15*ratio, 0, 440 ), color.module( color1, color2 ) )\n	end\n	retime( \"start2syl\", 40*(syl.i - 1) - 200, 0 )\n	relayer( 0 )\n	return \"\"\nend","Lua",false); table.insert(leadin_fx_library, Ghost_Shake_Multi_LI); table.insert(leadin_fx, "Ghost Shake Multi LI")
	Ghost_Shake_Simple = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_Simple, "lead-in[fx]: Ghost Shake Simple","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 50 ) - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 20*ratio, 20*ratio, 0, delay, 1, { 200 } ), \"\\\\fad(800,0)\"","delay = 800","Lua",false); table.insert(leadin_fx_library, Ghost_Shake_Simple); table.insert(leadin_fx, "Ghost Shake Simple")
	Ghost_Syl_presyl_I = table.duplicate(PfxM_Box); table.inbox(Ghost_Syl_presyl_I, "lead-in[fx]: Ghost Syl presyl I","Syl",true,false,"#FFFFFF","#68B9FB","#000000","0","0","0","l.start_time + syl.start_time -1200 + 1200*module^0.8","fx.start_time + 300","math.bezier( \"x\", Points )","math.bezier( \"y\", Points )","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","24","","syl.text","format( \"\\\\shad0\\\\bord3\\\\1c%s\\\\3c%s\\\\blur6\\\\alpha%s\\\\fad(50,50)\", shape.color1, shape.color3, alpha.module( \"&HF0&\", \"&H86&\" ) )","Radius = 1.5*syl.height;\nAngle = R( 360 );\nPoints = math.point( 5, Radius, Radius, math.polar( Angle, Radius, \"x\" ), math.polar( Angle, Radius, \"y\" ), 0, 0 )","Lua",false); table.insert(leadin_fx_library, Ghost_Syl_presyl_I); table.insert(leadin_fx, "Ghost Syl presyl I")
	Gradient_H_vsfilter = table.duplicate(PfxM_Box); table.inbox(Gradient_H_vsfilter, "lead-in[fx]: Gradient H vsfilter","Line",true,false,"#FF0030","#FFF000","#23DF02","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","gradienth( shape.color1, shape.color3, shape.color4 )","","gradienth = function( ... )\n	local HC = 2\n	local colors, Shape = { }, \"\"\n	if type( ... ) == \"table\" then\n		colors = ...\n	else\n		colors = { ... }\n	end\n	if #colors < 2 then\n		table.insert( colors, shape.color1 )\n		table.insert( colors, shape.color3 )\n	end\n	local n, cn, gradv = #colors - 1, ceil( val_width/HC ), { }\n	for i = 1, cn do\n		N = ceil( i/((cn + 1)/n) )\n		gradv[i] = color.interpolate( colors[N], colors[N + 1], (i - (N - 1)*(cn + 1)/n - 1)/((cn + 1)/n) )\n	end\n	for i = 1, cn do\n		Shape = Shape .. format( \"{\\\\1c%s\\\\p1}%s\", gradv[i], shape.size( shape.rectangle, HC, val_height ) )\n	end\n	return format( \"{%s\\\\bord0\\\\shad0}%s\", text.to_clip( ), Shape )\nend","Lua",false); table.insert(leadin_fx_library, Gradient_H_vsfilter); table.insert(leadin_fx, "Gradient H vsfilter")
	Gradient_V_vsfilter = table.duplicate(PfxM_Box); table.inbox(Gradient_V_vsfilter, "lead-in[fx]: Gradient V vsfilter","Line",true,false,"#F6F3F3","#FF000C","#FFDE00","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","gradientv( shape.color1, shape.color1, shape.color3, shape.color4 )","","gradientv = function( ... )\n	local HC = 2\n	local colors, Shape = { }, \"\"\n	if type( ... ) == \"table\" then\n		colors = ...\n	else\n		colors = { ... }\n	end\n	if #colors < 2 then\n		table.insert( colors, shape.color1 )\n		table.insert( colors, shape.color3 )\n	end\n	local n, cn, gradv = #colors - 1, ceil( (l.height - l.descent)/HC ), { }\n	for i = 1, cn do\n		N = ceil( i/((cn + 1)/n) )\n		gradv[i] = color.interpolate( colors[N], colors[N + 1], (i - (N - 1)*(cn + 1)/n - 1)/((cn + 1)/n) )\n	end\n	for i = 1, cn do\n		Shape = Shape .. format( \"{\\\\1c%s\\\\p1}%s{\\\\p0}\\\\N\", gradv[i], shape.size( shape.rectangle, 1.2*val_width, HC ) )\n	end\n	return format( \"{%s\\\\bord0\\\\shad0}%s\", text.to_clip( ), Shape )\nend","Lua",false); table.insert(leadin_fx_library, Gradient_V_vsfilter); table.insert(leadin_fx, "Gradient V vsfilter")
	Helical_Char_I = table.duplicate(PfxM_Box); table.inbox(Helical_Char_I, "lead-in[fx]: Helical Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 560","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y + Dy*(-1)^j + (2*Dy*(-1)^(j+1))*(char.i-1)/char.n, fx.pos_y","0, 1.4*delay","2","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\t(0,%s,0.8,\\\\frx0)\\\\t(%s,%s,%s)\\\\fad(300,0)\", fx.pos_x, fx.pos_y, delay, delay + 300, delay + 301, tag.only( j == 1, \"\\\\alpha&HFF&\", format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 450;\nDy = 70*ratio","Lua",false); table.insert(leadin_fx_library, Helical_Char_I); table.insert(leadin_fx, "Helical Char I")
	Helical_Char_II_buttLine = table.duplicate(PfxM_Box); table.inbox(Helical_Char_II_buttLine, "lead-in[fx]: Helical Char II buttLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid2( 70 ) - 500","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y + Dy*(-1)^j + (2*Dy*(-1)^(j+1))*(char.i-1)/char.n, fx.pos_y","0, 1.4*delay","2","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\t(0,%s,0.8,\\\\frx0)\\\\t(%s,%s,%s)\\\\fad(300,0)\", fx.pos_x, fx.pos_y, delay, delay + 300, delay + 301, tag.only( j == 1, \"\\\\alpha&HFF&\", format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 450;\nDy = 70*ratio","Lua",false); table.insert(leadin_fx_library, Helical_Char_II_buttLine); table.insert(leadin_fx, "Helical Char II buttLine")
	Helical_Char_III_Inverse = table.duplicate(PfxM_Box); table.inbox(Helical_Char_III_Inverse, "lead-in[fx]: Helical Char III Inverse","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 30*(char.i - 1) - 700","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y + Dy*(-1)^j + (2*Dy*(-1)^(j+1))*(char.i-1)/char.n, fx.pos_y","0, 1.4*delay","2","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\t(0,%s,0.8,\\\\frx0)\\\\t(%s,%s,%s)\\\\fad(300,0)\", fx.pos_x, fx.pos_y, delay, delay + 300, delay + 301, tag.only( j == 1, \"\\\\alpha&HFF&\", format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 450;\nDy = 70*ratio","Lua",false); table.insert(leadin_fx_library, Helical_Char_III_Inverse); table.insert(leadin_fx, "Helical Char III Inverse")
	Helical_Char_IV_midLine = table.duplicate(PfxM_Box); table.inbox(Helical_Char_IV_midLine, "lead-in[fx]: Helical Char IV midLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid1( 70 ) - 580","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y + Dy*(-1)^j + (2*Dy*(-1)^(j+1))*(char.i-1)/char.n, fx.pos_y","0, 1.4*delay","2","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\t(0,%s,0.8,\\\\frx0)\\\\t(%s,%s,%s)\\\\fad(300,0)\", fx.pos_x, fx.pos_y, delay, delay + 300, delay + 301, tag.only( j == 1, \"\\\\alpha&HFF&\", format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 450;\nDy = 70*ratio","Lua",false); table.insert(leadin_fx_library, Helical_Char_IV_midLine); table.insert(leadin_fx, "Helical Char IV midLine")
	Keane_Again_and_Again = table.duplicate(PfxM_Box); table.inbox(Keane_Again_and_Again, "lead-in[fx]: Keane Again and Again","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr40)\\\\t(160,420,0.8,\\\\fr0)\\\\fad(200,0)\", fx.move_l1, fx.move_b1 - l.descent )","","Lua",false); table.insert(leadin_fx_library, Keane_Again_and_Again); table.insert(leadin_fx, "Keane Again and Again")
	Keane_Better_Than_This = table.duplicate(PfxM_Box); table.inbox(Keane_Better_Than_This, "lead-in[fx]: Keane Better Than This","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr-40)\\\\t(160,420,0.8,\\\\fr0)\\\\fad(200,0)\", fx.move_l1, fx.move_b1 - l.descent )","","Lua",false); table.insert(leadin_fx_library, Keane_Better_Than_This); table.insert(leadin_fx, "Keane Better Than This")
	Keane_Black_Burning_Heart = table.duplicate(PfxM_Box); table.inbox(Keane_Black_Burning_Heart, "lead-in[fx]: Keane Black Burning Heart","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr%s)\\\\t(160,420,0.8,\\\\fr0)\\\\fad(200,0)\", fx.move_l1, fx.move_b1 - l.descent, 40*(-1)^(syl.i + ii) )","","Lua",false); table.insert(leadin_fx_library, Keane_Black_Burning_Heart); table.insert(leadin_fx, "Keane Black Burning Heart")
	Keane_Loves_Is_The_End = table.duplicate(PfxM_Box); table.inbox(Keane_Loves_Is_The_End, "lead-in[fx]: Keane Loves Is The End","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fscx%s\\\\fscy%s\\\\fr%s\\\\frx80)\\\\t(160,420,0.8,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\frx0)\\\\fad(200,0)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent, 1.25*l.scale_x, 1.25*l.scale_y, 40*(-1)^(syl.i + ii), l.scale_x, l.scale_y )","","Lua",false); table.insert(leadin_fx_library, Keane_Loves_Is_The_End); table.insert(leadin_fx, "Keane Loves Is The End")
	Keane_Lovers_Are_Losing = table.duplicate(PfxM_Box); table.inbox(Keane_Lovers_Are_Losing, "lead-in[fx]: Keane Lovers Are Losing","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fscy%s\\\\fr%s\\\\fry40\\\\frx80)\\\\t(160,420,0.8,\\\\fscy%s\\\\fr0\\\\fry0\\\\frx0)\\\\fad(200,0)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent - tag.only( ceil( (syl.i + ii)/2 )%2 == 1, syl.height - 2*l.descent ), 1.6*l.scale_y, 40*(-1)^(syl.i + ii), l.scale_y )","","Lua",false); table.insert(leadin_fx_library, Keane_Lovers_Are_Losing); table.insert(leadin_fx, "Keane Lovers Are Losing")
	Keane_Perfect_Symmetry = table.duplicate(PfxM_Box); table.inbox(Keane_Perfect_Symmetry, "lead-in[fx]: Keane Perfect Symmetry","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ) )","","Lua",false); table.insert(leadin_fx_library, Keane_Perfect_Symmetry); table.insert(leadin_fx, "Keane Perfect Symmetry")
	Keane_Playing_Along = table.duplicate(PfxM_Box); table.inbox(Keane_Playing_Along, "lead-in[fx]: Keane Playing Along","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ) )","","Lua",false); table.insert(leadin_fx_library, Keane_Playing_Along); table.insert(leadin_fx, "Keane Playing Along")
	Keane_Pretend_That_You_Are_Alone = table.duplicate(PfxM_Box); table.inbox(Keane_Pretend_That_You_Are_Alone, "lead-in[fx]: Keane Pretend That You Are Alone","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) )","","Lua",false); table.insert(leadin_fx_library, Keane_Pretend_That_You_Are_Alone); table.insert(leadin_fx, "Keane Pretend That You Are Alone")
	Keane_Spiralling = table.duplicate(PfxM_Box); table.inbox(Keane_Spiralling, "lead-in[fx]: Keane Spiralling","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) )","","Lua",false); table.insert(leadin_fx_library, Keane_Spiralling); table.insert(leadin_fx, "Keane Spiralling")
	Keane_You_Do_not_See_Me = table.duplicate(PfxM_Box); table.inbox(Keane_You_Do_not_See_Me, "lead-in[fx]: Keane You Do not See Me","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ) ) )","","Lua",false); table.insert(leadin_fx_library, Keane_You_Do_not_See_Me); table.insert(leadin_fx, "Keane You Do not See Me")
	Keane_You_Have_not_Told_Me_Anything = table.duplicate(PfxM_Box); table.inbox(Keane_You_Have_not_Told_Me_Anything, "lead-in[fx]: Keane You Have not Told Me Anything","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) ) )","","Lua",false); table.insert(leadin_fx_library, Keane_You_Have_not_Told_Me_Anything); table.insert(leadin_fx, "Keane You Have not Told Me Anything")
	Keane_Bonus_Track = table.duplicate(PfxM_Box); table.inbox(Keane_Bonus_Track, "lead-in[fx]: Keane Bonus Track","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 40 ) - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only2( { syl.i%4 == 1, syl.i%4 == 2, syl.i%4 == 3, syl.i%4 == 0 },\ntag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\fad(200,0)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\fad(200,0)\", fx.move_l1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,80,420)\\\\fscy0\\\\t(80,420,0.8,\\\\fscy%s)\\\\fad(200,0)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,80,420)\\\\1c&H0000FF&\\\\fscy%s\\\\t(80,420,0.8,\\\\fscy0)\\\\fad(200,0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) ) )","","Lua",false); table.insert(leadin_fx_library, Keane_Bonus_Track); table.insert(leadin_fx, "Keane Bonus Track")
	Meave_Light_I = table.duplicate(PfxM_Box); table.inbox(Meave_Light_I, "lead-in[fx]: Meave Light I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - time_mid1( 15 ) - 420","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord%s\\\\blur3\\\\t(120,200,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\\\\fad(150,0)\", 2*l.outline, text.color1, text.color3, l.outline )","","Lua",false); table.insert(leadin_fx_library, Meave_Light_I); table.insert(leadin_fx, "Meave Light I")
	Move_Char_I = table.duplicate(PfxM_Box); table.inbox(Move_Char_I, "lead-in[fx]: Move Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 420","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + dx, fx.pos_x","fx.pos_y + dy, fx.pos_y","0, delay","1","","char.text","\"\\\\fad(200,0)\"","delay = 450;\ndx = R( 50, 100 )*ratio;\ndy = R( -30, 30 )*ratio","Lua",false); table.insert(leadin_fx_library, Move_Char_I); table.insert(leadin_fx, "Move Char I")
	Move_Char_II_Gyre = table.duplicate(PfxM_Box); table.inbox(Move_Char_II_Gyre, "lead-in[fx]: Move Char II Gyre","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 420","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + dx, fx.pos_x","fx.pos_y + dy, fx.pos_y","0, delay","1","","char.text","format( \"\\\\frx%s\\\\fry%s\\\\frz%s\\\\t(0,%s,\\\\frx0\\\\fry0\\\\frz0)\\\\fad(200,0)\", R( -360, 360 ), R( -360, 360 ), R( -360, 360 ), delay )","delay = 450;\ndx = R( 50, 100 )*ratio;\ndy = R( -30, 30 )*ratio","Lua",false); table.insert(leadin_fx_library, Move_Char_II_Gyre); table.insert(leadin_fx, "Move Char II Gyre")
	Move_Line_Center_Clip_I = table.duplicate(PfxM_Box); table.inbox(Move_Line_Center_Clip_I, "lead-in[fx]: Move Line Center Clip I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^(j + 1), fx.pos_x","fx.pos_y","0, delay","1, 2","","syl.text","tag.clip( l.left, l.top, l.width, l.height )","delay = 450"); table.insert(leadin_fx_library, Move_Line_Center_Clip_I); table.insert(leadin_fx, "Move Line Center Clip I")
	Move_Line_Center_Clip_II = table.duplicate(PfxM_Box); table.inbox(Move_Line_Center_Clip_II, "lead-in[fx]: Move Line Center Clip II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^j, fx.pos_x","fx.pos_y","0, delay","1, 2","","syl.text","tag.clip( l.left, l.top, l.width, l.height )","delay = 450"); table.insert(leadin_fx_library, Move_Line_Center_Clip_II); table.insert(leadin_fx, "Move Line Center Clip II")
	Move_Line_Center_Clip_Sequence = table.duplicate(PfxM_Box); table.inbox(Move_Line_Center_Clip_Sequence, "lead-in[fx]: Move Line Center Clip Sequence","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay - 200","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^(j + line.i), fx.pos_x","fx.pos_y","0, delay","1, 2","","syl.text","tag.clip( l.left, l.top, l.width, l.height )","delay = 450"); table.insert(leadin_fx_library, Move_Line_Center_Clip_Sequence); table.insert(leadin_fx, "Move Line Center Clip Sequence")
	Move_Line_I_Bottom = table.duplicate(PfxM_Box); table.inbox(Move_Line_I_Bottom, "lead-in[fx]: Move Line I Bottom","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y + Dy, fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua",false); table.insert(leadin_fx_library, Move_Line_I_Bottom); table.insert(leadin_fx, "Move Line I Bottom")
	Move_Line_II_Top = table.duplicate(PfxM_Box); table.inbox(Move_Line_II_Top, "lead-in[fx]: Move Line II Top","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y - Dy, fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua",false); table.insert(leadin_fx_library, Move_Line_II_Top); table.insert(leadin_fx, "Move Line II Top")
	Move_Line_III_Left = table.duplicate(PfxM_Box); table.inbox(Move_Line_III_Left, "lead-in[fx]: Move Line III Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x - Dx, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua",false); table.insert(leadin_fx_library, Move_Line_III_Left); table.insert(leadin_fx, "Move Line III Left")
	Move_Line_IV_Right = table.duplicate(PfxM_Box); table.inbox(Move_Line_IV_Right, "lead-in[fx]: Move Line IV Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua",false); table.insert(leadin_fx_library, Move_Line_IV_Right); table.insert(leadin_fx, "Move Line IV Right")
	Move_Line_V_Left_Right = table.duplicate(PfxM_Box); table.inbox(Move_Line_V_Left_Right, "lead-in[fx]: Move Line V Left Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + Dx*(-1)^line.i, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua",false); table.insert(leadin_fx_library, Move_Line_V_Left_Right); table.insert(leadin_fx, "Move Line V Left Right")
	Move_Line_VI_Bottom_Top = table.duplicate(PfxM_Box); table.inbox(Move_Line_VI_Bottom_Top, "lead-in[fx]: Move Line VI Bottom Top","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y + Dy*(-1)^line.i, fx.pos_y","0, delay","1","","syl.text","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua",false); table.insert(leadin_fx_library, Move_Line_VI_Bottom_Top); table.insert(leadin_fx, "Move Line VI Bottom Top")
	Move_Syl_from_Center_Line = table.duplicate(PfxM_Box); table.inbox(Move_Syl_from_Center_Line, "lead-in[fx]: Move Syl from Center Line","Furi",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - 400","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","l.center, fx.pos_x","fx.pos_y","0, delay","1","","syl.text","\"\\\\fad(200,0)\"","delay = 460","Lua",false); table.insert(leadin_fx_library, Move_Syl_from_Center_Line); table.insert(leadin_fx, "Move Syl from Center Line")
	Palpitations_Char = table.duplicate(PfxM_Box); table.inbox(Palpitations_Char, "lead-in[fx]: Palpitations Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 ) - 720","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\fad(200,0)\\\\fscx0\\\\fscy0\\\\t(0,250,\\\\fscx%s\\\\fscy%s)\\\\t(250,350,\\\\fscx%s\\\\fscy%s)\\\\t(350,550,\\\\fscx%s\\\\fscy%s)\\\\t(550,650,\\\\fscx%s\\\\fscy%s)\\\\t(650,750,\\\\fscx%s\\\\fscy%s)\\\\t(750,850,\\\\fscx%s\\\\fscy%s)\", 1.8*l.scale_x, 1.8*l.scale_y, 0.8*l.scale_x, 0.8*l.scale_y, 1.2*l.scale_x, 1.2*l.scale_y, 1.5*l.scale_x, 1.5*l.scale_y, 1.2*l.scale_x, 1.2*l.scale_y, l.scale_x, l.scale_y )","","Lua",false); table.insert(leadin_fx_library, Palpitations_Char); table.insert(leadin_fx, "Palpitations Char")
	Phantom_Syl_Smove = table.duplicate(PfxM_Box); table.inbox(Phantom_Syl_Smove, "lead-in[fx]: Phantom Syl Smove","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time - 2000 + 300*module","l.start_time + syl.start_time + 300*module","","","","","syl.center","syl.middle","","","5","maxj - j + 1","fx.pos_x","fx.pos_y","","8","","syl.text","shape.Smove( mi_shape, 0, fx.dur - 300, 0, true ), format( \"\\\\3c%s\\\\blur%s\\\\fad(200,0)\", color.module( text.color1, text.color3 ), 4*module )","mi_shape = format( \"m %s %s b %s %s %s %s 0 0 \", R( -100,100 )*ratio, R( -100,100 )*ratio, R( -100,100 )*ratio, R( -100,100 )*ratio, R( -100,100 )*ratio, R( -100,100 )*ratio )","Lua",false); table.insert(leadin_fx_library, Phantom_Syl_Smove); table.insert(leadin_fx, "Phantom Syl Smove")
	Psycho_leadin_Deformed = table.duplicate(PfxM_Box); table.inbox(Psycho_leadin_Deformed, "lead-in[fx]: Psycho leadin Deformed","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Psycho( )","","Psycho = function( )\n	local Px1 = 60*ratio\n	local Px2 = 200*ratio\n	local trim = 4\n	local text_shape = { \n		[1] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px1*(1 + sin( 2*pi*Mx )) return x, y end );\n		[2] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px1*(sin( 2*pi*Mx ) - 1) return x, y end );\n		[3] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px2*(1 + sin( 2*pi*Mx )) return x, y end );\n		[4] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px2*(sin( 2*pi*Mx ) - 1) return x, y end )\n	}\n	replay( 2 )\n	if J == 1 then\n		retime( \"preline\", -8*frame_dur, 0 )\n		return \"{\\\\bord0.5\\\\fad(160,0)}\" .. shape.animated2( 8*frame_dur, 2*frame_dur, text_shape )\n	end\n	retime( \"start2syl\" )\n	return syl.text\nend","Lua",false); table.insert(leadin_fx_library, Psycho_leadin_Deformed); table.insert(leadin_fx, "Psycho leadin Deformed")
	Rmove_Syl_retime_line = table.duplicate(PfxM_Box); table.inbox(Rmove_Syl_retime_line, "lead-in[fx]: Rmove Syl retime line","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","retime( \"line\", -fad, fad ), shape.Rmove( var.line.mi_shape, nil, 0, fx.dur, 0.9, { 220 } ), format( \"\\\\alpha&HFF&\\\\t(%s,%s,%s)\\\\t(%s,%s,\\\\alpha&HFF&)\", (syl.i - 1)*delay, (syl.i - 1)*delay + fad, text.alpha, fx.dur - delay*(syl.n - syl.i) - fad, fx.dur - delay*(syl.n - syl.i) )","delay = 40; fad = 200;\nmi_shape = shape.Rtrajectory( 20, 4, 15 )","Lua",false); table.insert(leadin_fx_library, Rmove_Syl_retime_line); table.insert(leadin_fx, "Rmove Syl retime line")
	Rmove_Syl_retime_line_without_Syl = table.duplicate(PfxM_Box); table.inbox(Rmove_Syl_retime_line_without_Syl, "lead-in[fx]: Rmove Syl retime line without Syl","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","retime( \"line\", -fad, fad ), shape.Rmove( var.line.mi_shape, nil, 0, fx.dur, 0.9, { 220 } ), format( \"\\\\alpha&HFF&\\\\t(%s,%s,%s)%s\\\\t(%s,%s,\\\\alpha&HFF&)\", (syl.i - 1)*delay, (syl.i - 1)*delay + fad, text.alpha, without_syl, fx.dur - delay*(syl.n - syl.i) - fad, fx.dur - delay*(syl.n - syl.i) )","delay = 40; fad = 200;\nmi_shape = shape.Rtrajectory( 20, 4, 15 );\nwithout_syl = format( \"\\\\t(%s,%s,\\\\alpha&HFF&)\\\\t(%s,%s,%s)\", fad + syl.start_time, fad + syl.start_time + 1, fad + syl.end_time, fad + syl.end_time + 1, text.alpha )","Lua",false); table.insert(leadin_fx_library, Rmove_Syl_retime_line_without_Syl); table.insert(leadin_fx, "Rmove Syl retime line without Syl")
	Rmove_Syl_retime_start2syl = table.duplicate(PfxM_Box); table.inbox(Rmove_Syl_retime_start2syl, "lead-in[fx]: Rmove Syl retime start2syl","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","retime( \"start2syl\", -fad, Dur ), shape.Rmove( var.line.mi_shape, nil, 0, fx.dur, 0.9, { Dur } ), format( \"\\\\alpha&HFF&\\\\t(%s,%s,%s)\\\\t(%s,%s,\\\\alpha&HFF&)\", (syl.i - 1)*delay, (syl.i - 1)*delay + fad, text.alpha, fx.dur - Dur, fx.dur - Dur + 1 )","delay = 40; fad = 200; Dur = 220;\nmi_shape = shape.Rtrajectory( 20, 4, 15 )","Lua",false); table.insert(leadin_fx_library, Rmove_Syl_retime_start2syl); table.insert(leadin_fx, "Rmove Syl retime start2syl")
	Screw_Char_I = table.duplicate(PfxM_Box); table.inbox(Screw_Char_I, "lead-in[fx]: Screw Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 380","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\frx180\\\\t(0,440,0.8,\\\\frx0)\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Screw_Char_I); table.insert(leadin_fx, "Screw Char I")
	Screw_Char_II_buttLine = table.duplicate(PfxM_Box); table.inbox(Screw_Char_II_buttLine, "lead-in[fx]: Screw Char II buttLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid2( 40 ) - 150","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\frx180\\\\t(0,440,0.8,\\\\frx0)\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Screw_Char_II_buttLine); table.insert(leadin_fx, "Screw Char II buttLine")
	Screw_Char_III_midLine = table.duplicate(PfxM_Box); table.inbox(Screw_Char_III_midLine, "lead-in[fx]: Screw Char III midLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_mid1( 40 ) - 280","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\frx180\\\\t(0,440,0.8,\\\\frx0)\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Screw_Char_III_midLine); table.insert(leadin_fx, "Screw Char III midLine")
	Screw_Char_IV_Inverse = table.duplicate(PfxM_Box); table.inbox(Screw_Char_IV_Inverse, "lead-in[fx]: Screw Char IV Inverse","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 30*(char.i - 1) - 600","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\frx180\\\\t(0,440,0.8,\\\\frx0)\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Screw_Char_IV_Inverse); table.insert(leadin_fx, "Screw Char IV Inverse")
	Shigatsu_leadin_and_leadout = table.duplicate(PfxM_Box); table.inbox(Shigatsu_leadin_and_leadout, "lead-in[fx]: Shigatsu leadin and leadout","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","Shigatsu( 0.88, 260 )","Shigatsu = function( Offset, delay )\n	local Of = Offset or 1\n	local Dl = delay or 0\n	local Df = frame_dur\n	local Tgi = format( \"\\\\bord1\\\\move(%s,%s,%s,%s,0,%s)\",\n	val_center, val_middle + 70*(-1)^val_i, val_center, val_middle + 8*(-1)^val_i, 10*Df )\n	local Tsi, Tso = { }, { }\n	Tsi = {\n		[01] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry88\\\\fscy%s\\\\1c&H828282&\\\\3c&HB6B6B6&)\", 0, 1, 6.4*l.scale_y ),\n		[02] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry84\\\\fscy%s\\\\1c&HB0D6E2&\\\\3c&H848488&)\", Df, Df + 1, 5.9*l.scale_y ),\n		[03] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry82\\\\fscy%s\\\\1c&HC2D8E0&\\\\3c&H83838B&)\", 2*Df, 2*Df + 1, 5.2*l.scale_y ),\n		[04] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry87\\\\fscy%s\\\\1c&HBDBDBD&\\\\3c&H5E5E5E&)\", 3*Df, 3*Df + 1, 4.0*l.scale_y ),\n		[05] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry87\\\\fscy%s\\\\1c&H000000&\\\\3c&H3F3F3F&)\", 4*Df, 4*Df + 1, 3.0*l.scale_y ),\n		[06] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry67\\\\fscy%s\\\\3c&H626263&)\", 5*Df, 5*Df + 1, 1.8*l.scale_y ),\n		[07] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry55\\\\fscy%s\\\\3c&H626263&)\", 6*Df, 6*Df + 1, 1.5*l.scale_y ),\n		[08] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry42\\\\fscy%s\\\\1c%s\\\\3c%s)\", 7*Df, 7*Df + 1, 1.3*l.scale_y, text.color1, text.color3 ),\n		[09] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry22\\\\fscy%s)\", 8*Df, 8*Df + 1, 1.1*l.scale_y ),\n		[10] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry00\\\\fscy%s)\", 9*Df, 9*Df + 1, 1.0*l.scale_y )\n	}\n	local dur = linefx[ii].duration - val_start + 10*Df\n	local Tgo = format( \"\\\\bord1\\\\move(%s,%s,%s,%s,%s,%s)\\\\t(\\\\alpha&HEE&)\", \n	val_center, val_middle - 8*(-1)^val_i, val_center, val_middle - 70*(-1)^val_i, dur - 10*Df, dur )\n	Tso = {\n		[01] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry00\\\\fscy%s)\", 0*Df, 1*Df, 1.0*l.scale_y ),\n		[02] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry22\\\\fscy%s)\", 1*Df, 2*Df, 1.1*l.scale_y ),\n		[03] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry42\\\\fscy%s)\", 2*Df, 3*Df, 1.3*l.scale_y ),\n		[04] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry55\\\\fscy%s\\\\3c&H626263&)\", 3*Df, 4*Df, 1.5*l.scale_y ),\n		[05] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry67\\\\fscy%s\\\\3c&H626263&)\", 4*Df, 5*Df, 1.8*l.scale_y ),\n		[06] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry87\\\\fscy%s\\\\1c&H000000&\\\\3c&H3F3F3F&)\", 5*Df, 6*Df, 3.0*l.scale_y ),\n		[07] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry87\\\\fscy%s\\\\1c&HBDBDBD&\\\\3c&H5E5E5E&)\", 6*Df, 7*Df, 4.0*l.scale_y ),\n		[08] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry82\\\\fscy%s\\\\1c&HC2D8E0&\\\\3c&H83838B&)\", 7*Df, 8*Df, 5.2*l.scale_y ),\n		[09] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry84\\\\fscy%s\\\\1c&HB0D6E2&\\\\3c&H848488&)\", 8*Df, 9*Df, 5.9*l.scale_y ),\n		[10] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry88\\\\fscy%s\\\\1c&H828282&\\\\3c&HB6B6B6&)\", 9*Df, 10*Df, 6.4*l.scale_y )\n	}\n	local tagfxi = Tgi .. table.op( Tsi, \"concat\" )\n	local tagfxo = Tgo .. table.op( Tso, \"concat\" )\n	maxloop( 4 )\n	if j == 1 then\n		retime( \"preline\", -20*Df + Dl, -10*Df + Dl )\n		return tagfxi\n	elseif j == 2 then\n		retime( \"start2syl\", -10*Df + Dl, 0 )\n		return format( \"\\\\blur3\\\\t(0,%s,\\\\bord%s)\\\\fry0\\\\fscy%s\\\\move(%s,%s,%s,%s,0,%s)\", \n		10*Df, l.outline, l.scale_y, val_center, val_middle + 8*(-1)^val_i, val_center, val_middle, 10*Df )\n	elseif j == 3 then\n		retime( \"syl2end\", -val_dur, 10*Df - Dl - 180 )\n		return format( \"\\\\blur3\\\\t(%s,%s,\\\\bord%s)\\\\fry0\\\\fscy%s\\\\move(%s,%s,%s,%s,%s,%s)\", \n		dur - 10*Df, dur, l.outline, l.scale_y, val_center, val_middle, val_center, val_middle - 8*(-1)^val_i, dur - 10*Df, dur )\n	elseif j == 4 then\n		retime( \"postline\", 10*Df - Dl - 180, 20*Df - Dl - 180 )\n		return tagfxo\n	end\nend","Lua",false); table.insert(leadin_fx_library, Shigatsu_leadin_and_leadout); table.insert(leadin_fx, "Shigatsu leadin and leadout")
	Shine_Line_Perspective_preline = table.duplicate(PfxM_Box); table.inbox(Shine_Line_Perspective_preline, "lead-in[fx]: Shine Line Perspective preline","Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 320","l.start_time","","","","","line.center","line.middle","","","5","maxj - j + 1","fx.pos_x, fx.pos_x","fx.pos_y + height*(3 + 1.2*module), fx.pos_y","","10","l.scale_x*(0.8 - 0.05*module), l.scale_y","line.text_stripped","format( \"\\\\3c&HFFFFFF&\\\\blur%s\\\\alpha%s\\\\t(\\\\fscx%s)\\\\fad(60,0)%s\", 6*module, ass_alpha(240*module), l.scale_x, tag.only( j == 1, format( \"\\\\t(\\\\3c%s)\", text.color3 ) ) )","height = 17*ratio","Lua",false); table.insert(leadin_fx_library, Shine_Line_Perspective_preline); table.insert(leadin_fx, "Shine Line Perspective preline")
	Simple_Moves3_Char = table.duplicate(PfxM_Box); table.inbox(Simple_Moves3_Char, "lead-in[fx]: Simple Moves3 Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + 50*(char.i - char.n/2 - 1) - 200","l.start_time + char.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.syl.dx, fx.pos_x","fx.pos_y, fx.pos_y, fx.pos_y","0, var.syl.delay","1","","char.text","'\\\\fad(300,0)'","dx = 70*ratio, delay = 460"); table.insert(leadin_fx_library, Simple_Moves3_Char); table.insert(leadin_fx, "Simple Moves3 Char")
	Snake_Char_I = table.duplicate(PfxM_Box); table.inbox(Snake_Char_I, "lead-in[fx]: Snake Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 640","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, 4*delay","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y - Dy, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y }, nil, 4*delay ), \"\\\\fad(200,0)\"","delay = 180;\nDx = 40*ratio;\nDy = 8*ratio","Lua",false); table.insert(leadin_fx_library, Snake_Char_I); table.insert(leadin_fx, "Snake Char I")
	Snake_Char_II = table.duplicate(PfxM_Box); table.inbox(Snake_Char_II, "lead-in[fx]: Snake Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 640","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, 4*delay","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y - Dy, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y }, nil, 4*delay ), format( \"\\\\org(%s,%s)\\\\t(0,%s,0.8,\\\\frx360)\\\\fad(200,0)\", fx.move_x2, fx.move_y1, 4*delay )","delay = 180;\nDx = 40*ratio;\nDy = 24*ratio","Lua",false); table.insert(leadin_fx_library, Snake_Char_II); table.insert(leadin_fx, "Snake Char II")
	Spectrum_Move_Char = table.duplicate(PfxM_Box); table.inbox(Spectrum_Move_Char, "lead-in[fx]: Spectrum Move Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 500","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx%s\\\\frz%s\\\\t(0,%s,0.7,\\\\frx0\\\\frz0)\\\\fad(200,0)\", fx.move_x1, fx.move_y1 - 20*ratio, 140 + 2*char.i, 40 + char.i, 580 + 8*char.i )","","Lua",false); table.insert(leadin_fx_library, Spectrum_Move_Char); table.insert(leadin_fx, "Spectrum Move Char")
	Static_Clip_Ascend = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend, "lead-in[fx]: Static Clip Ascend","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + syl.height, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )","","Lua",false); table.insert(leadin_fx_library, Static_Clip_Ascend); table.insert(leadin_fx, "Static Clip Ascend")
	Static_Clip_Descend = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Descend, "lead-in[fx]: Static Clip Descend","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y - syl.height, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )","","Lua",false); table.insert(leadin_fx_library, Static_Clip_Descend); table.insert(leadin_fx, "Static Clip Descend")
	Static_Clip_Left = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left, "lead-in[fx]: Static Clip Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x - syl.width, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )","","Lua",false); table.insert(leadin_fx_library, Static_Clip_Left); table.insert(leadin_fx, "Static Clip Left")
	Static_Clip_Left_Right = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_Right, "lead-in[fx]: Static Clip Left Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + syl.width*(-1)^syl.i, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Left_Right); table.insert(leadin_fx, "Static Clip Left Right")
	Static_Clip_Right = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Right, "lead-in[fx]: Static Clip Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + syl.width, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Right); table.insert(leadin_fx, "Static Clip Right")
	Static_Clip_Top_Bottom = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Top_Bottom, "lead-in[fx]: Static Clip Top Bottom","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + syl.height*(-1)^syl.i, fx.pos_y","0, 400","1","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Top_Bottom); table.insert(leadin_fx, "Static Clip Top Bottom")
	Static_Clip_Horizontal_Multi_I = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Horizontal_Multi_I, "lead-in[fx]: Static Clip Horizontal Multi I","Syl",true,false,"#FFFFFF","#0B2442","#000000","25","25","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + syl.width*(-1)^j, fx.pos_x","fx.pos_y, fx.pos_y","0, 460","5","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Horizontal_Multi_I); table.insert(leadin_fx, "Static Clip Horizontal Multi I")
	Static_Clip_Horizontal_Multi_II = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Horizontal_Multi_II, "lead-in[fx]: Static Clip Horizontal Multi II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 500","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + syl.width*(-1)^j, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","6","","syl.text","tag.clip( fx.pos_l - syl.width, fx.pos_t, 3*syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Horizontal_Multi_II); table.insert(leadin_fx, "Static Clip Horizontal Multi II")
	Static_Clip_Vertical_Multi_I = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Vertical_Multi_I, "lead-in[fx]: Static Clip Vertical Multi I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 70 ) - 360","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + 0.6*syl.height*(-1)^j, fx.pos_y","0, 450","1, ceil( syl.width/5 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Vertical_Multi_I); table.insert(leadin_fx, "Static Clip Vertical Multi I")
	Static_Clip_Vertical_Multi_II = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Vertical_Multi_II, "lead-in[fx]: Static Clip Vertical Multi II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 500","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + 0.6*syl.height*(-1)^j, fx.pos_y","0, 400","1, ceil( syl.width/5 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height )",""); table.insert(leadin_fx_library, Static_Clip_Vertical_Multi_II); table.insert(leadin_fx, "Static Clip Vertical Multi II")
	Stela_Move_Left = table.duplicate(PfxM_Box); table.inbox(Stela_Move_Left, "lead-in[fx]: Stela Move Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - delay*module/3","l.start_time + syl.start_time","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, delay + 50*module","7","","syl.text","tag.only( j == 2, format( \"\\\\t(%s,%s,0.8,\\\\alpha&HFF&)\", delay, delay + 50 ) ), \"\\\\fad(300,0)\"","Dx = 86*ratio;\ndelay = 300","Lua",false); table.insert(leadin_fx_library, Stela_Move_Left); table.insert(leadin_fx, "Stela Move Left")
	tags_functions_Auto4_Demo_I = table.duplicate(PfxM_Box); table.inbox(tags_functions_Auto4_Demo_I, "lead-in[fx]: tags functions Auto4 Demo I","Template Line [Syl]",true,false,"#AC0CC2","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay","l.end_time + delay","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","|!shape.Rmove( 12r, 12r )!\\fad(delay,delay)|\\t($start + delay,$start + delay + 80,\\1cSC1\\fscxyr1.5)\\t($start + delay + 80,$end + delay,\\1cTC1\\fscxyr1)","delay = 120","Lua",false); table.insert(leadin_fx_library, tags_functions_Auto4_Demo_I); table.insert(leadin_fx, "tags functions Auto4 Demo I")
	tags_functions_Auto4_Demo_II = table.duplicate(PfxM_Box); table.inbox(tags_functions_Auto4_Demo_II, "lead-in[fx]: tags functions Auto4 Demo II","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 50 ) - 900","l.start_time +syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + 120r, fx.pos_x","fx.pos_y","0, 640","1","","char.text","!tag.oscill( 900, 180, \"\\\\frxyzRds( 30, 70 )\\\\faxyRcs( 0.08, 0.18 )\" )!\\fad(120,0)","oscill_defualt = true","Automation Auto-4",false); table.insert(leadin_fx_library, tags_functions_Auto4_Demo_II); table.insert(leadin_fx, "tags functions Auto4 Demo II")
	tags_functions_Auto4_Demo_III = table.duplicate(PfxM_Box); table.inbox(tags_functions_Auto4_Demo_III, "lead-in[fx]: tags functions Auto4 Demo III","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 50 ) - 900","l.start_time +syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + 120r, fx.pos_x","fx.pos_y","0, 640","1","","char.text","!tag.oscill( 900, 180, \"\\\\frxyzRds( 30, 70 )\\\\faxyRcs( 0.08, 0.18 )\\\\xyshadRs( 6r, 12r )\\\\4cR( )\\\\blur1\\\\4a192\" )!\\fad(120,0)","oscill_defualt = true","Automation Auto-4",false); table.insert(leadin_fx_library, tags_functions_Auto4_Demo_III); table.insert(leadin_fx, "tags functions Auto4 Demo III")
	Template_Jitter_Char = table.duplicate(PfxM_Box); table.inbox(Template_Jitter_Char, "lead-in[fx]: Template Jitter Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 20 )","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 5*ratio, 5*ratio, 0, fx.dur, 1, { 2*frame_dur } ), \"\\\\fad(200,0)\"","","Lua",false); table.insert(leadin_fx_library, Template_Jitter_Char); table.insert(leadin_fx, "Template Jitter Char")
	Template_Jitter_Line = table.duplicate(PfxM_Box); table.inbox(Template_Jitter_Line, "lead-in[fx]: Template Jitter Line","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 5*ratio, 5*ratio, 0, fx.dur, 1, { 2*frame_dur } )","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Template_Jitter_Line); table.insert(leadin_fx, "Template Jitter Line")
	Template_Leadin_Flag_Line_Char = table.duplicate(PfxM_Box); table.inbox(Template_Leadin_Flag_Line_Char, "lead-in[fx]: Template Leadin Flag Line Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 ) - 200","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 10*ratio, 10*ratio, 0, fx.dur, 1, 200 ), \"\\\\fad(200,0)\"","random_mode = \"line\"","Lua",false); table.insert(leadin_fx_library, Template_Leadin_Flag_Line_Char); table.insert(leadin_fx, "Template Leadin Flag Line Char")
	Template_Leadin_Char = table.duplicate(PfxM_Box); table.inbox(Template_Leadin_Char, "lead-in[fx]: Template Leadin Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 20 )","l.start_time + char.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","'\\\\fad(300,0)'",""); table.insert(leadin_fx_library, Template_Leadin_Char); table.insert(leadin_fx, "Template Leadin Char")
	Template_Leadin_Syl = table.duplicate(PfxM_Box); table.inbox(Template_Leadin_Syl, "lead-in[fx]: Template Leadin Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 )","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","'\\\\fad(300,0)'",""); table.insert(leadin_fx_library, Template_Leadin_Syl); table.insert(leadin_fx, "Template Leadin Syl")
	Template_line_Char = table.duplicate(PfxM_Box); table.inbox(Template_line_Char, "lead-in[fx]: Template line Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadin_fx_library, Template_line_Char); table.insert(leadin_fx, "Template line Char")
	Template_line_Char_without_syl = table.duplicate(PfxM_Box); table.inbox(Template_line_Char_without_syl, "lead-in[fx]: Template line Char without syl","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","without.syl",""); table.insert(leadin_fx_library, Template_line_Char_without_syl); table.insert(leadin_fx, "Template line Char without syl")
	Template_line_Char_without_sylchar = table.duplicate(PfxM_Box); table.inbox(Template_line_Char_without_sylchar, "lead-in[fx]: Template line Char without sylchar","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","without.char",""); table.insert(leadin_fx_library, Template_line_Char_without_sylchar); table.insert(leadin_fx, "Template line Char without sylchar")
	Template_line_Syl = table.duplicate(PfxM_Box); table.inbox(Template_line_Syl, "lead-in[fx]: Template line Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadin_fx_library, Template_line_Syl); table.insert(leadin_fx, "Template line Syl")
	Template_line_Syl_without_syl = table.duplicate(PfxM_Box); table.inbox(Template_line_Syl_without_syl, "lead-in[fx]: Template line Syl without syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","without.syl",""); table.insert(leadin_fx_library, Template_line_Syl_without_syl); table.insert(leadin_fx, "Template line Syl without syl")
	Template_prechar = table.duplicate(PfxM_Box); table.inbox(Template_prechar, "lead-in[fx]: Template prechar","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + char.start_time","l.start_time + char.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadin_fx_library, Template_prechar); table.insert(leadin_fx, "Template prechar")
	Template_preline_Char = table.duplicate(PfxM_Box); table.inbox(Template_preline_Char, "lead-in[fx]: Template preline Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadin_fx_library, Template_preline_Char); table.insert(leadin_fx, "Template preline Char")
	Template_preline_Syl = table.duplicate(PfxM_Box); table.inbox(Template_preline_Syl, "lead-in[fx]: Template preline Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadin_fx_library, Template_preline_Syl); table.insert(leadin_fx, "Template preline Syl")
	Template_presyl = table.duplicate(PfxM_Box); table.inbox(Template_presyl, "lead-in[fx]: Template presyl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadin_fx_library, Template_presyl); table.insert(leadin_fx, "Template presyl")
	Template_start2char = table.duplicate(PfxM_Box); table.inbox(Template_start2char, "lead-in[fx]: Template start2char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + char.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadin_fx_library, Template_start2char); table.insert(leadin_fx, "Template start2char")
	Template_start2syl = table.duplicate(PfxM_Box); table.inbox(Template_start2syl, "lead-in[fx]: Template start2syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadin_fx_library, Template_start2syl); table.insert(leadin_fx, "Template start2syl")
	Template_start2syl_Char = table.duplicate(PfxM_Box); table.inbox(Template_start2syl_Char, "lead-in[fx]: Template start2syl Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadin_fx_library, Template_start2syl_Char); table.insert(leadin_fx, "Template start2syl Char")
	Template_Tremor_I = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_I, "lead-in[fx]: Template Tremor I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\rnd%s', var.syl.rndx), tag.oscill(fx.dur, R(20, 40)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = 7*ratio"); table.insert(leadin_fx_library, Template_Tremor_I); table.insert(leadin_fx, "Template Tremor I")
	Template_Tremor_II = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_II, "lead-in[fx]: Template Tremor II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\org(%s,%s)\\\\rnd%s', fx.pos_x, fx.pos_y - 10000*ratio, var.syl.rndx), tag.oscill(fx.dur, R(50, 80)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = ratio"); table.insert(leadin_fx_library, Template_Tremor_II); table.insert(leadin_fx, "Template Tremor II")
	Template_Tremor_III = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_III, "lead-in[fx]: Template Tremor III","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\org(%s,%s)\\\\rnd%s', fx.pos_x - 10000*ratio, fx.pos_y, var.syl.rndx), tag.oscill(fx.dur, R(30, 60)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = 0.4*ratio"); table.insert(leadin_fx_library, Template_Tremor_III); table.insert(leadin_fx, "Template Tremor III")
	Template_Line_Char_Screw_LI_and_LO = table.duplicate(PfxM_Box); table.inbox(Template_Line_Char_Screw_LI_and_LO, "lead-in[fx]: Template Line Char Screw LI and LO","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\frx180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\frx0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\frx-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220; delay_char = 20; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Template_Line_Char_Screw_LI_and_LO); table.insert(leadin_fx, "Template Line Char Screw LI and LO")
	Template_Line_Char_Screw_fry_LI_and_LO = table.duplicate(PfxM_Box); table.inbox(Template_Line_Char_Screw_fry_LI_and_LO, "lead-in[fx]: Template Line Char Screw fry LI and LO","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\fry180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\fry0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\fry-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220; delay_char = 20; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Template_Line_Char_Screw_fry_LI_and_LO); table.insert(leadin_fx, "Template Line Char Screw fry LI and LO")
	Template_Line_Syl_LI_and_LO = table.duplicate(PfxM_Box); table.inbox(Template_Line_Syl_LI_and_LO, "lead-in[fx]: Template Line Syl LI and LO","Template Line [Syl]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line","l.end_time + delay_line","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\t(!delay_syl*($i - 1)!,!delay_syl*$i + delay_fad - delay_syl!,!text.alpha!)\\t(!fx.dur - delay_syl*$n + delay_syl*($i - 1) - delay_fad + delay_syl!,!fx.dur - delay_syl*$n + delay_syl*$i!,!text.alpha0!)","delay_line = 220; delay_syl = 30; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Template_Line_Syl_LI_and_LO); table.insert(leadin_fx, "Template Line Syl LI and LO")
	Template_Line_Syl_LI_and_LO_without_Syl = table.duplicate(PfxM_Box); table.inbox(Template_Line_Syl_LI_and_LO_without_Syl, "lead-in[fx]: Template Line Syl LI and LO without Syl","Template Line [Syl]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line","l.end_time + delay_line","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\t(!delay_syl*($si - 1)!,!delay_syl*$si + delay_fad - delay_syl!,!text.alpha!)\\t(!delay_line + $sstart!,!delay_line + $sstart + 1!,!text.alpha0!)\\t(!delay_line + $send - 1!,!delay_line + $send!,!text.alpha!)\\t(!fx.dur - delay_syl*$syln + delay_syl*($si - 1) - delay_fad + delay_syl!,!fx.dur - delay_syl*$syln + delay_syl*$si!,!text.alpha0!)","delay_line = 220; delay_syl = 30; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Template_Line_Syl_LI_and_LO_without_Syl); table.insert(leadin_fx, "Template Line Syl LI and LO without Syl")
	Template_Line_Syl_LI_and_LO_without_Syl_Rmove = table.duplicate(PfxM_Box); table.inbox(Template_Line_Syl_LI_and_LO_without_Syl_Rmove, "lead-in[fx]: Template Line Syl LI and LO without Syl Rmove","Template Line [Syl]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line","l.end_time + delay_line","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","|shape.Rmove( 5, 5, 0, fx.dur, 1, {2.6*frame_dur} )|!text.alpha0!\\t(!delay_syl*($si - 1)!,!delay_syl*$si + delay_fad - delay_syl!,!text.alpha!)\\t(!delay_line + $sstart!,!delay_line + $sstart + 1!,!text.alpha0!)\\t(!delay_line + $send - 1!,!delay_line + $send!,!text.alpha!)\\t(!fx.dur - delay_syl*$syln + delay_syl*($si - 1) - delay_fad + delay_syl!,!fx.dur - delay_syl*$syln + delay_syl*$si!,!text.alpha0!)","delay_line = 220; delay_syl = 30; delay_fad = 160","Automation Auto-4",false); table.insert(leadin_fx_library, Template_Line_Syl_LI_and_LO_without_Syl_Rmove); table.insert(leadin_fx, "Template Line Syl LI and LO without Syl Rmove")
	Text_Mask_I = table.duplicate(PfxM_Box); table.inbox(Text_Mask_I, "lead-in[fx]: Text Mask I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask( )","","Mask = function( )\n	maxloop( R( 2, 4 ) )\n	if j == 1 then\n		return format( \"{\\\\pos(%s,%s)\\\\bord0\\\\shad0\\\\1c%s%s\\\\p1}%s\",\n			syl.center, syl.middle, text.color1, text.to_clip( ),\n			shape.size( shape.rectangle, 1.2*syl.width, 1.2*syl.height )\n		)\n	elseif j < maxj then\n		return format( \"{\\\\pos(%s,%s)\\\\bord0\\\\shad0\\\\1c%s\\\\blur%s%s\\\\p1}%s\",\n			syl.center + R( -0.4*syl.width, 0.4*syl.width ), syl.middle + R( -0.3*syl.height, 0.3*syl.height ),\n			color.interpolate( \"&H0000FF&\", \"&H000000&\", R( 0, 60 )/100 ), R( 40, 100 )/10, text.to_clip( ),\n			shape.size( shape.circle, R( 16, 42 ) )\n		)\n	else\n		return format( \"{\\\\1a&HFF&}%s\", syl.text )\n	end\nend","Lua",false); table.insert(leadin_fx_library, Text_Mask_I); table.insert(leadin_fx, "Text Mask I")
	Text_Mask_II = table.duplicate(PfxM_Box); table.inbox(Text_Mask_II, "lead-in[fx]: Text Mask II","Line",true,false,"#0382FD","#000000","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask2( )","","Mask2 = function( Color1, Color2 )\n	local Color1 = Color1 or shape.color1\n	local Color2 = Color2 or shape.color3\n	maxloop( 3 )\n	if j == 1 then\n		return format( \"{%s\\\\1c%s\\\\fscx%s\\\\fscy%s\\\\p1}%s\", text.to_clip( ), Color1, 1.2*l.width, 1.2*l.height, shape.rectangle )\n	elseif j == 2 then\n		local Shape = format( \"{%s\\\\1c%s\\\\1a%s\\\\blur%s\\\\p1}%s\", text.to_clip( ), color.interpolate( Color1, Color2, R( 0, 90 )/100 ), \n		ass_alpha( 65 ), R( 25, 65 )/10, shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		for i = 1, 16 do\n			Shape = Shape .. format( \"{\\\\1c%s\\\\blur%s}%s\", color.interpolate(Color1, Color2, R(0,90)/100), \n			R( 25, 65 )/10, shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		end\n		return Shape\n	else\n		return format( \"{\\\\1a&HFF&\\\\bord%s\\\\shad0}%s\", 2.8*ratio, line.text_stripped )\n	end\nend","Lua",false); table.insert(leadin_fx_library, Text_Mask_II); table.insert(leadin_fx, "Text Mask II")
	Text_Mask_Color_Set = table.duplicate(PfxM_Box); table.inbox(Text_Mask_Color_Set, "lead-in[fx]: Text Mask Color Set","Line",true,false,"#929292","#0B2442","#000000","25","25","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask3( color.set( times, colors, \"\\\\1c\"), color.set( times, color.interpolate( colors, \"&H000000&\", R( 100 )/100 ), \"\\\\1c\" ) )","","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:20.200\", \"0:00:30.116\", \"0:00:43.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\" };\nMask3 = function( Color1, Color2 )\n	maxloop( 3 )\n	if j == 1 then\n		return format( \"{%s%s\\\\fscx%s\\\\fscy%s\\\\p1}%s\", text.to_clip( ), Color1, 1.2*l.width, 1.2*l.height, shape.rectangle )\n	elseif j == 2 then\n		local Shape = format( \"{%s%s\\\\1a%s\\\\blur%s\\\\p1}%s\", text.to_clip( ), Color2, ass_alpha( 65 ), R( 25, 65 )/10, \n		shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		for i = 1, 16 do\n			Shape = Shape .. format( \"{%s\\\\blur%s}%s\", Color2, R( 25, 65 )/10, \n			shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		end\n		return Shape\n	end\n	return format( \"{\\\\1a&HFF&\\\\bord%s\\\\shad0}%s\", 2*ratio, line.text_stripped )\nend","Lua",false); table.insert(leadin_fx_library, Text_Mask_Color_Set); table.insert(leadin_fx, "Text Mask Color Set")
	Tremor_Clip_I = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_I, "lead-in[fx]: Tremor Clip I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 20*ratio, 0, delay, 0.8, { 80 } )\" ), \"\\\\fad(150,0)\"","delay = 320","Lua",false); table.insert(leadin_fx_library, Tremor_Clip_I); table.insert(leadin_fx, "Tremor Clip I")
	Tremor_Clip_II = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_II, "lead-in[fx]: Tremor Clip II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 0, 0, delay, 0.8, { 80 } )\" ), \"\\\\fad(150,0)\"","delay = 320","Lua",false); table.insert(leadin_fx_library, Tremor_Clip_II); table.insert(leadin_fx, "Tremor Clip II")
	Tremor_Clip_III = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_III, "lead-in[fx]: Tremor Clip III","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 0, 50*ratio, 0, delay, 0.8, { 80 } )\" ), \"\\\\fad(150,0)\"","delay = 320","Lua",false); table.insert(leadin_fx_library, Tremor_Clip_III); table.insert(leadin_fx, "Tremor Clip III")
	Wavelet_Chat = table.duplicate(PfxM_Box); table.inbox(Wavelet_Chat, "lead-in[fx]: Wavelet Chat","Char",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time + time_li( 40 ) - delay - 50","l.start_time + char.start_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, delay","2","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + Dy*(-1)^j, fx.pos_x, fx.pos_y - Dy*(-1)^j, fx.pos_x, fx.pos_y }, nil, delay ), format( \"%s\\\\shad0\\\\org(%s,%s)\\\\t(0,%s,\\\\frx360)\\\\fad(600,0)\", tag.only( j == 1, \"\\\\1a&HFF&\\\\bord3\", \"\\\\bord0\" ), fx.move_x2, fx.move_y1, delay2 )","delay = 1000;\nDx = 70*ratio;\nDy = 80*ratio","Lua",false); table.insert(leadin_fx_library, Wavelet_Chat); table.insert(leadin_fx, "Wavelet Chat")

	
	--hi-light FX List
	ABC_Template_Hilight_Syl = table.duplicate(PfxM_Box); table.inbox(ABC_Template_Hilight_Syl, "hi-light[fx]: ABC Template Hilight Syl","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(hilight_fx_library, ABC_Template_Hilight_Syl); table.insert(hilight_fx, "ABC Template Hilight Syl")
	Bee_I_H = table.duplicate(PfxM_Box); table.inbox(Bee_I_H, "hi-light[fx]: Bee I H","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","\"\\\\org(fx.pos_x, fx.pos_y - 10000r)\\\\fr(0.036m * (-1) ^ j)\\\\blur3\\\\alpha180\\\\t(\\\\fr0\\\\alpha60\\\\blur0)\"","","Lua",false); table.insert(hilight_fx_library, Bee_I_H); table.insert(hilight_fx, "Bee I H")
	Bee_II_V = table.duplicate(PfxM_Box); table.inbox(Bee_II_V, "hi-light[fx]: Bee II V","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","\"\\\\org(fx.pos_x - 10000r, fx.pos_y)\\\\fr(0.036m * (-1) ^ j)\\\\blur3\\\\alpha180\\\\t(\\\\fr0\\\\alpha60\\\\blur0)\"","","Lua",false); table.insert(hilight_fx_library, Bee_II_V); table.insert(hilight_fx, "Bee II V")
	Bee_III_HV = table.duplicate(PfxM_Box); table.inbox(Bee_III_HV, "hi-light[fx]: Bee III HV","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","tag.only( (syl.i + line.i) % 2 == 1, \"\\\\org(fx.pos_x - 10000r, fx.pos_y)\", \"\\\\org(fx.pos_x, fx.pos_y - 10000r)\" ), \"\\\\fr(0.036m * (-1) ^ j)\\\\blur3\\\\alpha180\\\\t(\\\\fr0\\\\alpha60\\\\blur0)\"","","Lua",false); table.insert(hilight_fx_library, Bee_III_HV); table.insert(hilight_fx, "Bee III HV")
	Bee_IV = table.duplicate(PfxM_Box); table.inbox(Bee_IV, "hi-light[fx]: Bee IV","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","16","","syl.text","tag.only( j % 2 == 1, \"\\\\org(fx.pos_x - 10000r, fx.pos_y)\", \"\\\\org(fx.pos_x, fx.pos_y - 10000r)\" ), \"\\\\fr(0.05m * (-1) ^ ceil( j / 2 ))\\\\blur3\\\\alpha180\\\\t(\\\\fr0\\\\alpha86\\\\blur0)\"","","Lua",false); table.insert(hilight_fx_library, Bee_IV); table.insert(hilight_fx, "Bee IV")
	Char_Zoom_fscy = table.duplicate(PfxM_Box); table.inbox(Char_Zoom_fscy, "hi-light[fx]: Char Zoom fscy","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","char.center","char.bottom","","","2","1","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\t(%s,%s,\\\\fscy%s)\\\\t(%s,%s,\\\\fscy%s)\", char.syl_start, char.syl_start + frame_dur, 1.5*l.scale_y, char.syl_start + frame_dur, char.syl_end + delay, l.scale_y )","delay = 120","Lua",false); table.insert(hilight_fx_library, Char_Zoom_fscy); table.insert(hilight_fx, "Char Zoom fscy")
	Char_Zoom_fscy_move_left_I = table.duplicate(PfxM_Box); table.inbox(Char_Zoom_fscy_move_left_I, "hi-light[fx]: Char Zoom fscy move left I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","char.center","char.bottom","","","2","1","fx.pos_x, fx.pos_x - Dx","fx.pos_y","char.syl_start, char.syl_end + delay","1","","char.text","format( \"\\\\t(%s,%s,\\\\fscy%s)\\\\t(%s,%s,\\\\fscy%s)\", char.syl_start, char.syl_start + char.dur/2, 1.5*l.scale_y, char.syl_start + char.dur/2, char.syl_end + delay, l.scale_y )","delay = 120;\nDx = 14*ratio","Lua",false); table.insert(hilight_fx_library, Char_Zoom_fscy_move_left_I); table.insert(hilight_fx, "Char Zoom fscy move left I")
	Char_Zoom_fscy_move_left_II = table.duplicate(PfxM_Box); table.inbox(Char_Zoom_fscy_move_left_II, "hi-light[fx]: Char Zoom fscy move left II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","char.center","char.top","","","8","1","fx.pos_x, fx.pos_x - Dx","fx.pos_y","char.syl_start, char.syl_end + delay","1","","char.text","format( \"\\\\t(%s,%s,\\\\fscy%s)\\\\t(%s,%s,\\\\fscy%s)\", char.syl_start, char.syl_start + char.dur/2, 1.5*l.scale_y, char.syl_start + char.dur/2, char.syl_end + delay, l.scale_y )","delay = 120;\nDx = 14*ratio","Lua",false); table.insert(hilight_fx_library, Char_Zoom_fscy_move_left_II); table.insert(hilight_fx, "Char Zoom fscy move left II")
	Char_Zoom_fscy_move_left_III = table.duplicate(PfxM_Box); table.inbox(Char_Zoom_fscy_move_left_III, "hi-light[fx]: Char Zoom fscy move left III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","char.center","char.middle + 0.5*l.height*(-1)^char.i","","","tag.only( char.i%2 == 1, 8, 2 )","1","fx.pos_x, fx.pos_x - Dx","fx.pos_y","char.syl_start, char.syl_end + delay","1","","char.text","format( \"\\\\t(%s,%s,\\\\fscy%s)\\\\t(%s,%s,\\\\fscy%s)\", char.syl_start, char.syl_start + char.dur/2, 1.5*l.scale_y, char.syl_start + char.dur/2, char.syl_end + delay, l.scale_y )","delay = 120;\nDx = 14*ratio","Lua",false); table.insert(hilight_fx_library, Char_Zoom_fscy_move_left_III); table.insert(hilight_fx, "Char Zoom fscy move left III")
	Char_Zoom_move_left = table.duplicate(PfxM_Box); table.inbox(Char_Zoom_move_left, "hi-light[fx]: Char Zoom move left","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","char.center","char.middle","","","5","1","fx.pos_x, fx.pos_x - Dx","fx.pos_y","char.syl_start, char.syl_end + delay","1","","char.text","format( \"\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\", char.syl_start, char.syl_start + char.dur/2, 1.4*l.scale_x, 1.65*l.scale_y, char.syl_start + char.dur/2, char.syl_end + delay, l.scale_x, l.scale_y )","delay = 120;\nDx = 14*ratio","Lua",false); table.insert(hilight_fx_library, Char_Zoom_move_left); table.insert(hilight_fx, "Char Zoom move left")
	Clip_Grip_Multi_Alpha = table.duplicate(PfxM_Box); table.inbox(Clip_Grip_Multi_Alpha, "hi-light[fx]: Clip Grip Multi Alpha","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), tag.oscill( fx.dur, R( 60, 150 ), \"\\\\1a&HFF&\", \"\\\\1a\" .. text.alpha1 )",""); table.insert(hilight_fx_library, Clip_Grip_Multi_Alpha); table.insert(hilight_fx, "Clip Grip Multi Alpha")
	Clip_Grip_Multi_Color_Chameleon = table.duplicate(PfxM_Box); table.inbox(Clip_Grip_Multi_Color_Chameleon, "hi-light[fx]: Clip Grip Multi Color Chameleon","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7, loop_h","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), tag.oscill( fx.dur, R( 60, 150 ), \"\\\\1c( random.color( ) )\" )",""); table.insert(hilight_fx_library, Clip_Grip_Multi_Color_Chameleon); table.insert(hilight_fx, "Clip Grip Multi Color Chameleon")
	Clip_Grip_Multi_Distort = table.duplicate(PfxM_Box); table.inbox(Clip_Grip_Multi_Distort, "hi-light[fx]: Clip Grip Multi Distort","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7, loop_h","","syl.text","tag.clip( \"shape.Rmove( 0, height, 0, fx.dur, 1, { R( 50, 120 ) } )\" )","height = 8*ratio","Lua",false); table.insert(hilight_fx_library, Clip_Grip_Multi_Distort); table.insert(hilight_fx, "Clip Grip Multi Distort")
	Clip_Grip_Multi_Distort_Org = table.duplicate(PfxM_Box); table.inbox(Clip_Grip_Multi_Distort_Org, "hi-light[fx]: Clip Grip Multi Distort Org","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7, loop_h","","syl.text","tag.only( (R( 2 ) == 1), format( \"\\\\org(%s,%s)\", fx.pos_x - 10000*ratio, fx.pos_y ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y - 10000*ratio ) ), tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), tag.oscill( fx.dur, R( 100, 200 ), \"\\\\fr( angle*(-1)^i)\" )"," angle = 0.18","Lua",false); table.insert(hilight_fx_library, Clip_Grip_Multi_Distort_Org); table.insert(hilight_fx, "Clip Grip Multi Distort Org")
	Clip_Kurara_I = table.duplicate(PfxM_Box); table.inbox(Clip_Kurara_I, "hi-light[fx]: Clip Kurara I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2, 2","","syl.text","tag.clip( \"shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + Dxy*(-1)^j, fx.pos_y + Dxy*(-1)^ceil( j/2 ), fx.pos_x, fx.pos_y }, { 0, fx.dur/2, fx.dur/2, fx.dur} )\" )","Dxy = 20*ratio;","Lua",false); table.insert(hilight_fx_library, Clip_Kurara_I); table.insert(hilight_fx, "Clip Kurara I")
	Clip_Kurara_II_Multicolor = table.duplicate(PfxM_Box); table.inbox(Clip_Kurara_II_Multicolor, "hi-light[fx]: Clip Kurara II Multicolor","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2, 2","","syl.text","tag.clip( \"shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + Dxy*(-1)^j, fx.pos_y + Dxy*(-1)^ceil( j/2 ), fx.pos_x, fx.pos_y }, { 0, fx.dur/2, fx.dur/2, fx.dur} )\" ), format( \"\\\\t(0,%s,\\\\1c%s)\\\\t(%s,%s,\\\\1c%s)\", 0.25*fx.dur, random.color( ), 0.75*fx.dur, fx.dur, text.color1 )","Dxy = 20*ratio;","Lua",false); table.insert(hilight_fx_library, Clip_Kurara_II_Multicolor); table.insert(hilight_fx, "Clip Kurara II Multicolor")
	Clip_Kurara_III_Grip = table.duplicate(PfxM_Box); table.inbox(Clip_Kurara_III_Grip, "hi-light[fx]: Clip Kurara III Grip","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.width/pxl, syl.height/pxl","","syl.text","tag.clip( \"shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + math.polar( var.loop.Angle, Dxy, \\\"x\\\"), fx.pos_y + math.polar( var.loop.Angle, Dxy, \\\"y\\\"), fx.pos_x, fx.pos_y }, { 0, fx.dur/2, fx.dur/2, fx.dur} )\" )","Dxy = 32*ratio; pxl = 10*ratio; Angle = R( 360 )","Lua",false); table.insert(hilight_fx_library, Clip_Kurara_III_Grip); table.insert(hilight_fx, "Clip Kurara III Grip")
	Clip_Mask_Pixel_I = table.duplicate(PfxM_Box); table.inbox(Clip_Mask_Pixel_I, "hi-light[fx]: Clip Mask Pixel I","Syl",true,false,"#298CFF","#298CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.height/size_pixel, syl.width/size_pixel","","syl.text","tag.clip( \"-shape.Rmove( 40*ratio )\" )","size_pixel = 8*ratio","Lua",false); table.insert(hilight_fx_library, Clip_Mask_Pixel_I); table.insert(hilight_fx, "Clip Mask Pixel I")
	Clip_Mask_Pixel_II_MultiColor = table.duplicate(PfxM_Box); table.inbox(Clip_Mask_Pixel_II_MultiColor, "hi-light[fx]: Clip Mask Pixel II MultiColor","Syl",true,false,"#298CFF","#298CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.height/size_pixel, syl.width/size_pixel","","syl.text","tag.clip( \"-shape.Rmove( 40*ratio )\" ), \"\\\\1c\" .. random.color( )","size_pixel = 8*ratio","Lua",false); table.insert(hilight_fx_library, Clip_Mask_Pixel_II_MultiColor); table.insert(hilight_fx, "Clip Mask Pixel II MultiColor")
	Clip_Paint_I = table.duplicate(PfxM_Box); table.inbox(Clip_Paint_I, "hi-light[fx]: Clip Paint I","Syl",true,false,"#298CFF","#298CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 2, format( \"\\\\1c%s\\\\clip(%s,%s,%s,%s)\\\\t(\\\\clip(%s,%s,%s,%s))\", shape.color1, fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1, fx.move_l1, fx.move_t1, fx.move_r1, fx.move_b1 ) )","","Lua",false); table.insert(hilight_fx_library, Clip_Paint_I); table.insert(hilight_fx, "Clip Paint I")
	Clip_Paint_II = table.duplicate(PfxM_Box); table.inbox(Clip_Paint_II, "hi-light[fx]: Clip Paint II","Syl",true,false,"#298CFF","#298CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 2, format( \"\\\\1c%s\\\\clip(%s,%s,%s,%s)\\\\t(\\\\clip(%s,%s,%s,%s))\", shape.color1, fx.move_l1, fx.move_t1, fx.move_r1, fx.move_b1, fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 ) )","","Lua",false); table.insert(hilight_fx_library, Clip_Paint_II); table.insert(hilight_fx, "Clip Paint II")
	Clip_Paint_III = table.duplicate(PfxM_Box); table.inbox(Clip_Paint_III, "hi-light[fx]: Clip Paint III","Syl",true,false,"#298CFF","#298CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 2, tag.only( (syl.i + ii)%2 ==1, format( \"\\\\1c%s\\\\clip(%s,%s,%s,%s)\\\\t(\\\\clip(%s,%s,%s,%s))\", shape.color1, fx.move_l1, fx.move_t1, fx.move_r1, fx.move_b1, fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 ), format( \"\\\\1c%s\\\\clip(%s,%s,%s,%s)\\\\t(\\\\clip(%s,%s,%s,%s))\", shape.color1, fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1, fx.move_l1, fx.move_t1, fx.move_r1, fx.move_b1 ) ) )","","Lua",false); table.insert(hilight_fx_library, Clip_Paint_III); table.insert(hilight_fx, "Clip Paint III")
	Clip_Rmove_H_I = table.duplicate(PfxM_Box); table.inbox(Clip_Rmove_H_I, "hi-light[fx]: Clip Rmove H I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","9","","syl.text","tag.clip( \"shape.Rmove( 20*ratio, 0, 0, fx.dur, 1, { 1.5*frame_dur } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Rmove_H_I); table.insert(hilight_fx, "Clip Rmove H I")
	Clip_Rmove_H_II = table.duplicate(PfxM_Box); table.inbox(Clip_Rmove_H_II, "hi-light[fx]: Clip Rmove H II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","9","","syl.text","tag.clip( \"shape.Rmove( 0, 20*ratio, 0, fx.dur, 1, { 1.5*frame_dur } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Rmove_H_II); table.insert(hilight_fx, "Clip Rmove H II")
	Clip_Rmove_V_I = table.duplicate(PfxM_Box); table.inbox(Clip_Rmove_V_I, "hi-light[fx]: Clip Rmove V I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( syl.width/(5.2*ratio) )","","syl.text","tag.clip( \"shape.Rmove( 0, 24*ratio, 0, fx.dur, 1, { 1.5*frame_dur } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Rmove_V_I); table.insert(hilight_fx, "Clip Rmove V I")
	Clip_Rmove_V_II = table.duplicate(PfxM_Box); table.inbox(Clip_Rmove_V_II, "hi-light[fx]: Clip Rmove V II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( syl.width/(5.2*ratio) )","","syl.text","tag.clip( \"shape.Rmove( 24*ratio, 0, 0, fx.dur, 1, { 1.5*frame_dur } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Rmove_V_II); table.insert(hilight_fx, "Clip Rmove V II")
	Clip_Temor_I = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_I, "hi-light[fx]: Clip Temor I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 20*ratio, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_I); table.insert(hilight_fx, "Clip Temor I")
	Clip_Temor_II = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_II, "hi-light[fx]: Clip Temor II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( 7*syl.width/syl.height )","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 20*ratio, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_II); table.insert(hilight_fx, "Clip Temor II")
	Clip_Temor_III_H = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_III_H, "hi-light[fx]: Clip Temor III H","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 0, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_III_H); table.insert(hilight_fx, "Clip Temor III H")
	Clip_Temor_III_V = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_III_V, "hi-light[fx]: Clip Temor III V","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","7","","syl.text","tag.clip( \"shape.Rmove( 0, 32*ratio, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_III_V); table.insert(hilight_fx, "Clip Temor III V")
	Clip_Temor_IV_VH = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_IV_VH, "hi-light[fx]: Clip Temor IV VH","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( 7*syl.width/syl.height )","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 0, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_IV_VH); table.insert(hilight_fx, "Clip Temor IV VH")
	Clip_Temor_IV_VV = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_IV_VV, "hi-light[fx]: Clip Temor IV VV","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( 7*syl.width/syl.height )","","syl.text","tag.clip( \"shape.Rmove( 0, 50*ratio, 0, fx.dur, 0.8, { 80 } )\" )","","Lua",false); table.insert(hilight_fx_library, Clip_Temor_IV_VV); table.insert(hilight_fx, "Clip Temor IV VV")
	Clip_Temor_V_Grip = table.duplicate(PfxM_Box); table.inbox(Clip_Temor_V_Grip, "hi-light[fx]: Clip Temor V Grip","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.width/pxl, syl.height/pxl","","syl.text","tag.clip( \"shape.Rmove( 20*ratio, 20*ratio, 0, fx.dur, 0.8, { 80 } )\" )","pxl = 12*ratio","Lua",false); table.insert(hilight_fx_library, Clip_Temor_V_Grip); table.insert(hilight_fx, "Clip Temor V Grip")
	Comic_Zoom_I = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_I, "hi-light[fx]: Comic Zoom I","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#text_shapes( )","","text_shapes( )[j]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = ceil( syl.dur / (2 * frame_dur) )\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_I); table.insert(hilight_fx, "Comic Zoom I")
	Comic_Zoom_II_Jitter_Soft = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_II_Jitter_Soft, "hi-light[fx]: Comic Zoom II Jitter Soft","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + R( 8, -8 )*ratio","fx.pos_y + R( 8, -8 )*ratio","","#text_shapes( )","","text_shapes( )[j]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = ceil( syl.dur / (2 * frame_dur) )\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_II_Jitter_Soft); table.insert(hilight_fx, "Comic Zoom II Jitter Soft")
	Comic_Zoom_III_Deformed = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_III_Deformed, "hi-light[fx]: Comic Zoom III Deformed","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#text_shapes( )","","text_shapes( )[j]","format( \"\\\\fr%s\\\\fax%s\\\\fay%s\", Rc( -8, 8 ), Rc( -0.3, 0.3 ), Rc( -0.3, 0.3 ) )","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = ceil( syl.dur / (2 * frame_dur) )\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_III_Deformed); table.insert(hilight_fx, "Comic Zoom III Deformed")
	Comic_Zoom_IV_Shine = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_IV_Shine, "hi-light[fx]: Comic Zoom IV Shine","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#text_shapes( )","","text_shapes( )[j]","\"\\\\3c-{ '&HFFFFFF&', text.color3 }\\\\blur-{ 3, 0 }\"","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = ceil( syl.dur / (2 * frame_dur) )\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_IV_Shine); table.insert(hilight_fx, "Comic Zoom IV Shine")
	Comic_Zoom_V_MultiColor = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_V_MultiColor, "hi-light[fx]: Comic Zoom V MultiColor","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#text_shapes( )","","text_shapes( )[j]","\"\\\\3c-{ color1, color2, color3 }\\\\blur2\"","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = ceil( syl.dur / (2 * frame_dur) )\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/n ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend;\ncolor1 = random.color( nil, 70 );\ncolor2 = random.color( nil, 70 );\ncolor3 = random.color( nil, 70 )","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_V_MultiColor); table.insert(hilight_fx, "Comic Zoom V MultiColor")
	Comic_Zoom_VI_Multi = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_VI_Multi, "hi-light[fx]: Comic Zoom VI Multi","Syl",true,false,"#FFFFFF","#5B5B5B","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.dur/(1.32*frame_dur)","","text_shapes( )[(j - 1)%4 + 1]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.5\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x*( Ratio - (Ratio - 1)*(i - 1)/(n - 1) ) + Rd( Pixel, -Pixel )\n				y = y*( Ratio - (Ratio - 1)*(i - 1)/(n - 1) ) + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_VI_Multi); table.insert(hilight_fx, "Comic Zoom VI Multi")
	Comic_Zoom_VII_Shadxy = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_VII_Shadxy, "hi-light[fx]: Comic Zoom VII Shadxy","Syl",true,false,"#FFFFFF","#5B5B5B","#C8C8C8","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.dur/(2*frame_dur)","","text_shapes( )[(j - 1)%4 + 1]","format( \"\\\\blur1.2\\\\xshad%s\\\\yshad%s\", Rd( -10, 10)*ratio, Rd( -10, 10)*ratio )","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.25\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x * Ratio + Rd( Pixel, -Pixel )\n				y = y * Ratio + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_VII_Shadxy); table.insert(hilight_fx, "Comic Zoom VII Shadxy")
	Comic_Zoom_VIII_Progress_Descent = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_VIII_Progress_Descent, "hi-light[fx]: Comic Zoom VIII Progress Descent","Syl",true,false,"#FFFFFF","#5B5B5B","#C8C8C8","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y + 26 * sin( pi * module ) * ratio","","syl.dur/(2*frame_dur)","100 + 32 * sin( pi * module )","text_shapes( 1 )[(j - 1)%4 + 1]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.25\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x * Ratio + Rd( Pixel, -Pixel )\n				y = y * Ratio + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_VIII_Progress_Descent); table.insert(hilight_fx, "Comic Zoom VIII Progress Descent")
	Comic_Zoom_IX_Progress_Ascent = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_IX_Progress_Ascent, "hi-light[fx]: Comic Zoom IX Progress Ascent","Syl",true,false,"#FFFFFF","#5B5B5B","#C8C8C8","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y - 26 * sin( pi * module ) * ratio","","syl.dur/(2*frame_dur)","100 + 32 * sin( pi * module )","text_shapes( 1 )[(j - 1)%4 + 1]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.25\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x * Ratio + Rd( Pixel, -Pixel )\n				y = y * Ratio + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_IX_Progress_Ascent); table.insert(hilight_fx, "Comic Zoom IX Progress Ascent")
	Comic_Zoom_X_Progress_Alternate = table.duplicate(PfxM_Box); table.inbox(Comic_Zoom_X_Progress_Alternate, "hi-light[fx]: Comic Zoom X Progress Alternate","Syl",true,false,"#FFFFFF","#5B5B5B","#C8C8C8","0","0","0","l.start_time + syl.start_time + syl.dur*(j - 1)/maxj","l.start_time + syl.start_time + syl.dur*(j - 0)/maxj","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y + 26 * sin( pi * module ) * ratio * (-1)^(syl.i + ii)","","syl.dur/(2*frame_dur)","100 + 32 * sin( pi * module )","text_shapes( 1 )[(j - 1)%4 + 1]","","text_shp = text.to_shape( syl.text );\ntext_shapes = function( Ratio, Pixel )\n	local Ratio = Ratio or 1.25\n	local Pixel = Pixel or 3\n	local text_filter = { }\n	local n = 4\n	for i = 1, n do\n		text_filter[i] = shape.filter( text_shp,\n			function( x, y )\n				x = x * Ratio + Rd( Pixel, -Pixel )\n				y = y * Ratio + Rd( Pixel, -Pixel )\n				return x, y\n			end\n		)\n	end\n	return text_filter\nend","Lua",false); table.insert(hilight_fx_library, Comic_Zoom_X_Progress_Alternate); table.insert(hilight_fx, "Comic Zoom X Progress Alternate")
	Crazy_Move_I = table.duplicate(PfxM_Box); table.inbox(Crazy_Move_I, "hi-light[fx]: Crazy Move I","Syl",true,false,"#E2EAFD","#5C9CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Omove( { 0, 20*ratio, 0, -20*ratio }, 0, fx.dur, 3.4*frame_dur ), format( \"\\\\3c%s\\\\blur4\\\\t(%s,%s\\\\3c%s\\\\blur0)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\\\\org(%s,%s)\", shape.color3, fx.dur - 80, fx.dur, text.color3, 1.38*l.scale_x, 1.38*l.scale_y, l.scale_x, l.scale_y, fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, delay_filter, tag_filter )","delay_filter = function( )\n	return R( frame_dur, 2*frame_dur )\nend;\ntag_filter = function( )\n	local Ang = 20\n	return format( \"\\\\frx%s\\\\fry%s\\\\fr%s\", R( -2*Ang, 2*Ang ), R( -2*Ang, 2*Ang ), R( -Ang, Ang ) )\nend","Lua",false); table.insert(hilight_fx_library, Crazy_Move_I); table.insert(hilight_fx, "Crazy Move I")
	Crazy_Move_II_MultiColor = table.duplicate(PfxM_Box); table.inbox(Crazy_Move_II_MultiColor, "hi-light[fx]: Crazy Move II MultiColor","Syl",true,false,"#E2EAFD","#5C9CFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Omove( { 0, 20*ratio, 0, -20*ratio }, 0, fx.dur, 3.4*frame_dur ), format( \"\\\\3c%s\\\\blur4\\\\t(%s,%s\\\\3c%s\\\\blur0)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\\\\org(%s,%s)\", random.color( ), fx.dur - 80, fx.dur, text.color3, 1.38*l.scale_x, 1.38*l.scale_y, l.scale_x, l.scale_y, fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, delay_filter, tag_filter )","delay_filter = function( )\n	return R( frame_dur, 2*frame_dur )\nend;\ntag_filter = function( )\n	local Ang = 20\n	return format( \"\\\\frx%s\\\\fry%s\\\\fr%s\", R( -2*Ang, 2*Ang ), R( -2*Ang, 2*Ang ), R( -Ang, Ang ) )\nend","Lua",false); table.insert(hilight_fx_library, Crazy_Move_II_MultiColor); table.insert(hilight_fx, "Crazy Move II MultiColor")
	Crazy_Move_III = table.duplicate(PfxM_Box); table.inbox(Crazy_Move_III, "hi-light[fx]: Crazy Move III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove4( 12*ratio, 12*ratio, 0, fx.dur, 1, { 1.5*frame_dur }, { 1.5*frame_dur, { 20*ratio, 40*ratio } } ), format( \"\\\\org(%s,%s)\\\\fr%s\\\\t(\\\\fr0)\", fx.pos_x, fx.pos_y, Angle*(-1)^(syl.i + ii) )","Angle = 25","Lua",false); table.insert(hilight_fx_library, Crazy_Move_III); table.insert(hilight_fx, "Crazy Move III")
	Crazy_Move_IV = table.duplicate(PfxM_Box); table.inbox(Crazy_Move_IV, "hi-light[fx]: Crazy Move IV","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove4( 12*ratio, 12*ratio, 0, fx.dur, 1, { 1.5*frame_dur }, { 1.5*frame_dur, { 20*ratio, 40*ratio } } ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, 80, \"\\\\fscx(R( 0.7*l.scale_x, 1.4*l.scale_x ))\\\\fscy(R( 0.7*l.scale_x, 1.4*l.scale_x ))\" )","","Lua",false); table.insert(hilight_fx_library, Crazy_Move_IV); table.insert(hilight_fx, "Crazy Move IV")
	Damation_I = table.duplicate(PfxM_Box); table.inbox(Damation_I, "hi-light[fx]: Damation I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2, 3","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), tag.clip( )","","Lua",false); table.insert(hilight_fx_library, Damation_I); table.insert(hilight_fx, "Damation I")
	Damation_II = table.duplicate(PfxM_Box); table.inbox(Damation_II, "hi-light[fx]: Damation II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ) )","Shapes = shape.divide( shape.multi2( syl.width, syl.height, 12*ratio ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_II); table.insert(hilight_fx, "Damation II")
	Damation_III = table.duplicate(PfxM_Box); table.inbox(Damation_III, "hi-light[fx]: Damation III","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ) )","Shapes = shape.divide( shape.reflect( shape.multi2( syl.width, syl.height, 12*ratio ), \"y\" ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_III); table.insert(hilight_fx, "Damation III")
	Damation_IV = table.duplicate(PfxM_Box); table.inbox(Damation_IV, "hi-light[fx]: Damation IV","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ) )","Shapes = shape.divide( shape.multi1( \"default\", 5*ratio ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_IV); table.insert(hilight_fx, "Damation IV")
	Damation_V = table.duplicate(PfxM_Box); table.inbox(Damation_V, "hi-light[fx]: Damation V","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ) )","Shapes = shape.divide( shape.multi3( \"default\", 6*ratio ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_V); table.insert(hilight_fx, "Damation V")
	Damation_VI = table.duplicate(PfxM_Box); table.inbox(Damation_VI, "hi-light[fx]: Damation VI","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ) )","Shapes = shape.divide( shape.multi4( \"default\", 6, 2 ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_VI); table.insert(hilight_fx, "Damation VI")
	Damation_VI_Multi_Color = table.duplicate(PfxM_Box); table.inbox(Damation_VI_Multi_Color, "hi-light[fx]: Damation VI Multi Color","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","#Shapes","","syl.text","shape.Rmove( 12*ratio, 12*ratio, 0, fx.dur, 0.8, { 2.2*frame_dur } ), format( \"\\\\clip(%s)\\\\1c%s\", shape.centerpos( Shapes[j], fx.pos_x, fx.pos_y ), random.color( ) )","Shapes = shape.divide( shape.multi4( \"default\", 6, 1 ), 1 )","Lua",false); table.insert(hilight_fx_library, Damation_VI_Multi_Color); table.insert(hilight_fx, "Damation VI Multi Color")
	Desert_Song_I = table.duplicate(PfxM_Box); table.inbox(Desert_Song_I, "hi-light[fx]: Desert Song I","Syl",true,false,"#004CFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","3","","syl.text","format( \"\\\\org(%s,%s)\\\\1c%s\\\\bord0\\\\shad0\\\\blur2\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.move_x1, fx.move_b1 - l.descent, color.module( shape.color1, shape.color3 ), 1.25*l.scale_x, 1.25*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 100, \"\\\\fr(R( -20, 20 ))\\\\fax(Rc( -0.3, 0.3 ))\\\\fay(Rc( -0.3, 0.3 ))\" )","","Lua",false); table.insert(hilight_fx_library, Desert_Song_I); table.insert(hilight_fx, "Desert Song I")
	Desert_Song_II = table.duplicate(PfxM_Box); table.inbox(Desert_Song_II, "hi-light[fx]: Desert Song II","Syl",true,false,"#004CFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","3","","syl.text","shape.Rmove( 8*ratio, 16*ratio ), format( \"\\\\org(%s,%s)\\\\1c%s\\\\bord0\\\\shad0\\\\blur2\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.move_x1, fx.move_b1 - l.descent, color.module( shape.color1, shape.color3 ), 1.25*l.scale_x, 1.25*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 100, \"\\\\fr(R( -20, 20 ))\\\\fax(Rc( -0.3, 0.3 ))\\\\fay(Rc( -0.3, 0.3 ))\" )","","Lua",false); table.insert(hilight_fx_library, Desert_Song_II); table.insert(hilight_fx, "Desert Song II")
	Desert_Song_III = table.duplicate(PfxM_Box); table.inbox(Desert_Song_III, "hi-light[fx]: Desert Song III","Syl",true,false,"#F25CFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 200 + R( 200 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.dur/72","","syl.text","shape.Rmove( 12*ratio, 16*ratio ), format( \"\\\\org(%s,%s)\\\\1c%s\\\\bord0\\\\shad0\\\\blur2\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s\\\\blur5.4)\", fx.move_x1, fx.move_b1 - l.descent, color.module( shape.color3, shape.color1 ), 1.25*l.scale_x, 1.25*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 100, \"\\\\fr(R( -20, 20 ))\\\\fax(Rc( -0.3, 0.3 ))\\\\fay(Rc( -0.3, 0.3 ))\" )","","Lua",false); table.insert(hilight_fx_library, Desert_Song_III); table.insert(hilight_fx, "Desert Song III")
	Desesperation = table.duplicate(PfxM_Box); table.inbox(Desesperation, "hi-light[fx]: Desesperation","Syl",true,false,"#E2EAFD","#4B90FD","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","shape.Rmove( 15*ratio, 15*ratio, 0, fx.dur, 1, { frame_dur } ), tag.only( j == 1, format( \"\\\\shad0\\\\bord3\\\\blur2.6\\\\1a&HFF&\\\\3c%s\", shape.color3 ) )","","Lua",false); table.insert(hilight_fx_library, Desesperation); table.insert(hilight_fx, "Desesperation")
	Disolve_Clip_I = table.duplicate(PfxM_Box); table.inbox(Disolve_Clip_I, "hi-light[fx]: Disolve Clip I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay1 - delay2*(1 - module)","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, syl.width/2","","syl.text","tag.clip( fx.pos_l, fx.pos_t - offsety, syl.width, syl.height + 2*offsety ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\blur4)\\\\fad(0,400)\", fx.move_x1 - 10000*ratio, fx.move_y1, 600*module, fx.dur ), tag.oscill( { 600*module, fx.dur }, 260, \"\\\\fr( angle*(-1)^(syl.i + i) )\" )","delay1 = 700;\ndelay2 = 300;\noffsety = 50;\nangle = 0.05","Lua",false); table.insert(hilight_fx_library, Disolve_Clip_I); table.insert(hilight_fx, "Disolve Clip I")
	Disolve_Clip_II = table.duplicate(PfxM_Box); table.inbox(Disolve_Clip_II, "hi-light[fx]: Disolve Clip II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay1 - delay2*(1 - module)","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, syl.width/2","","syl.text","tag.clip( fx.pos_l, fx.pos_t - offsety, syl.width, syl.height + 2*offsety ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\blur4)\\\\t(%s,%s,\\\\fscy10)\\\\fad(0,400)\", fx.move_x1 - 10000*ratio, fx.move_y1, 600*module, fx.dur, fx.dur - 400, fx.dur ), tag.oscill( { 600*module, fx.dur }, 260, \"\\\\fr( angle*(-1)^(syl.i + i) )\" )","delay1 = 700;\ndelay2 = 300;\noffsety = 50;\nangle = 0.06","Lua",false); table.insert(hilight_fx_library, Disolve_Clip_II); table.insert(hilight_fx, "Disolve Clip II")
	Distort_Horizontal_I = table.duplicate(PfxM_Box); table.inbox(Distort_Horizontal_I, "hi-light[fx]: Distort Horizontal I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","10","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\fry%s\\\\t(\\\\fry0)\\\\fad(0,200)\", R( 10, 40 )*25*(-1)^R( 2 ) )",""); table.insert(hilight_fx_library, Distort_Horizontal_I); table.insert(hilight_fx, "Distort Horizontal I")
	Distort_Horizontal_II = table.duplicate(PfxM_Box); table.inbox(Distort_Horizontal_II, "hi-light[fx]: Distort Horizontal II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","0","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","10","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\t(%s,%s,\\\\fry360)\\\\fad(0,200)\", module*fx.dur/2, module*fx.dur/2 + fx.dur/2 )",""); table.insert(hilight_fx_library, Distort_Horizontal_II); table.insert(hilight_fx, "Distort Horizontal II")
	Distort_Horizontal_III = table.duplicate(PfxM_Box); table.inbox(Distort_Horizontal_III, "hi-light[fx]: Distort Horizontal III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","10","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\frx%s\\\\t(\\\\frx0)\\\\fad(0,200)\", R( 100,1000 )*(-1)^R( 2 ) )",""); table.insert(hilight_fx_library, Distort_Horizontal_III); table.insert(hilight_fx, "Distort Horizontal III")
	Distort_Shake_I = table.duplicate(PfxM_Box); table.inbox(Distort_Shake_I, "hi-light[fx]: Distort Shake I","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.filter2( text.to_shape( ), function( x, y )\n	x = x + R( -xy ,xy )\n	y = y + R( -xy, xy )\n	return x, y\nend, 4 )","shake, format( \"\\\\bord0\\\\blur1\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, l.scale_x, l.scale_y )","xy = 3;\nshake = shape.Rmove( 20*ratio, 20*ratio, 0, syl.dur, 0.8, 2*frame_dur )","Lua",false); table.insert(hilight_fx_library, Distort_Shake_I); table.insert(hilight_fx, "Distort Shake I")
	Distort_Shake_II = table.duplicate(PfxM_Box); table.inbox(Distort_Shake_II, "hi-light[fx]: Distort Shake II","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y + tag.only( j == 1, 10*ratio )","","2","","tag.only( j == 1, shape.filter2( text.to_shape( ), function( x, y )\n	x = x + R( -xy ,xy )\n	y = y + R( -xy, xy )\n	return x, y\nend, 4 ), syl.text )","var.syl.shake, format( \"\\\\bord0\\\\blur1\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, l.scale_x, l.scale_y ), tag.only( j == 2, \"\\\\1c&HF8AE17&\" )","xy = 3*ratio;\nshake = shape.Rmove( 20*ratio, 20*ratio, 0, syl.dur, 0.8, { 2*frame_dur } )","Lua",false); table.insert(hilight_fx_library, Distort_Shake_II); table.insert(hilight_fx, "Distort Shake II")
	Distort_Shake_III_Shine = table.duplicate(PfxM_Box); table.inbox(Distort_Shake_III_Shine, "hi-light[fx]: Distort Shake III Shine","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y + tag.only( j == 1, 10*ratio )","","2","","tag.only( j == 1, shape.filter2( text.to_shape( ), function( x, y )\n	x = x + R( -xy ,xy )\n	y = y + R( -xy, xy )\n	return x, y\nend, 4 ), syl.text )","var.syl.shake, tag.only( j == 1, format( \"\\\\bord0\\\\blur1\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, l.scale_x, l.scale_y ), format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\fscx%s\\\\fscy%s\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\", 1.35*l.scale_x, 1.35*l.scale_y, text.color1, text.color3, l.scale_x, l.scale_y ) )","xy = 3*ratio;\nshake = shape.Rmove( 25*ratio, 25*ratio, 0, syl.dur, 0.8, { 2.4*frame_dur } )","Lua",false); table.insert(hilight_fx_library, Distort_Shake_III_Shine); table.insert(hilight_fx, "Distort Shake III Shine")
	Distort_Shake_III_Shine_2 = table.duplicate(PfxM_Box); table.inbox(Distort_Shake_III_Shine_2, "hi-light[fx]: Distort Shake III Shine 2","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y + tag.only( j == 1, 10*ratio )","","2","","tag.only( j == 1, shape.filter2( text.to_shape( ), function( x, y )\n	x = x + R( -xy ,xy )\n	y = y + R( -xy, xy )\n	return x, y\nend, 4 ), syl.text )","shape.Rmove( 25*ratio, 25*ratio, 0, syl.dur, 0.8, { 2.8*frame_dur } ), tag.only( j == 1, format( \"\\\\bord0\\\\blur1\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, l.scale_x, l.scale_y ), format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\fscx%s\\\\fscy%s\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\", 1.35*l.scale_x, 1.35*l.scale_y, text.color1, text.color3, l.scale_x, l.scale_y ) )","xy = 3*ratio","Lua",false); table.insert(hilight_fx_library, Distort_Shake_III_Shine_2); table.insert(hilight_fx, "Distort Shake III Shine 2")
	Distort_Vertical_I = table.duplicate(PfxM_Box); table.inbox(Distort_Vertical_I, "hi-light[fx]: Distort Vertical I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( syl.width/3 )","l.scale_x, l.scale_y","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\fry%s\\\\t(\\\\fry0)\\\\fad(0,200)\", R( 10, 40 )*25*(-1)^R( 2 ) )",""); table.insert(hilight_fx_library, Distort_Vertical_I); table.insert(hilight_fx, "Distort Vertical I")
	Distort_Vertical_II = table.duplicate(PfxM_Box); table.inbox(Distort_Vertical_II, "hi-light[fx]: Distort Vertical II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( syl.width/3 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\t(%s,%s,\\\\fry360)\\\\fad(0,200)\", module*fx.dur/2, module*fx.dur/2 + fx.dur/2 )",""); table.insert(hilight_fx_library, Distort_Vertical_II); table.insert(hilight_fx, "Distort Vertical II")
	Distort_Vertical_III = table.duplicate(PfxM_Box); table.inbox(Distort_Vertical_III, "hi-light[fx]: Distort Vertical III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 200","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, ceil( syl.width/3 )","","syl.text","tag.clip( fx.pos_l, fx.pos_t, syl.width, syl.height ), format( \"\\\\frx%s\\\\t(\\\\frx0)\\\\fad(0,200)\", R( 100, 1000 )*(-1)^R( 2 ) )",""); table.insert(hilight_fx_library, Distort_Vertical_III); table.insert(hilight_fx, "Distort Vertical III")
	Double_Bord_Zoom_I = table.duplicate(PfxM_Box); table.inbox(Double_Bord_Zoom_I, "hi-light[fx]: Double Bord Zoom I","Syl",true,false,"#EC6299","#4B4C4D","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, \"\\\\shad0\\\\1a255\\\\bord8.4r\\\\blur0.8\\\\3cSC1\", \"\\\\bord4.2r\\\\3cSC3\" ), \"\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, Double_Bord_Zoom_I); table.insert(hilight_fx, "Double Bord Zoom I")
	Function_Oscill_Technicolor = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_Technicolor, "hi-light[fx]: Function Oscill Technicolor","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, 50, table.rmake( \"color\", 6, R( 5*syl.i, 10*syl.i ), R( 30*syl.i, 60*syl.i ), \"\\\\1c\" ) )",""); table.insert(hilight_fx_library, Function_Oscill_Technicolor); table.insert(hilight_fx, "Function Oscill Technicolor")
	Function_Oscill_MultiZoom = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_MultiZoom, "hi-light[fx]: Function Oscill MultiZoom","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, 50, format( \"\\\\fscx%s\\\\fscy%s\", 1.25*fx.sizex, 1.25*fx.sizey ), format( \"\\\\fscx%s\\\\fscy%s\", fx.sizex, fx.sizey ) )",""); table.insert(hilight_fx_library, Function_Oscill_MultiZoom); table.insert(hilight_fx, "Function Oscill MultiZoom")
	Function_Oscill_MultiZoom_in_Y = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_MultiZoom_in_Y, "hi-light[fx]: Function Oscill MultiZoom in Y","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, 80, \"\\\\fscy\" .. 1.45*l.scale_y, \"\\\\fscy\" .. l.scale_y )",""); table.insert(hilight_fx_library, Function_Oscill_MultiZoom_in_Y); table.insert(hilight_fx, "Function Oscill MultiZoom in Y")
	Function_Oscill_MultiZoom_in_X = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_MultiZoom_in_X, "hi-light[fx]: Function Oscill MultiZoom in X","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, 80, \"\\\\fscx\" .. 1.45*l.scale_x, \"\\\\fscx\" .. l.scale_x )",""); table.insert(hilight_fx_library, Function_Oscill_MultiZoom_in_X); table.insert(hilight_fx, "Function Oscill MultiZoom in X")
	Function_Oscill_Vibration = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_Vibration, "hi-light[fx]: Function Oscill Vibration","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\", -10000*ratio, fx.pos_y ), tag.oscill( fx.dur, 60, \"\\\\fr( angle*(-1)^i )\" )","angle = 0.05"); table.insert(hilight_fx_library, Function_Oscill_Vibration); table.insert(hilight_fx, "Function Oscill Vibration")
	Ghost_Shake_Halo_Border = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_Halo_Border, "hi-light[fx]: Ghost Shake Halo Border","Syl",true,false,"#0E72FF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 10*ratio ), format( \"\\\\1a&HFF&\\\\bord%s\\\\shad0\\\\blur1.4\\\\3c%s\", 3*ratio, shape.color1 )","delay = 0","Lua",false); table.insert(hilight_fx_library, Ghost_Shake_Halo_Border); table.insert(hilight_fx, "Ghost Shake Halo Border")
	Ghost_Shake_I = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_I, "hi-light[fx]: Ghost Shake I","Syl",true,false,"#CE04D9","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 10*ratio ), format( \"\\\\bord0\\\\shad0\\\\blur1.4\\\\1c%s\", shape.color1 )","delay = 0","Lua",false); table.insert(hilight_fx_library, Ghost_Shake_I); table.insert(hilight_fx, "Ghost Shake I")
	Ghost_Shake_II = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_II, "hi-light[fx]: Ghost Shake II","Syl",true,false,"#FD9601","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 10*ratio, 10*ratio, 0, fx.dur, 1, -2*frame_dur ), format( \"\\\\bord0\\\\shad0\\\\blur1.4\\\\1c%s\", shape.color1 )","delay = 0","Lua",false); table.insert(hilight_fx_library, Ghost_Shake_II); table.insert(hilight_fx, "Ghost Shake II")
	Ghost_Shake_Multi = table.duplicate(PfxM_Box); table.inbox(Ghost_Shake_Multi, "hi-light[fx]: Ghost Shake Multi","Syl",true,false,"#E508DC","#FFFFFF","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","3","","syl.text","shape.Rmove( 10*ratio ), format( \"\\\\bord0\\\\shad0\\\\blur0.8\\\\1c%s\", color.module( color1, color2 ) )","delay = 0;\ncolor1 = shape.color1;\ncolor2 = shape.color3","Lua",false); table.insert(hilight_fx_library, Ghost_Shake_Multi); table.insert(hilight_fx, "Ghost Shake Multi")
	Hidden_Clip_Left_Right = table.duplicate(PfxM_Box); table.inbox(Hidden_Clip_Left_Right, "hi-light[fx]: Hidden Clip Left Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"%s\\\\t(%s)\", tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), tag.clip( fx.pos_l + syl.widtht, fx.pos_t, 0, syl.height ) )","delay = 300"); table.insert(hilight_fx_library, Hidden_Clip_Left_Right); table.insert(hilight_fx, "Hidden Clip Left Right")
	Hidden_Clip_Top_Bottom = table.duplicate(PfxM_Box); table.inbox(Hidden_Clip_Top_Bottom, "hi-light[fx]: Hidden Clip Top Bottom","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"%s\\\\t(%s)\", tag.clip( fx.pos_l, fx.pos_t, syl.widtht, syl.height ), tag.clip( fx.pos_l, fx.pos_b, syl.widtht, 0 ) )","delay = 300"); table.insert(hilight_fx_library, Hidden_Clip_Top_Bottom); table.insert(hilight_fx, "Hidden Clip Top Bottom")
	Hilight_Thake_I = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_I, "hi-light[fx]: Hilight Thake I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.bottom","","","2","1","fx.pos_x","fx.pos_y","","1, syl.width / 4r","","syl.text","tag.clip( fx.pos_l, fx.pos_t - syl.height * 3 / 2, syl.width, 2 * syl.height ), \"\\\\fscyrtmdRc( 1.3, 1.8 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_I); table.insert(hilight_fx, "Hilight Thake I")
	Hilight_Thake_II = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_II, "hi-light[fx]: Hilight Thake II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.top","","","8","1","fx.pos_x","fx.pos_y","","1, syl.width / 4r","","syl.text","tag.clip( fx.pos_l, fx.pos_t + syl.height / 2, syl.width, 2 * syl.height ), \"\\\\fscyrtmdRc( 1.3, 1.8 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_II); table.insert(hilight_fx, "Hilight Thake II")
	Hilight_Thake_III = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_III, "hi-light[fx]: Hilight Thake III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1, syl.width / 4r","","syl.text","tag.clip( fx.pos_l, fx.pos_t - syl.height / 2, syl.width, 2 * syl.height ), \"\\\\fscyrtmdRc( 0.6, 2.1 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_III); table.insert(hilight_fx, "Hilight Thake III")
	Hilight_Thake_IV = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_IV, "hi-light[fx]: Hilight Thake IV","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.right","syl.middle","","","6","1","fx.pos_x","fx.pos_y","","syl.height / 4r","","syl.text","tag.clip( fx.pos_l - syl.width / 2 - syl.height, fx.pos_t, syl.width + syl.height, syl.height ), \"\\\\fscxrtmdRc( 1.2, 1.8 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_IV); table.insert(hilight_fx, "Hilight Thake IV")
	Hilight_Thake_V = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_V, "hi-light[fx]: Hilight Thake V","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.left","syl.middle","","","4","1","fx.pos_x","fx.pos_y","","syl.height / 4r","","syl.text","tag.clip( fx.pos_l + syl.width / 2, fx.pos_t, syl.width + syl.height, syl.height ), \"\\\\fscxrtmdRc( 1.2, 1.8 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_V); table.insert(hilight_fx, "Hilight Thake V")
	Hilight_Thake_VI = table.duplicate(PfxM_Box); table.inbox(Hilight_Thake_VI, "hi-light[fx]: Hilight Thake VI","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.height / 4r","","syl.text","tag.clip( fx.pos_l - syl.width / 2, fx.pos_t, 2 * syl.width, syl.height ), \"\\\\fscxrtmdRc( 0.6, 2.2 )\"","","Lua",false); table.insert(hilight_fx_library, Hilight_Thake_VI); table.insert(hilight_fx, "Hilight Thake VI")
	Halo_Border_Shine = table.duplicate(PfxM_Box); table.inbox(Halo_Border_Shine, "hi-light[fx]: Halo Border Shine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\shad0\\\\bord%s\\\\3c&HFFFFFF&\\\\1a&HFF&\\\\blur1\\\\t(\\\\blur4\\\\3a&HFF&\\\\fscx%s\\\\fscy%s)\", 3*ratio, 1.8*l.scale_x, 1.8*l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Halo_Border_Shine); table.insert(hilight_fx, "Halo Border Shine")
	Halo_Border_Shine_Multi = table.duplicate(PfxM_Box); table.inbox(Halo_Border_Shine_Multi, "hi-light[fx]: Halo Border Shine Multi","Syl",true,false,"#8AB9FC","#3F3C3C","#FFFFFF","100","0","0","l.start_time + syl.start_time + 1.2*syl.dur*module","fx.start_time + 350","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","syl.dur/100","","syl.text","format( \"\\\\fad(0,100)\\\\bord3\\\\blur1\\\\1a&HFF&\\\\3c%s\\\\3a%s\\\\t(\\\\fscx%s\\\\fscy%s\\\\blur4)\", shape.color1, shape.alpha1, 2*l.scale_x, 2*l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Halo_Border_Shine_Multi); table.insert(hilight_fx, "Halo Border Shine Multi")
	Halo_Border_Shine_Vertical = table.duplicate(PfxM_Box); table.inbox(Halo_Border_Shine_Vertical, "hi-light[fx]: Halo Border Shine Vertical","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","fx.start_time + syl.dur/2","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\shad0\\\\bord%s\\\\3c&HFFFFFF&\\\\1a&HFF&\\\\blur1\\\\t(\\\\blur4\\\\3a&HFF&\\\\fscx0\\\\fscy%s)\", 2*ratio, 2.8*l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Halo_Border_Shine_Vertical); table.insert(hilight_fx, "Halo Border Shine Vertical")
	In_Mark_Syl_I = table.duplicate(PfxM_Box); table.inbox(In_Mark_Syl_I, "hi-light[fx]: In Mark Syl I","Syl",true,false,"#FFFFFF","#61BCFF","#6A8DD6","255","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","(j == 1) and syl.text or mi_shape","shape.Rmove( )","Sizex = syl.width + 8*ratio;\nSizey = syl.height - l.descent/2;\nmi_shape = \"{\\\\bord3}\" .. shape.displace( shape.size( shape.rectangle, Sizex, Sizey ), syl.width/2 - Sizex/2, l.descent - syl.height/2 + Sizey/2 );\nrandom_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, In_Mark_Syl_I); table.insert(hilight_fx, "In Mark Syl I")
	In_Mark_Syl_II = table.duplicate(PfxM_Box); table.inbox(In_Mark_Syl_II, "hi-light[fx]: In Mark Syl II","Syl",true,false,"#FFFFFF","#E91DF4","#6A8DD6","255","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","(j == 1) and syl.text or mi_shape","shape.Rmove( )","Sizex = 0.88*math.distance( syl.width, syl.height - l.descent/2);\nSizey = Sizex;\nmi_shape = \"{\\\\bord3}\" .. shape.displace( shape.size( shape.circle, Sizex, Sizey ), syl.width/2 - Sizex/2, l.descent - syl.height/2 + Sizey/2 );\nrandom_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, In_Mark_Syl_II); table.insert(hilight_fx, "In Mark Syl II")
	In_Mark_Syl_III = table.duplicate(PfxM_Box); table.inbox(In_Mark_Syl_III, "hi-light[fx]: In Mark Syl III","Syl",true,false,"#FFFFFF","#E91DF4","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","(j == 1) and syl.text or mi_shape","shape.Rmove( )","Sizex = 0.88*math.distance( syl.width, syl.height - l.descent/2);\nSizey = Sizex;\nmi_shape = format( \"{\\\\bord0.4\\\\blur3\\\\3c%s}\", random.color( ) ) .. shape.displace( shape.size( shape.bubble, Sizex, Sizey ), syl.width/2 - Sizex/2, l.descent - syl.height/2 + Sizey/2 );\nrandom_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, In_Mark_Syl_III); table.insert(hilight_fx, "In Mark Syl III")
	In_Mark_Syl_IV_Bubble_HL = table.duplicate(PfxM_Box); table.inbox(In_Mark_Syl_IV_Bubble_HL, "hi-light[fx]: In Mark Syl IV Bubble HL","Syl",true,false,"#FFFFFF","#E91DF4","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 800 + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + Dx","fx.pos_y, fx.pos_y - Dy","","2","","(j == 1) and syl.text or mi_shape","shape.Rmove( 15*ratio, nil, nil, nil, nil, { 360} ), tag.only( j == 1, format( \"\\\\t(\\\\bord0.8\\\\blu4\\\\3c%s)\", random.color( nil, 70 ) ), format( \"\\\\bord0.4\\\\blur3\\\\3c%s\", random.color( ) ) ), \"\\\\fad(0,220)\"","Sizex = 0.88*math.distance( syl.width, syl.height - l.descent/2);\nSizey = Sizex;\nmi_shape = shape.displace( shape.size( shape.bubble, Sizex, Sizey ), syl.width/2 - Sizex/2, l.descent - syl.height/2 + Sizey/2 );\nrandom_mode = \"syl\";\nDx = R( -20, 20 )*ratio;\nDy = R( 80, 120 )*ratio;\ndelay = R( 260 )","Lua",false); table.insert(hilight_fx_library, In_Mark_Syl_IV_Bubble_HL); table.insert(hilight_fx, "In Mark Syl IV Bubble HL")
	Jitter_ShadOscill_Darkara = table.duplicate(PfxM_Box); table.inbox(Jitter_ShadOscill_Darkara, "hi-light[fx]: Jitter ShadOscill Darkara","Syl",true,false,"#AA32AB","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + (j-1)*(dark_ciclo)","fx.start_time + dark_ciclo + tag.only( j == maxj, 0, var.loop.delay )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + var.loop.Dx, fx.pos_x","fx.pos_y + var.loop.Dy, fx.pos_y","","dark_loop","","syl.text","format( \"\\\\1c%s\\\\4c%s\\\\fscx%s\\\\fscy%s\\\\bord0\\\\blur1\", color.module( shape.color1, shape.color4 ), color.module( shape.color4, shape.color1 ), 140 - 40*module, 140 - 40*module ), tag.oscill( fx.dur, 80, \"\\\\xshad1.2\", \"\\\\xshad-1.2\" )","dark_loop = syl.dur*0.01;\ndark_ciclo = syl.dur/dark_loop;\ndelay = R( 20,50 );\nDx = R( -5, 5 )*ratio;\nDy = R( -5, 5 )*ratio","Lua",false); table.insert(hilight_fx_library, Jitter_ShadOscill_Darkara); table.insert(hilight_fx, "Jitter ShadOscill Darkara")
	Jitter_Soft_I = table.duplicate(PfxM_Box); table.inbox(Jitter_Soft_I, "hi-light[fx]: Jitter Soft I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Smove( mi_shape )","space = 16*ratio;\nmi_shape = shape.Strajectory( syl.dur/frame_dur, space )","Lua",false); table.insert(hilight_fx_library, Jitter_Soft_I); table.insert(hilight_fx, "Jitter Soft I")
	Jitter_Soft_II = table.duplicate(PfxM_Box); table.inbox(Jitter_Soft_II, "hi-light[fx]: Jitter Soft II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Smove( mi_shape ), tag.oscill( fx.dur, frame_dur, \"\\\\fscx( R( 0.8*l.scale_x, 1.2*l.scale_x ) )\\\\fscy( R( 0.8*l.scale_y, 1.2*l.scale_y ) )\" )","space = 16*ratio;\nmi_shape = shape.Strajectory( syl.dur/frame_dur, space )","Lua",false); table.insert(hilight_fx_library, Jitter_Soft_II); table.insert(hilight_fx, "Jitter Soft II")
	Jump_Alternate = table.duplicate(PfxM_Box); table.inbox(Jump_Alternate, "hi-light[fx]: Jump Alternate","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump*(-1)^syl.i, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} )","jump = 20*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Alternate); table.insert(hilight_fx, "Jump Alternate")
	Jump_Alternate_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Alternate_Char_I, "hi-light[fx]: Jump Alternate Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} )","jump = 20*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Alternate_Char_I); table.insert(hilight_fx, "Jump Alternate Char I")
	Jump_Alternate_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Alternate_Char_II, "hi-light[fx]: Jump Alternate Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Alternate_Char_II); table.insert(hilight_fx, "Jump Alternate Char II")
	Jump_Crazy_I = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_I, "hi-light[fx]: Jump Crazy I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 0, jump ), format( \"\\\\org(%s,%s)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, 1.3*l.scale_x, 1.3*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 2*frame_dur, Angle )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -30, 30 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_I); table.insert(hilight_fx, "Jump Crazy I")
	Jump_Crazy_I_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_I_Char_I, "hi-light[fx]: Jump Crazy I Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 0, jump ), format( \"\\\\org(%s,%s)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, 1.3*l.scale_x, 1.3*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 2*frame_dur, Angle )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -30, 30 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_I_Char_I); table.insert(hilight_fx, "Jump Crazy I Char I")
	Jump_Crazy_I_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_I_Char_II, "hi-light[fx]: Jump Crazy I Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 0, jump, sylchar.start_time, sylchar.end_time ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, sylchar.start_time, sylchar.start_time + 1, 1.3*l.scale_x, 1.3*l.scale_y, sylchar.start_time + 1, sylchar.end_time, l.scale_x, l.scale_y ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 2*frame_dur, Angle ), format( \"\\\\t(%s,%s,\\\\fr0)\", sylchar.end_time, sylchar.end_time )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -30, 30 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_I_Char_II); table.insert(hilight_fx, "Jump Crazy I Char II")
	Jump_Crazy_II = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_II, "hi-light[fx]: Jump Crazy II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( jump, 0 ), format( \"\\\\org(%s,%s)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, 1.3*l.scale_x, 1.3*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 2*frame_dur, Angle )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -40, 40 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_II); table.insert(hilight_fx, "Jump Crazy II")
	Jump_Crazy_II_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_II_Char_I, "hi-light[fx]: Jump Crazy II Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( jump, 0 ), format( \"\\\\org(%s,%s)\\\\fscx%s\\\\fscy%s\\\\t(\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, 1.3*l.scale_x, 1.3*l.scale_y, l.scale_x, l.scale_y ), tag.oscill( fx.dur, 2*frame_dur, Angle )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -40, 40 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_II_Char_I); table.insert(hilight_fx, "Jump Crazy II Char I")
	Jump_Crazy_II_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Crazy_II_Char_II, "hi-light[fx]: Jump Crazy II Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( jump, 0, sylchar.start_time, sylchar.end_time ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s)\", fx.pos_x, fx.pos_y, sylchar.start_time, sylchar.start_time + 1, 1.3*l.scale_x, 1.3*l.scale_y, sylchar.start_time + 1, sylchar.end_time, l.scale_x, l.scale_y ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 2*frame_dur, Angle ), format( \"\\\\t(%s,%s,\\\\fr0)\", sylchar.end_time, sylchar.end_time )","jump = 30*ratio;\nAngle = function( )\n	return \"\\\\fr\" .. Rc( -40, 40 )\nend","Lua",false); table.insert(hilight_fx_library, Jump_Crazy_II_Char_II); table.insert(hilight_fx, "Jump Crazy II Char II")
	Jump_Dancing_frz = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz, "hi-light[fx]: Jump Dancing frz","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, fx.dur/3, \"\\\\fr30\", \"\\\\fr-30\", \"\\\\fr0\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz); table.insert(hilight_fx, "Jump Dancing frz")
	Jump_Dancing_frz_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Char_I, "hi-light[fx]: Jump Dancing frz Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, fx.dur/3, \"\\\\fr( 20*(-1)^char.i )\", \"\\\\fr( 20*(-1)^(char.i + i) )\", \"\\\\fr0\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Char_I); table.insert(hilight_fx, "Jump Dancing frz Char I")
	Jump_Dancing_frz_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Char_II, "hi-light[fx]: Jump Dancing frz Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.mid_time, sylchar.mid_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, char.dur/3, \"\\\\fr( 20*(-1)^char.i )\", \"\\\\fr( 20*(-1)^(char.i + i) )\", \"\\\\fr0\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Char_II); table.insert(hilight_fx, "Jump Dancing frz Char II")
	Jump_Dancing_frz_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Char_III, "hi-light[fx]: Jump Dancing frz Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, fx.dur/3, \"\\\\fr( 20*(-1)^char.i )\", \"\\\\fr( 20*(-1)^(char.i + i) )\", \"\\\\fr0\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Char_III); table.insert(hilight_fx, "Jump Dancing frz Char III")
	Jump_Dancing_frz_Char_IV = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Char_IV, "hi-light[fx]: Jump Dancing frz Char IV","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.mid_time, sylchar.mid_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, char.dur/3, \"\\\\fr( 20*(-1)^char.i )\", \"\\\\fr( 20*(-1)^(char.i + i) )\", \"\\\\fr0\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Char_IV); table.insert(hilight_fx, "Jump Dancing frz Char IV")
	Jump_Dancing_frz_Multi = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Multi, "hi-light[fx]: Jump Dancing frz Multi","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, 2*frame_dur, \"\\\\fr30\", \"\\\\fr-30\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Multi); table.insert(hilight_fx, "Jump Dancing frz Multi")
	Jump_Dancing_frz_Multi_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Multi_Char_I, "hi-light[fx]: Jump Dancing frz Multi Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24, fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, 2.6*frame_dur, \"\\\\fr( 20*(-1)^(syl.i + char.i + i) )\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Multi_Char_I); table.insert(hilight_fx, "Jump Dancing frz Multi Char I")
	Jump_Dancing_frz_Multi_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Multi_Char_II, "hi-light[fx]: Jump Dancing frz Multi Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24, fx.pos_x, fx.pos_y }, nil, { sylchar.start_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)%s\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, 2.6*frame_dur, \"\\\\fr( 20*(-1)^(syl.i + char.i + i) )\" ), sylchar.end_time, sylchar.end_time )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Multi_Char_II); table.insert(hilight_fx, "Jump Dancing frz Multi Char II")
	Jump_Dancing_frz_Multi_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Multi_Char_III, "hi-light[fx]: Jump Dancing frz Multi Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)%s\", fx.pos_x, fx.pos_y, tag.oscill( fx.dur, 2.6*frame_dur, \"\\\\fr( 15*(-1)^(syl.i + char.i + i) )\" ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Multi_Char_III); table.insert(hilight_fx, "Jump Dancing frz Multi Char III")
	Jump_Dancing_frz_Multi_Char_IV = table.duplicate(PfxM_Box); table.inbox(Jump_Dancing_frz_Multi_Char_IV, "hi-light[fx]: Jump Dancing frz Multi Char IV","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y }, nil, { sylchar.start_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)%s\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, 2.6*frame_dur, \"\\\\fr( 15*(-1)^(syl.i + char.i + i) )\" ), sylchar.end_time, sylchar.end_time )","","Lua",false); table.insert(hilight_fx_library, Jump_Dancing_frz_Multi_Char_IV); table.insert(hilight_fx, "Jump Dancing frz Multi Char IV")
	Jump_Funny_I = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_I, "hi-light[fx]: Jump Funny I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr30)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, 0.5*fx.dur, 0.75*fx.dur )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Funny_I); table.insert(hilight_fx, "Jump Funny I")
	Jump_Funny_I_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_I_Char_I, "hi-light[fx]: Jump Funny I Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr30)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, 0.5*fx.dur, 0.75*fx.dur )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Funny_I_Char_I); table.insert(hilight_fx, "Jump Funny I Char I")
	Jump_Funny_I_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_I_Char_II, "hi-light[fx]: Jump Funny I Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr30)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, sylchar.start_time + 0.25*char.dur, sylchar.start_time + 0.5*char.dur, sylchar.start_time + 0.5*char.dur, sylchar.start_time + 0.75*char.dur )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Funny_I_Char_II); table.insert(hilight_fx, "Jump Funny I Char II")
	Jump_Funny_II = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_II, "hi-light[fx]: Jump Funny II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, Angle, 0.5*fx.dur, 0.75*fx.dur )","jump = 25*ratio;\nAngle = 45*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_II); table.insert(hilight_fx, "Jump Funny II")
	Jump_Funny_II_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_II_Char_I, "hi-light[fx]: Jump Funny II Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, Angle, 0.5*fx.dur, 0.75*fx.dur )","jump = 25*ratio;\nAngle = 45*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_II_Char_I); table.insert(hilight_fx, "Jump Funny II Char I")
	Jump_Funny_II_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_II_Char_II, "hi-light[fx]: Jump Funny II Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, sylchar.start_time + 0.25*char.dur, sylchar.start_time + 0.5*char.dur, Angle, sylchar.start_time + 0.5*char.dur, sylchar.start_time + 0.75*char.dur )","jump = 25*ratio;\nAngle = 45*(-1)^char.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_II_Char_II); table.insert(hilight_fx, "Jump Funny II Char II")
	Jump_Funny_III = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_III, "hi-light[fx]: Jump Funny III","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, Angle, 0.5*fx.dur, 0.75*fx.dur )","jump = 25*ratio;\nAngle = 45*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_III); table.insert(hilight_fx, "Jump Funny III")
	Jump_Funny_III_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_III_Char_I, "hi-light[fx]: Jump Funny III Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.25*fx.dur, 0.5*fx.dur, Angle, 0.5*fx.dur, 0.75*fx.dur )","jump = -25*ratio;\nAngle = 45*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_III_Char_I); table.insert(hilight_fx, "Jump Funny III Char I")
	Jump_Funny_III_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_III_Char_II, "hi-light[fx]: Jump Funny III Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, sylchar.start_time + 0.25*char.dur, sylchar.start_time + 0.5*char.dur, Angle, sylchar.start_time + 0.5*char.dur, sylchar.start_time + 0.75*char.dur )","jump = -25*ratio;\nAngle = 45*(-1)^char.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_III_Char_II); table.insert(hilight_fx, "Jump Funny III Char II")
	Jump_Funny_IV = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_IV, "hi-light[fx]: Jump Funny IV","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(0,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.33*fx.dur, Angle, 0.33*fx.dur, 0.66*fx.dur, -Angle, 0.66*fx.dur, fx.dur )","jump = 30*ratio;\nAngle = 50*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_IV); table.insert(hilight_fx, "Jump Funny IV")
	Jump_Funny_IV_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_IV_Char_I, "hi-light[fx]: Jump Funny IV Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\org(%s,%s)\\\\t(0,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, 0.33*fx.dur, Angle, 0.33*fx.dur, 0.66*fx.dur, -Angle, 0.66*fx.dur, fx.dur )","jump = 30*ratio;\nAngle = 40*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_IV_Char_I); table.insert(hilight_fx, "Jump Funny IV Char I")
	Jump_Funny_IV_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Funny_IV_Char_II, "hi-light[fx]: Jump Funny IV Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + jump, fx.pos_x, fx.pos_y }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr%s)\\\\t(%s,%s,\\\\fr0)\", fx.pos_x, fx.pos_y, sylchar.start_time, sylchar.start_time + 0.33*char.dur, Angle, sylchar.start_time + 0.33*char.dur, sylchar.start_time + 0.66*char.dur, -Angle, sylchar.start_time + 0.66*char.dur, sylchar.end_time )","jump = 30*ratio;\nAngle = 40*(-1)^char.i","Lua",false); table.insert(hilight_fx_library, Jump_Funny_IV_Char_II); table.insert(hilight_fx, "Jump Funny IV Char II")
	Jump_Gyre = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre, "hi-light[fx]: Jump Gyre","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format( \"\\\\org(%s,%s)\\\\t(80,%s,\\\\fry360)\", fx.pos_x, fx.pos_y, fx.dur )","jump = 20*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Gyre); table.insert(hilight_fx, "Jump Gyre")
	Jump_Gyre_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_Char_I, "hi-light[fx]: Jump Gyre Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format( \"\\\\org(%s,%s)\\\\t(80,%s,\\\\fry%s)\", fx.pos_x, fx.pos_y, fx.dur, 360*(-1)^(syl.i + char.i) )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_Char_I); table.insert(hilight_fx, "Jump Gyre Char I")
	Jump_Gyre_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_Char_II, "hi-light[fx]: Jump Gyre Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time }\n ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fry%s)\", fx.pos_x, fx.pos_y, sylchar.start_time + 80, sylchar.end_time, 360*(-1)^(syl.i + char.i) )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_Char_II); table.insert(hilight_fx, "Jump Gyre Char II")
	Jump_Gyre_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_Char_III, "hi-light[fx]: Jump Gyre Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i - char.i), fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format( \"\\\\org(%s,%s)\\\\t(80,%s,\\\\fry%s)\", fx.pos_x, fx.pos_y, fx.dur, 360*(-1)^(syl.i + char.i) )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_Char_III); table.insert(hilight_fx, "Jump Gyre Char III")
	Jump_Gyre_Char_IV = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_Char_IV, "hi-light[fx]: Jump Gyre Char IV","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i - char.i), fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time }\n ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fry%s)\", fx.pos_x, fx.pos_y, sylchar.start_time + 80, sylchar.end_time, 360*(-1)^(syl.i + char.i) )","jump = 25*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_Char_IV); table.insert(hilight_fx, "Jump Gyre Char IV")
	Jump_Gyre_frx = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_frx, "hi-light[fx]: Jump Gyre frx","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\frx360)\", fx.pos_x, fx.pos_y - 24*ratio, 0.25*fx.dur, fx.dur )","","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_frx); table.insert(hilight_fx, "Jump Gyre frx")
	Jump_Gyre_frx_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_frx_Char_I, "hi-light[fx]: Jump Gyre frx Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio, fx.pos_x, fx.pos_y }, nil, { sylchar.start_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\frx360)\", fx.pos_x, fx.pos_y - 24*ratio, sylchar.start_time + 0.25*char.dur, sylchar.end_time )","","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_frx_Char_I); table.insert(hilight_fx, "Jump Gyre frx Char I")
	Jump_Gyre_frx_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_frx_Char_II, "hi-light[fx]: Jump Gyre frx Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\frx360)\", fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), 0.25*fx.dur, fx.dur )","","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_frx_Char_II); table.insert(hilight_fx, "Jump Gyre frx Char II")
	Jump_Gyre_frx_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_frx_Char_III, "hi-light[fx]: Jump Gyre frx Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y }, nil, { sylchar.start_time, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\frx360)\", fx.pos_x, fx.pos_y - 24*ratio*(-1)^(syl.i + char.i), sylchar.start_time + 0.25*char.dur, sylchar.end_time )","","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_frx_Char_III); table.insert(hilight_fx, "Jump Gyre frx Char III")
	Jump_Gyre_fry_II = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_fry_II, "hi-light[fx]: Jump Gyre fry II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format(\"\\\\org(%s,%s)\\\\t(80,%s,\\\\fry%s)\\\\t(%s,%s,\\\\fry0)\", fx.pos_x, fx.pos_y, 0.5*fx.dur, Angle, 0.5*fx.dur, fx.dur)","jump = 25*ratio;\nAngle = 80*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_fry_II); table.insert(hilight_fx, "Jump Gyre fry II")
	Jump_Gyre_fry_II_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_fry_II_Char_I, "hi-light[fx]: Jump Gyre fry II Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format( \"\\\\org(%s,%s)\\\\t(80,%s,\\\\fry%s)\\\\t(%s,%s,\\\\fry0)\", fx.pos_x, fx.pos_y, 0.5*fx.dur, Angle, 0.5*fx.dur, fx.dur )","jump = 25*ratio;\nAngle = 75*(-1)^syl.i","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_fry_II_Char_I); table.insert(hilight_fx, "Jump Gyre fry II Char I")
	Jump_Gyre_fry_II_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Gyre_fry_II_Char_II, "hi-light[fx]: Jump Gyre fry II Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fry%s)\\\\t(%s,%s,\\\\fry0)\", fx.pos_x, fx.pos_y, sylchar.start_time + 80, sylchar.start_time + 0.5*char.dur, Angle, sylchar.start_time + 0.5*char.dur, sylchar.end_time )","jump = 25*ratio;\nAngle = 75*(-1)^char.i","Lua",false); table.insert(hilight_fx_library, Jump_Gyre_fry_II_Char_II); table.insert(hilight_fx, "Jump Gyre fry II Char II")
	Jump_Multi = table.duplicate(PfxM_Box); table.inbox(Jump_Multi, "hi-light[fx]: Jump Multi","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\", fx.pos_x - 10000, fx.pos_y ), tag.oscill( fx.dur, 70, \"\\\\frz( 0.12*(-1)^i )\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Multi); table.insert(hilight_fx, "Jump Multi")
	Jump_Multi_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Multi_Char_I, "hi-light[fx]: Jump Multi Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\", fx.pos_x - 10000, fx.pos_y ), tag.oscill( fx.dur, 70, \"\\\\frz( 0.12*(-1)^(syl.i + char.i + i) )\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Multi_Char_I); table.insert(hilight_fx, "Jump Multi Char I")
	Jump_Multi_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Multi_Char_II, "hi-light[fx]: Jump Multi Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)%s\\\\t(%s,%s,\\\\fr0)\", fx.pos_x - 10000, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, 80, \"\\\\frz( 0.12*(-1)^(syl.i + char.i + i) )\" ), sylchar.end_time, sylchar.end_time )","","Lua",false); table.insert(hilight_fx_library, Jump_Multi_Char_II); table.insert(hilight_fx, "Jump Multi Char II")
	Jump_Multi_4 = table.duplicate(PfxM_Box); table.inbox(Jump_Multi_4, "hi-light[fx]: Jump Multi 4","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","4","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + Dxy*(-1)^j, fx.pos_y + Dxy*(-1)^ceil( j/2 ), fx.pos_x, fx.pos_y } )","Dxy = 40;","Lua",false); table.insert(hilight_fx_library, Jump_Multi_4); table.insert(hilight_fx, "Jump Multi 4")
	Jump_Oscill = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill, "hi-light[fx]: Jump Oscill","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), tag.oscill( fx.dur, frame_dur, \"\\\\fscy( R( 0.75*l.scale_y, 1.25*l.scale_y ) )\" )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Oscill); table.insert(hilight_fx, "Jump Oscill")
	Jump_Oscill_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_Char_I, "hi-light[fx]: Jump Oscill Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 2.4*frame_dur, \"\\\\fscy( l.scale_y*(1 + 0.25*(-1)^(syl.i + char.i + i)) )\" ), format( \"\\\\t(%s,%s,\\\\fscy%s)\", sylchar.end_time, sylchar.end_time, l.scale_y )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_Char_I); table.insert(hilight_fx, "Jump Oscill Char I")
	Jump_Oscill_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_Char_II, "hi-light[fx]: Jump Oscill Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), tag.oscill( fx.dur, 2.4*frame_dur, \"\\\\fscy( l.scale_y*(1 + 0.25*(-1)^(syl.i + char.i + i)) )\" )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_Char_II); table.insert(hilight_fx, "Jump Oscill Char II")
	Jump_Oscill_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_Char_III, "hi-light[fx]: Jump Oscill Char III","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 2.4*frame_dur, \"\\\\fscy( l.scale_y*(1 + 0.25*(-1)^(syl.i + char.i + i)) )\" ), format( \"\\\\t(%s,%s,\\\\fscy%s)\", sylchar.end_time, sylchar.end_time, l.scale_y )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_Char_III); table.insert(hilight_fx, "Jump Oscill Char III")
	Jump_Oscill_fscxy = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_fscxy, "hi-light[fx]: Jump Oscill fscxy","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 - 30*ratio, fx.move_x1, fx.move_y1 }, { 0, 80, 80, fx.dur } ), tag.oscill( fx.dur, 80, \"\\\\fscx(R( 0.75*l.scale_x, 1.25*l.scale_x ))\\\\fscy(R( 0.75*l.scale_y, 1.25*l.scale_y ))\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_fscxy); table.insert(hilight_fx, "Jump Oscill fscxy")
	Jump_Oscill_fscxy_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_fscxy_Char_I, "hi-light[fx]: Jump Oscill fscxy Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 - 30*ratio, fx.move_x1, fx.move_y1 }, { 0, 80, 80, fx.dur } ), tag.oscill( fx.dur, 80, \"\\\\fscx(R( 0.75*l.scale_x, 1.25*l.scale_x ))\\\\fscy(R( 0.75*l.scale_y, 1.25*l.scale_y ))\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_fscxy_Char_I); table.insert(hilight_fx, "Jump Oscill fscxy Char I")
	Jump_Oscill_fscxy_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_fscxy_Char_II, "hi-light[fx]: Jump Oscill fscxy Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 - 30*ratio, fx.move_x1, fx.move_y1 }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 80, \"\\\\fscx(R( 0.75*l.scale_x, 1.25*l.scale_x ))\\\\fscy(R( 0.75*l.scale_y, 1.25*l.scale_y ))\" ), format( \"\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\", sylchar.end_time, sylchar.end_time, l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_fscxy_Char_II); table.insert(hilight_fx, "Jump Oscill fscxy Char II")
	Jump_Oscill_fscy = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_fscy, "hi-light[fx]: Jump Oscill fscy","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 - 30*ratio, fx.move_x1, fx.move_y1 }, { 0, 80, 80, fx.dur } ), tag.oscill( fx.dur, 80, \"\\\\fscy(R( 0.75*l.scale_y, 1.25*l.scale_y ))\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_fscy); table.insert(hilight_fx, "Jump Oscill fscy")
	Jump_Oscill_fscy_Char = table.duplicate(PfxM_Box); table.inbox(Jump_Oscill_fscy_Char, "hi-light[fx]: Jump Oscill fscy Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.move_x1, fx.move_y1, fx.move_x1, fx.move_y1 - 30*ratio, fx.move_x1, fx.move_y1 }, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), tag.oscill( { sylchar.start_time, sylchar.end_time }, 80, \"\\\\fscy( l.scale_y*(1 + 0.25*(-1)^i))\" ), format( \"\\\\t(%s,%s,\\\\fscy%s)\", sylchar.end_time, sylchar.end_time, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Jump_Oscill_fscy_Char); table.insert(hilight_fx, "Jump Oscill fscy Char")
	Jump_Shine = table.duplicate(PfxM_Box); table.inbox(Jump_Shine, "hi-light[fx]: Jump Shine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} ), format( \"\\\\shad0\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord3\\\\blur4\\\\t(80,%s,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\", fx.dur, text.color1, text.color3, l.outline )","jump = 20*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Shine); table.insert(hilight_fx, "Jump Shine")
	Jump_Shine_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_Char_I, "hi-light[fx]: Jump Shine Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\t(%s,%s,\\\\shad0\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord3\\\\blur4)\\\\t(%s,%s,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time, text.color1, text.color3, l.outline )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Shine_Char_I); table.insert(hilight_fx, "Jump Shine Char I")
	Jump_Shine_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_Char_II, "hi-light[fx]: Jump Shine Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur } ), format( \"\\\\shad0\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord3\\\\blur4\\\\t(80,%s,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\", fx.dur, text.color1, text.color3, l.outline )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Shine_Char_II); table.insert(hilight_fx, "Jump Shine Char II")
	Jump_Shine_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_Char_III, "hi-light[fx]: Jump Shine Char III","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump*(-1)^(syl.i + char.i), fx.pos_x, fx.pos_y}, { sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time } ), format( \"\\\\t(%s,%s,\\\\shad0\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord3\\\\blur4)\\\\t(%s,%s,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 80, sylchar.end_time, text.color1, text.color3, l.outline )","jump = 24*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Shine_Char_III); table.insert(hilight_fx, "Jump Shine Char III")
	Jump_Shine_II = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II, "hi-light[fx]: Jump Shine II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fscx%s\\\\fscy%s\\\\frz0.1)\\\\t(120,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, fx.dur, l.scale_x, l.scale_y ), tag.only( j == 2, \"\\\\1a&HFF&\\\\shad0\\\\3c&HFFFFFF&\\\\blur3\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II); table.insert(hilight_fx, "Jump Shine II")
	Jump_Shine_II_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_Char_I, "hi-light[fx]: Jump Shine II Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fr0.12)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, sylchar.start_time, sylchar.start_time + 80, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, sylchar.start_time + 120, sylchar.end_time, l.scale_x, l.scale_y ), tag.only( j == 2, format( \"\\\\1a&HFF&\\\\shad0\\\\t(%s,%s,\\\\3c&HFFFFFF&\\\\blur3)\\\\t(%s,%s,\\\\blur0\\\\3a&HFF&)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 120, sylchar.end_time ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_Char_I); table.insert(hilight_fx, "Jump Shine II Char I")
	Jump_Shine_II_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_Char_II, "hi-light[fx]: Jump Shine II Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fscx%s\\\\fscy%s\\\\fr%s)\\\\t(120,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, 0.12*(-1)^(syl.i + char.i), fx.dur, l.scale_x, l.scale_y ), tag.only( j == 2, \"\\\\1a&HFF&\\\\shad0\\\\3c&HFFFFFF&\\\\blur3\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_Char_II); table.insert(hilight_fx, "Jump Shine II Char II")
	Jump_Shine_II_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_Char_III, "hi-light[fx]: Jump Shine II Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fr%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, sylchar.start_time, sylchar.start_time + 80, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, 0.12*(-1)^(syl.i + char.i), sylchar.start_time + 120, sylchar.end_time, l.scale_x, l.scale_y ), tag.only( j == 2, format( \"\\\\1a&HFF&\\\\shad0\\\\t(%s,%s,\\\\3c&HFFFFFF&\\\\blur3)\\\\t(%s,%s,\\\\blur0\\\\3a&HFF&)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 120, sylchar.end_time ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_Char_III); table.insert(hilight_fx, "Jump Shine II Char III")
	Jump_Shine_II_an1 = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_an1, "hi-light[fx]: Jump Shine II an1","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","1","1","fx.pos_l","fx.pos_b","","2","","syl.text","format( \"\\\\t(0,80,\\\\fscx%s\\\\fscy%s)\\\\t(120,%s,\\\\fscx%s\\\\fscy%s)\", (1.2 + 0.4*(j - 1))*l.scale_x, (1.2 + 0.4*(j - 1))*l.scale_y, fx.dur, l.scale_x, l.scale_y ), tag.only( j == 2, \"\\\\1a&HFF&\\\\shad0\\\\3c&HFFFFFF&\\\\blur3\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_an1); table.insert(hilight_fx, "Jump Shine II an1")
	Jump_Shine_II_an_1_Char_I = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_an_1_Char_I, "hi-light[fx]: Jump Shine II an 1 Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","1","1","fx.pos_l","fx.pos_b","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fr0.12)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, sylchar.start_time, sylchar.start_time + 80, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, sylchar.start_time + 120, sylchar.end_time, l.scale_x, l.scale_y ), tag.only( j == 2, format( \"\\\\1a&HFF&\\\\shad0\\\\t(%s,%s,\\\\3c&HFFFFFF&\\\\blur3)\\\\t(%s,%s,\\\\blur0\\\\3a&HFF&)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 120, sylchar.end_time ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_an_1_Char_I); table.insert(hilight_fx, "Jump Shine II an 1 Char I")
	Jump_Shine_II_an_1_Char_II = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_an_1_Char_II, "hi-light[fx]: Jump Shine II an 1 Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","1","1","fx.pos_l","fx.pos_b","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fscx%s\\\\fscy%s\\\\fr%s)\\\\t(120,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, 0.12*(-1)^(syl.i + char.i), fx.dur, l.scale_x, l.scale_y ), tag.only( j == 2, \"\\\\1a&HFF&\\\\shad0\\\\3c&HFFFFFF&\\\\blur3\" )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_an_1_Char_II); table.insert(hilight_fx, "Jump Shine II an 1 Char II")
	Jump_Shine_II_an_1_Char_III = table.duplicate(PfxM_Box); table.inbox(Jump_Shine_II_an_1_Char_III, "hi-light[fx]: Jump Shine II an 1 Char III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","1","1","fx.pos_l","fx.pos_b","","2","","char.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fr%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\frz0)\", fx.pos_x - 10000, fx.pos_y, sylchar.start_time, sylchar.start_time + 80, (1.1 + 0.4*(j - 1))*l.scale_x, (1.1 + 0.4*(j - 1))*l.scale_y, 0.12*(-1)^(syl.i + char.i), sylchar.start_time + 120, sylchar.end_time, l.scale_x, l.scale_y ), tag.only( j == 2, format( \"\\\\1a&HFF&\\\\shad0\\\\t(%s,%s,\\\\3c&HFFFFFF&\\\\blur3)\\\\t(%s,%s,\\\\blur0\\\\3a&HFF&)\", sylchar.start_time, sylchar.start_time + 80, sylchar.start_time + 120, sylchar.end_time ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Shine_II_an_1_Char_III); table.insert(hilight_fx, "Jump Shine II an 1 Char III")
	Jump_Simple = table.duplicate(PfxM_Box); table.inbox(Jump_Simple, "hi-light[fx]: Jump Simple","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( {fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - jump, fx.pos_x, fx.pos_y}, {0, 80, 80, fx.dur} )","jump = 20*ratio","Lua",false); table.insert(hilight_fx_library, Jump_Simple); table.insert(hilight_fx, "Jump Simple")
	Jump_Syl_Perspective_I = table.duplicate(PfxM_Box); table.inbox(Jump_Syl_Perspective_I, "hi-light[fx]: Jump Syl Perspective I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x - 32*(1 - 2*module1)*ratio, fx.pos_y - 26*ratio, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\t(0,80,\\\\fscx%s\\\\fscy%s)\\\\t(80,%s,\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, fx.dur, l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Jump_Syl_Perspective_I); table.insert(hilight_fx, "Jump Syl Perspective I")
	Jump_Syl_Perspective_II = table.duplicate(PfxM_Box); table.inbox(Jump_Syl_Perspective_II, "hi-light[fx]: Jump Syl Perspective II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x - 32*(1 - 2*module1)*ratio, fx.pos_y + 26*ratio, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\t(0,80,\\\\fscx%s\\\\fscy%s)\\\\t(80,%s,\\\\fscx%s\\\\fscy%s)\", 1.35*l.scale_x, 1.35*l.scale_y, fx.dur, l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Jump_Syl_Perspective_II); table.insert(hilight_fx, "Jump Syl Perspective II")
	Jump_Syl_Perspective_Multi_I = table.duplicate(PfxM_Box); table.inbox(Jump_Syl_Perspective_Multi_I, "hi-light[fx]: Jump Syl Perspective Multi I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x - 32*(1 - 2*module1)*module*ratio, fx.pos_y - 26*module*ratio, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\bord0\\\\shad0\\\\blur1.8\\\\t(0,80,\\\\fscx%s\\\\fscy%s)\\\\t(80,%s,\\\\fscx%s\\\\fscy%s)\\\\1a%s\", (1 + 0.35*module)*l.scale_x, (1 + 0.35*module)*l.scale_y, fx.dur, l.scale_x, l.scale_y, alpha.module( 20, 160 ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Syl_Perspective_Multi_I); table.insert(hilight_fx, "Jump Syl Perspective Multi I")
	Jump_Syl_Perspective_Multi_II = table.duplicate(PfxM_Box); table.inbox(Jump_Syl_Perspective_Multi_II, "hi-light[fx]: Jump Syl Perspective Multi II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x - 32*(1 - 2*module1)*module*ratio, fx.pos_y + 26*module*ratio, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), format( \"\\\\bord0\\\\shad0\\\\blur1.8\\\\t(0,80,\\\\fscx%s\\\\fscy%s)\\\\t(80,%s,\\\\fscx%s\\\\fscy%s)\\\\1a%s\", (1 + 0.35*module)*l.scale_x, (1 + 0.35*module)*l.scale_y, fx.dur, l.scale_x, l.scale_y, alpha.module( 20, 160 ) )","","Lua",false); table.insert(hilight_fx_library, Jump_Syl_Perspective_Multi_II); table.insert(hilight_fx, "Jump Syl Perspective Multi II")
	Keane_Again_and_Again = table.duplicate(PfxM_Box); table.inbox(Keane_Again_and_Again, "hi-light[fx]: Keane Again and Again","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fr40)\\\\t(80,%s,\\\\fr0)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur )","","Lua",false); table.insert(hilight_fx_library, Keane_Again_and_Again); table.insert(hilight_fx, "Keane Again and Again")
	Keane_Better_Than_This = table.duplicate(PfxM_Box); table.inbox(Keane_Better_Than_This, "hi-light[fx]: Keane Better Than This","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fr-40)\\\\t(80,%s,\\\\fr0)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur )","","Lua",false); table.insert(hilight_fx_library, Keane_Better_Than_This); table.insert(hilight_fx, "Keane Better Than This")
	Keane_Black_Burning_Heart = table.duplicate(PfxM_Box); table.inbox(Keane_Black_Burning_Heart, "hi-light[fx]: Keane Black Burning Heart","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\", fx.move_l1, fx.move_b1 - l.descent, 40*(-1)^(syl.i + ii), fx.dur )","","Lua",false); table.insert(hilight_fx_library, Keane_Black_Burning_Heart); table.insert(hilight_fx, "Keane Black Burning Heart")
	Keane_Love_Is_The_End = table.duplicate(PfxM_Box); table.inbox(Keane_Love_Is_The_End, "hi-light[fx]: Keane Love Is The End","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fscx%s\\\\fscy%s\\\\fr%s\\\\frx80)\\\\t(80,%s,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\frx0)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent, 1.25*l.scale_x, 1.25*l.scale_y, 40*(-1)^(syl.i + ii), fx.dur, l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Keane_Love_Is_The_End); table.insert(hilight_fx, "Keane Love Is The End")
	Keane_Lovers_Are_Losing = table.duplicate(PfxM_Box); table.inbox(Keane_Lovers_Are_Losing, "hi-light[fx]: Keane Lovers Are Losing","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(0,80,\\\\fscy%s\\\\fr%s\\\\fry40\\\\frx80)\\\\t(80,%s,\\\\fscy%s\\\\fr0\\\\fry0\\\\frx0)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent - tag.only( ceil( (syl.i + ii)/2 )%2 == 1, syl.height - 2*l.descent ), 1.6*l.scale_y, 40*(-1)^(syl.i + ii), fx.dur, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Keane_Lovers_Are_Losing); table.insert(hilight_fx, "Keane Lovers Are Losing")
	Keane_Perfect_Symmetry = table.duplicate(PfxM_Box); table.inbox(Keane_Perfect_Symmetry, "hi-light[fx]: Keane Perfect Symmetry","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_l1, fx.move_y1, l.scale_x ) )","","Lua",false); table.insert(hilight_fx_library, Keane_Perfect_Symmetry); table.insert(hilight_fx, "Keane Perfect Symmetry")
	Keane_Playing_Along = table.duplicate(PfxM_Box); table.inbox(Keane_Playing_Along, "hi-light[fx]: Keane Playing Along","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_r1, fx.move_y1, l.scale_x ) )","","Lua",false); table.insert(hilight_fx_library, Keane_Playing_Along); table.insert(hilight_fx, "Keane Playing Along")
	Keane_Pretend_That_You_Are_Alone = table.duplicate(PfxM_Box); table.inbox(Keane_Pretend_That_You_Are_Alone, "hi-light[fx]: Keane Pretend That You Are Alone","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) )","","Lua",false); table.insert(hilight_fx_library, Keane_Pretend_That_You_Are_Alone); table.insert(hilight_fx, "Keane Pretend That You Are Alone")
	Keane_Spiralling = table.duplicate(PfxM_Box); table.inbox(Keane_Spiralling, "hi-light[fx]: Keane Spiralling","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) )","","Lua",false); table.insert(hilight_fx_library, Keane_Spiralling); table.insert(hilight_fx, "Keane Spiralling")
	Keane_You_Do_not_See_Me = table.duplicate(PfxM_Box); table.inbox(Keane_You_Do_not_See_Me, "hi-light[fx]: Keane You Do not See Me","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_r1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_l1, fx.move_y1, l.scale_x ) ) )","","Lua",false); table.insert(hilight_fx_library, Keane_You_Do_not_See_Me); table.insert(hilight_fx, "Keane You Do not See Me")
	Keane_You_Have_not_Told_Me_Anything = table.duplicate(PfxM_Box); table.inbox(Keane_You_Have_not_Told_Me_Anything, "hi-light[fx]: Keane You Have not Told Me Anything","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) ) )","","Lua",false); table.insert(hilight_fx_library, Keane_You_Have_not_Told_Me_Anything); table.insert(hilight_fx, "Keane You Have not Told Me Anything")
	Keane_Bonus_Track = table.duplicate(PfxM_Box); table.inbox(Keane_Bonus_Track, "hi-light[fx]: Keane Bonus Track","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only2( { syl.i%4 == 1, syl.i%4 == 2, syl.i%4 == 3, syl.i%4 == 0 },\ntag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_l1, fx.move_y1, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_r1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, l.scale_y ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(\\\\fscx%s)\", fx.move_r1, fx.move_y1, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(\\\\fscx0)\", fx.move_l1, fx.move_y1, l.scale_x ) ), tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(\\\\fscy%s)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s)\\\\fscy%s\\\\t(\\\\fscy0)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, l.scale_y ) ) )","","Lua",false); table.insert(hilight_fx_library, Keane_Bonus_Track); table.insert(hilight_fx, "Keane Bonus Track")
	Modify_Tags_Deformed_I = table.duplicate(PfxM_Box); table.inbox(Modify_Tags_Deformed_I, "hi-light[fx]: Modify Tags Deformed I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\t(0,syl.dur / 2,\\\\frxyRs( 5, 65, 5 )\\\\frRs( 5, 25 )\\\\faxyRcs( 0.2, 0.5 )\\\\fscxyirRc( 1.1, 1.5 ))\\\\t(syl.dur / 2, syl.dur,\\\\frxyz0\\\\faxy0\\\\fscxyr1)\"","","Lua",false); table.insert(hilight_fx_library, Modify_Tags_Deformed_I); table.insert(hilight_fx, "Modify Tags Deformed I")
	Modify_Tags_Deformed_II_Oscill = table.duplicate(PfxM_Box); table.inbox(Modify_Tags_Deformed_II_Oscill, "hi-light[fx]: Modify Tags Deformed II Oscill","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, 2 * frame_dur, \"\\\\frxyRs( 5, 45, 5 )\\\\frRs( 5, 25 )\\\\faxyRcs( 0.05, 0.25 )\\\\fscxyirRc( 1.1, 1.5 )\" )","","Lua",false); table.insert(hilight_fx_library, Modify_Tags_Deformed_II_Oscill); table.insert(hilight_fx, "Modify Tags Deformed II Oscill")
	Modify_Tags_Deformed_II_Rmove_Oscill = table.duplicate(PfxM_Box); table.inbox(Modify_Tags_Deformed_II_Rmove_Oscill, "hi-light[fx]: Modify Tags Deformed II Rmove Oscill","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 20r ), tag.oscill( fx.dur, 2 * frame_dur, \"\\\\frxyoRs( 5, 45, 5 )\\\\frRs( 5, 25 )\\\\faxyRcs( 0.05, 0.25 )\\\\fscxyirRc( 1.1, 1.5 )\" )","","Lua",false); table.insert(hilight_fx_library, Modify_Tags_Deformed_II_Rmove_Oscill); table.insert(hilight_fx, "Modify Tags Deformed II Rmove Oscill")
	Morphism_Syl_I = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_I, "hi-light[fx]: Morphism Syl I","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","mi_shape = shape.displace( shape.ratio( \"m 0 30 b 25 0 75 0 100 30 \", { syl.width } ), l.descent, syl.height/2 - l.descent );\ntxt1 = text.do_shape( nil, mi_shape );\ntxt2 = shape.redraw( text.to_shape( ), 2 );\ntbl = shape.morphism( syl.dur/(2*frame_dur), txt2, txt1 );\ntbl = table.cyclic( tbl )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_I); table.insert(hilight_fx, "Morphism Syl I")
	Morphism_Syl_II = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_II, "hi-light[fx]: Morphism Syl II","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","Px = 3*ratio;\nmi_filter = function( x, y )\n	x = x + R( -Px, Px )\n	y = y + R( -Px, Px )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 5 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 5 );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, shape.ratio( txt2, 1.4 ) ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_II); table.insert(hilight_fx, "Morphism Syl II")
	Morphism_Syl_III = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_III, "hi-light[fx]: Morphism Syl III","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","shape.Rmove( 10*ratio ), \"\\\\fscx100\\\\fscy100\"","Px = 3*ratio;\nmi_filter = function( x, y )\n	x = x + R( -Px, Px )\n	y = y + R( -Px, Px )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 5 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 5 );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, shape.ratio( txt2, 1.4 ) ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_III); table.insert(hilight_fx, "Morphism Syl III")
	Morphism_Syl_IV = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_IV, "hi-light[fx]: Morphism Syl IV","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","Px = 6*ratio;\nmi_filter = function( x, y )\n	x = x + R( -Px, Px )\n	--y = y + R( -Px, Px )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 5 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 5 );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, shape.ratio( txt2, 1.4 ) ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_IV); table.insert(hilight_fx, "Morphism Syl IV")
	Morphism_Syl_V = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_V, "hi-light[fx]: Morphism Syl V","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","Px = 8*ratio;\nmi_filter = function( x, y )\n	--x = x + R( -Px, Px )\n	y = y + R( -Px, Px )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 4 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 4 );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, shape.ratio( txt2, 1.4 ) ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_V); table.insert(hilight_fx, "Morphism Syl V")
	Morphism_Syl_VI = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_VI, "hi-light[fx]: Morphism Syl VI","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, 60, table.cyclic( tbl ) )","format( \"\\\\t(0,%s,\\\\fscx130\\\\fscy130)\\\\t(%s,%s,\\\\fscx100\\\\fscy100)\", fx.dur/2, fx.dur/2, fx.dur )","Px = 4*ratio;\nmi_filter = function( x, y )\n	x = x + R( -Px, Px )\n	y = y + R( -Px, Px )\n	return x, y\nend;\ntbl = {\n	[1] = shape.filter2( text.to_shape( ), mi_filter, 5 );\n	[2] = shape.filter2( text.to_shape( ), mi_filter, 5 );\n	[3] = shape.filter2( text.to_shape( ), mi_filter, 5 );\n	[4] = shape.filter2( text.to_shape( ), mi_filter, 5 );\n}","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_VI); table.insert(hilight_fx, "Morphism Syl VI")
	Morphism_Syl_VII = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_VII, "hi-light[fx]: Morphism Syl VII","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","format( \"\\\\bord3\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", l.outline, text.color1, text.color3 )","Px = 15*ratio;\nratio_size = 1.25;\nmi_filter = function( x, y )\n	local mod_y = (y - miny )/h_shape\n	x = x + ((-1)^syl.i)*Px*sin( 3*pi*mod_y )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 3 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 3 );\ntxt2 = shape.displace( shape.ratio( txt2, ratio_size ), Px*ratio_size, 0 );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, txt2 ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_VII); table.insert(hilight_fx, "Morphism Syl VII")
	Morphism_Syl_VIII = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_VIII, "hi-light[fx]: Morphism Syl VIII","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","format( \"\\\\bord3\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\", l.outline, text.color1, text.color3 )","Px = 15*ratio;\nratio_size = 1.25;\nmi_filter = function( x, y )\n	local mod_x = (x - minx )/w_shape\n	y = y + ((-1)^syl.i)*Px*sin( (3*syl.height/syl.width)*pi*mod_x )\n	return x, y\nend;\ntxt1 = shape.filter2( text.to_shape( ), nil, 3 );\ntxt2 = shape.filter2( text.to_shape( ), mi_filter, 3 );\ntxt2 = shape.displace( shape.ratio( txt2, ratio_size ), 0, Px*ratio_size );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, txt2 ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_VIII); table.insert(hilight_fx, "Morphism Syl VIII")
	Morphism_Syl_IX = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_IX, "hi-light[fx]: Morphism Syl IX","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","Px = 10*ratio;\nAng = R( 0, 180, 5 );\nRatio_size = 1.25;\ntxt1 = shape.filter2( text.to_shape( ), nil, 3 );\ntxt2 = shape.filter3( text.to_shape( syl.text ), 3,\nfunction( x, y )\n	local A1 = math.angle( x, y )\n	local D1 = math.distance( x, y )\n	x = math.polar( A1 + Ang, D1, \"x\" )\n	y = math.polar( A1 + Ang, D1, \"y\" )\n	return x, y\nend,\nfunction( x, y )\n	local mod_y = (y - miny )/h_shape\n	x = x - Px*sin( 2.25*pi*mod_y )\n	return x, y\nend,\nfunction( x, y )\n	local A1 = math.angle( x, y )\n	local D1 = math.distance( x, y )\n	x = math.polar( A1 - Ang, D1, \"x\" )\n	y = math.polar( A1 - Ang, D1, \"y\" )\n	return x, y\nend);\ntxt2 = shape.ratio( txt2, Ratio_size );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, txt2 ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_IX); table.insert(hilight_fx, "Morphism Syl IX")
	Morphism_Syl_X = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_X, "hi-light[fx]: Morphism Syl X","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/4","l.start_time + syl.end_time + frame_dur/4","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","shape.animated2( fx.dur, fx.dur/#tbl, tbl )","","Px = 15*ratio;\nRatio_size = 1;\ntxt1 = shape.filter2( text.to_shape( ), nil, 2 );\ntxt2 = shape.filter2( text.to_shape( syl.text ),\nfunction( x, y )\n	local A1 = math.angle( c_shape, m_shape, x, y )\n	x = x + math.polar( A1, Px, \"x\" )\n	y = y + math.polar( A1, Px, \"y\" )\n	return x, y\nend, 2);\ntxt2 = shape.displace( shape.ratio( txt2, Ratio_size ), Px*Ratio_size, Px*Ratio_size );\ntbl = table.cyclic( shape.morphism( syl.dur/(2*frame_dur), txt1, txt2 ) )","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_X); table.insert(hilight_fx, "Morphism Syl X")
	Morphism_Syl_XI = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XI, "hi-light[fx]: Morphism Syl XI","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/6","l.start_time + syl.end_time + frame_dur/6","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","WaterH( )","","WaterH = function( )\n	local Px1 = 6*ratio\n	local trim = 4\n	local text_shape = { }\n	for i = 1, 4 do\n		text_shape[i] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px1*(1 + sin( 2.5*pi*Mx + pi*(i - 1)/2 )) y = y*1.25 return x, y end )\n	end\n	return shape.animated2( syl.dur + 0.33*frame_dur, 1.5*frame_dur, text_shape )\nend","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XI); table.insert(hilight_fx, "Morphism Syl XI")
	Morphism_Syl_XII = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XII, "hi-light[fx]: Morphism Syl XII","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time - frame_dur/6","l.start_time + syl.end_time + frame_dur/6","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","WaterV( )","","WaterV = function( )\n	local Px1 = 8*ratio\n	local trim = 4\n	local part = 5*syl.width/syl.height\n	local text_shape = { }\n	for i = 1, 4 do\n		text_shape[i] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) y = 1.25*y + Px1*(1 + sin( part*pi*My + pi*(i - 1)/2 )) return x, y end )\n	end\n	return shape.animated2( syl.dur + 0.33*frame_dur, 1.5*frame_dur, text_shape )\nend","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XII); table.insert(hilight_fx, "Morphism Syl XII")
	Morphism_Syl_XIII = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XIII, "hi-light[fx]: Morphism Syl XIII","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","Syl","\"\\\\t(\\\\fscx200\\\\fscy200\\\\fscx100\\\\fscy100)\"","Syl = shape.filter3( text.to_shape( ), 2,\n	function( x, y )\n		x = Cx + math.polar( Ac + 30*sin(pi*Mp), Dc, \"x\" )\n		y = Cy + math.polar( Ac + 30*sin(pi*Mp), Dc, \"y\" )\n		return x, y\n	end\n)","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XIII); table.insert(hilight_fx, "Morphism Syl XIII")
	Morphism_Syl_XIV = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XIV, "hi-light[fx]: Morphism Syl XIV","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","Syl","\"\\\\t(\\\\fscx200\\\\fscy200\\\\fscx100\\\\fscy100)\"","Dxy = 2*ratio;\nSyl = shape.filter3( text.to_shape( ), 2,\n	function( x, y )\n		y = y + Dxy*sin( 5*pi*My )\n		return x, y\n	end,\n	function( x, y )\n		x = x + Dxy*sin( 5*pi*Mx )\n		return x, y\n	end\n)","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XIV); table.insert(hilight_fx, "Morphism Syl XIV")
	Morphism_Syl_XV = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XV, "hi-light[fx]: Morphism Syl XV","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","Syl","\"\\\\t(\\\\fscx200\\\\fscy200\\\\fscx100\\\\fscy100)\"","Dxy = 10*ratio;\nSyl = shape.filter3( text.to_shape( ), 2,\n	function( x, y )\n		if x <= Cx then\n			x = x - Dxy*sin( pi*Mx )\n		else\n			x = x + Dxy*sin( pi*Mx )\n		end\n		return x, y\n	end\n)","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XV); table.insert(hilight_fx, "Morphism Syl XV")
	Morphism_Syl_XVI = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XVI, "hi-light[fx]: Morphism Syl XVI","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","Syl","\"\\\\t(\\\\fscx200\\\\fscy200\\\\fscx100\\\\fscy100)\"","Dxy = 10*ratio;\nSyl = shape.filter3( text.to_shape( ), 2,\n	function( x, y )\n		if y <= Cy then\n			y = y - Dxy*sin( pi*My )\n		else\n			y = y + Dxy*sin( pi*My )\n		end\n		return x, y\n	end\n)","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XVI); table.insert(hilight_fx, "Morphism Syl XVI")
	Morphism_Syl_XVII = table.duplicate(PfxM_Box); table.inbox(Morphism_Syl_XVII, "hi-light[fx]: Morphism Syl XVII","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","Syl","\"\\\\t(\\\\fscx200\\\\fscy200\\\\fscx100\\\\fscy100)\"","Dxy = 8*ratio;\nSyl = shape.filter3( text.to_shape( ), 2,\n	function( x, y )\n		if y <= Cy then\n			y = y - Dxy*sin( pi*My )\n		else\n			y = y + Dxy*sin( pi*My )\n		end\n		return x, y\n	end,\n	function( x, y )\n		if x <= Cx then\n			x = x - Dxy*sin( pi*Mx )\n		else\n			x = x + Dxy*sin( pi*Mx )\n		end\n		return x, y\n	end\n)","Lua",false); table.insert(hilight_fx_library, Morphism_Syl_XVII); table.insert(hilight_fx, "Morphism Syl XVII")
	Move_Double_Syl_prehilight_Vertical = table.duplicate(PfxM_Box); table.inbox(Move_Double_Syl_prehilight_Vertical, "hi-light[fx]: Move Double Syl prehilight Vertical","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y + Dy*(-1)^j, fx.pos_y","","2","","syl.text","\\bord0\\shad0\\1c&HFFFFFF&\\blur1.6\\t(\\blur3.2)\\fad(100,0)","delay = 320;\nDy = 0.6*l.height","Automation Auto-4",false); table.insert(hilight_fx_library, Move_Double_Syl_prehilight_Vertical); table.insert(hilight_fx, "Move Double Syl prehilight Vertical")
	Move_Double_Syl_prehilight_Horizontal = table.duplicate(PfxM_Box); table.inbox(Move_Double_Syl_prehilight_Horizontal, "hi-light[fx]: Move Double Syl prehilight Horizontal","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x + Dx*(-1)^j, fx.pos_x","fx.pos_y","","2","","syl.text","\\bord0\\shad0\\1c&HFFFFFF&\\blur1.6\\t(\\blur3.2)\\fad(100,0)","delay = 320;\nDx = 0.6*l.height","Automation Auto-4",false); table.insert(hilight_fx_library, Move_Double_Syl_prehilight_Horizontal); table.insert(hilight_fx, "Move Double Syl prehilight Horizontal")
	Move_Four_Syl_prehilight_I = table.duplicate(PfxM_Box); table.inbox(Move_Four_Syl_prehilight_I, "hi-light[fx]: Move Four Syl prehilight I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x + (j%2)*Dx*(-1)^ceil(j/2), fx.pos_x","fx.pos_y + ((j + 1)%2)*Dy*(-1)^ceil(j/2), fx.pos_y","","4","","syl.text","\\bord0\\shad0\\1c&HFFFFFF&\\blur1.6\\t(\\blur3.2)\\fad(100,0)","delay = 320;\nDx = 0.6*l.height;\nDy = 0.6*l.height","Automation Auto-4",false); table.insert(hilight_fx_library, Move_Four_Syl_prehilight_I); table.insert(hilight_fx, "Move Four Syl prehilight I")
	Move_Four_Syl_prehilight_II = table.duplicate(PfxM_Box); table.inbox(Move_Four_Syl_prehilight_II, "hi-light[fx]: Move Four Syl prehilight II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x +Dx*(-1)^ceil(j/2), fx.pos_x","fx.pos_y + Dy*(-1)^j, fx.pos_y","","4","","syl.text","\\bord0\\shad0\\1c&HFFFFFF&\\blur1.6\\t(\\blur3.2)\\1a40\\fad(100,0)","delay = 320;\nDx = 0.6*l.height;\nDy = 0.6*l.height","Automation Auto-4",false); table.insert(hilight_fx_library, Move_Four_Syl_prehilight_II); table.insert(hilight_fx, "Move Four Syl prehilight II")
	Oscill_Multi_Gyre = table.duplicate(PfxM_Box); table.inbox(Oscill_Multi_Gyre, "hi-light[fx]: Oscill Multi Gyre","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, frame_dur, \"\\\\frx( R( -80, 80 ) )\\\\fry( R( -80, 80 ) )\\\\fr( R( -80, 80 ) )\" )","","Lua",false); table.insert(hilight_fx_library, Oscill_Multi_Gyre); table.insert(hilight_fx, "Oscill Multi Gyre")
	Oscill_Multi_Size = table.duplicate(PfxM_Box); table.inbox(Oscill_Multi_Size, "hi-light[fx]: Oscill Multi Size","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, frame_dur, \"\\\\fscx( R( 0.2*l.scale_x, 1.8*l.scale_x ) )\\\\fscy( R( 0.2*l.scale_y, 1.8*l.scale_y ) )\" )","","Lua",false); table.insert(hilight_fx_library, Oscill_Multi_Size); table.insert(hilight_fx, "Oscill Multi Size")
	Oscill_Multi_Size_Gyre = table.duplicate(PfxM_Box); table.inbox(Oscill_Multi_Size_Gyre, "hi-light[fx]: Oscill Multi Size Gyre","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","tag.oscill( fx.dur, frame_dur, \"\\\\fscx( R( 0.2*l.scale_x, 1.8*l.scale_x ) )\\\\fscy( R( 0.2*l.scale_y, 1.8*l.scale_y ) )\\\\frx( R( -80, 80 ) )\\\\fry( R( -80, 80 ) )\\\\fr( R( -80, 80 ) )\" )","","Lua",false); table.insert(hilight_fx_library, Oscill_Multi_Size_Gyre); table.insert(hilight_fx, "Oscill Multi Size Gyre")
	Rmove_Ghost_I = table.duplicate(PfxM_Box); table.inbox(Rmove_Ghost_I, "hi-light[fx]: Rmove Ghost I","Syl",true,false,"#FBED17","#D53604","#FFFFFF","0","0","0","l.start_time + syl.start_time + 120m","l.start_time + syl.end_time + 120m","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","shape.Rmove( 12r, 12r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j > 1, \"\\\\bs0\\\\1cSC1>SC3\\\\blur1.2\\\\1a140>220\\\\fscxyr( 1 + 0.4m )\\\\fad(0,120)\", \"\\\\blur2\" )","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Rmove_Ghost_I); table.insert(hilight_fx, "Rmove Ghost I")
	Rmove_Ghost_II = table.duplicate(PfxM_Box); table.inbox(Rmove_Ghost_II, "hi-light[fx]: Rmove Ghost II","Syl",true,false,"#FBED17","#D53604","#FFFFFF","0","0","0","l.start_time + syl.start_time + 120m","l.start_time + syl.end_time + 120m","","","","","syl.center","syl.middle","","","5","maxj - j + 1","fx.pos_x","fx.pos_y","","12","","syl.text","shape.Rmove( 12r, 12r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j > 1, \"\\\\bs0\\\\1cSC1>SC3\\\\blur1.2\\\\1a140>220\\\\fscxyr( 1 + 0.4m )\\\\fad(0,120)\", \"\\\\blur2\" )","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Rmove_Ghost_II); table.insert(hilight_fx, "Rmove Ghost II")
	Rmove_Char_Syl_I_tc = table.duplicate(PfxM_Box); table.inbox(Rmove_Char_Syl_I_tc, "hi-light[fx]: Rmove Char Syl I tc","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 10r, 10r, 0, fx.dur, 1, { 2 * frame_dur } ), \"\\\\tc(0,char.dur/2,\\\\fscyr1.65\\\\faxyRcs( 0.08, 0.12 ))( 0, char.dur/2 )\"","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Rmove_Char_Syl_I_tc); table.insert(hilight_fx, "Rmove Char Syl I tc")
	Rmove_Char_Syl_II_Extra_Bord = table.duplicate(PfxM_Box); table.inbox(Rmove_Char_Syl_II_Extra_Bord, "hi-light[fx]: Rmove Char Syl II Extra Bord","Char",true,false,"#CCD9FA","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y, fx.pos_y + tag.only( j == 1, 0.5 * l.descent )","","2","","char.text","shape.Rmove( 10r, 10r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j == 1, \"\\\\shad0\\\\bord3r\\\\1a255\\\\3cSC1\\\\blur2.2\\\\tc(0,char.dur/2,\\\\fscyr2.4)( 0, char.dur/2 )\", \"\\\\tc(0,char.dur/2,\\\\fscyr1.65\\\\blur3)( 0, char.dur/2 )\" )","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Rmove_Char_Syl_II_Extra_Bord); table.insert(hilight_fx, "Rmove Char Syl II Extra Bord")
	Rmove_Extra_Bord_I = table.duplicate(PfxM_Box); table.inbox(Rmove_Extra_Bord_I, "hi-light[fx]: Rmove Extra Bord I","Syl",true,false,"#4DBB1B","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - tag.only( j == 1, ( my_ratio - 1 ) * syl.width / 4 )","fx.pos_y + tag.only( j == 1, ( my_ratio - 1 ) * l.descent / 4 )","","2","","syl.text","shape.Rmove( 10r, 10r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j == 1, \"\\\\fscxyr( my_ratio )\\\\blur4\\\\1a255\\\\3a86\\\\3cSC1\" .. tag.oscill( fx.dur, 80, \"\\\\frxyzoRs( 25 )\" ) )","random_mode = \"syl\";\nmy_ratio = 1.46","Lua",false); table.insert(hilight_fx_library, Rmove_Extra_Bord_I); table.insert(hilight_fx, "Rmove Extra Bord I")
	Rmove_Extra_Bord_II_Multi = table.duplicate(PfxM_Box); table.inbox(Rmove_Extra_Bord_II_Multi, "hi-light[fx]: Rmove Extra Bord II Multi","Syl",true,false,"#0665FA","#FBED17","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - tag.only( j ~= maxj, ( my_ratio + 0.6m - 1 ) * syl.width / 4 )","fx.pos_y + tag.only( j ~= maxj, ( my_ratio + 0.6m - 1 ) * l.descent / 4 )","","6","","syl.text","shape.Rmove( 10r, 10r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j ~= maxj, \"\\\\fscxyr( my_ratio + 0.6m )\\\\blur5\\\\1a255\\\\3a160>220\\\\3cSC1>SC3\" .. tag.oscill( fx.dur, 80, \"\\\\froRs( 30 )\" ) )","random_mode = \"syl\";\nmy_ratio = 1.15","Lua",false); table.insert(hilight_fx_library, Rmove_Extra_Bord_II_Multi); table.insert(hilight_fx, "Rmove Extra Bord II Multi")
	Rmove_Exrta_Bord_II_Multi_Zoom = table.duplicate(PfxM_Box); table.inbox(Rmove_Exrta_Bord_II_Multi_Zoom, "hi-light[fx]: Rmove Exrta Bord II Multi Zoom","Syl",true,false,"#C507FA","#FBED17","#FFFFFF","0","0","0","l.start_time + syl.start_time + 120m","l.start_time + syl.end_time + 120m","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - tag.only( j ~= maxj, ( my_ratio + 0.6m - 1 ) * syl.width / 4 )","fx.pos_y + tag.only( j ~= maxj, ( my_ratio + 0.6m - 1 ) * l.descent / 4 )","","6","","syl.text","shape.Rmove( 10r, 10r, 0, fx.dur, 1, { 2 * frame_dur } ), tag.only( j ~= maxj, \"\\\\fscxyr( my_ratio + 0.6m )\\\\blur5\\\\1a255\\\\3a150>220\\\\3cSC1>SC3\\\\fad(0,120)\", \"\\\\fscxyrt80d1.5\\\\blur3\" )","random_mode = \"syl\";\nmy_ratio = 1.15","Lua",false); table.insert(hilight_fx_library, Rmove_Exrta_Bord_II_Multi_Zoom); table.insert(hilight_fx, "Rmove Exrta Bord II Multi Zoom")
	Rail_Wars_preHL = table.duplicate(PfxM_Box); table.inbox(Rail_Wars_preHL, "hi-light[fx]: Rail Wars preHL","Syl",true,false,"#18A4F8","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - 420","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + math.polar( Angle, Radius, \"x\" ), fx.pos_x","fx.pos_y + math.polar( Angle, Radius, \"y\" ), fx.pos_y","","1","","syl.text","format( \"\\\\1c&HFDF1E2&\\\\3c&HF8A418&\\\\blur3\\\\fscx%s\\\\fscy%s\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s)\\\\fad(300,0)\", 0.5*l.scale_x, 0.5*l.scale_y, text.color1, text.color3, l.scale_x, l.scale_y )","Angle = math.angle( syl.center, syl.middle, l.center, l.middle + 300*ratio );\nRadius = 60","Lua",false); table.insert(hilight_fx_library, Rail_Wars_preHL); table.insert(hilight_fx, "Rail Wars preHL")
	Shake_Dancing_I = table.duplicate(PfxM_Box); table.inbox(Shake_Dancing_I, "hi-light[fx]: Shake Dancing I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y, fx.pos_y + 0.4*l.height","","1","","syl.text","shape.Rmove( 15*ratio ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, 80, \"\\\\fr( R( 10, 30 )*(-1)^R( 2 ) )\" )","","Lua",false); table.insert(hilight_fx_library, Shake_Dancing_I); table.insert(hilight_fx, "Shake Dancing I")
	Shake_Dancing_I_Char = table.duplicate(PfxM_Box); table.inbox(Shake_Dancing_I_Char, "hi-light[fx]: Shake Dancing I Char","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 18*ratio, nil, sylchar.start_time, sylchar.end_time ), format( \"\\\\org(%s,%s)%s\\\\t(%s,%s,\\\\1c%s)\\\\t(%s,%s,\\\\1c%s\\\\fr0)\", fx.pos_x, fx.pos_y, tag.oscill( { sylchar.start_time, sylchar.end_time }, 80, \"\\\\fr( R( 10, 30 )*(-1)^R( 2 ) )\" ), sylchar.start_time, sylchar.start_time, random.color( ), sylchar.end_time, sylchar.end_time, text.color1 )","","Lua",false); table.insert(hilight_fx_library, Shake_Dancing_I_Char); table.insert(hilight_fx, "Shake Dancing I Char")
	Shake_Dancing_II = table.duplicate(PfxM_Box); table.inbox(Shake_Dancing_II, "hi-light[fx]: Shake Dancing II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y, fx.pos_y - 0.4*l.height","","1","","syl.text","shape.Rmove( 15*ratio ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, 80, \"\\\\fr( R( 10, 30 )*(-1)^R( 2 ) )\" )","","Lua",false); table.insert(hilight_fx_library, Shake_Dancing_II); table.insert(hilight_fx, "Shake Dancing II")
	Shake_Dancing_III_Multi = table.duplicate(PfxM_Box); table.inbox(Shake_Dancing_III_Multi, "hi-light[fx]: Shake Dancing III Multi","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y, fx.pos_y + 0.4*l.height","","1","","syl.text","shape.Rmove( 15*ratio ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, 80, \"\\\\frx( R( 10, 30 )*(-1)^R( 2 ) )\\\\fry( R( 10, 30 )*(-1)^R( 2 ) )\\\\fr( R( 10, 30 )*(-1)^R( 2 ) )\\\\fax( Rd( -0.2, 0.2 ) )\\\\fay( Rd( -0.2, 0.2 ) )\\\\fscx( R( l.scale_x, 1.42*l.scale_x ) )\\\\fscy( R( l.scale_y, 1.42*l.scale_y ) )\" )","","Lua",false); table.insert(hilight_fx_library, Shake_Dancing_III_Multi); table.insert(hilight_fx, "Shake Dancing III Multi")
	Shake_Dancing_IV_Multi_2 = table.duplicate(PfxM_Box); table.inbox(Shake_Dancing_IV_Multi_2, "hi-light[fx]: Shake Dancing IV Multi 2","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 15*ratio ), format( \"\\\\org(%s,%s)\", fx.pos_x, fx.pos_y ), tag.oscill( fx.dur, 80, \"\\\\frx( R( 10, 30 )*(-1)^R( 2 ) )\\\\fry( R( 10, 30 )*(-1)^R( 2 ) )\\\\fr( R( 10, 30 )*(-1)^R( 2 ) )\\\\fax( Rd( -0.2, 0.2 ) )\\\\fay( Rd( -0.2, 0.2 ) )\\\\fscx( R( l.scale_x, 1.42*l.scale_x ) )\\\\fscy( R( l.scale_y, 1.42*l.scale_y ) )\" ), tag.oscill( fx.dur, {{ 60, 1 }}, \"\\\\3c&HFFFFFF&\\\\blur4\\\\bord4\", format( \"\\\\3c%s\\\\blur0\\\\bord%s\", text.color3, l.outline ) )","","Lua",false); table.insert(hilight_fx_library, Shake_Dancing_IV_Multi_2); table.insert(hilight_fx, "Shake Dancing IV Multi 2")
	Shake_Zoom_I_fr = table.duplicate(PfxM_Box); table.inbox(Shake_Zoom_I_fr, "hi-light[fx]: Shake Zoom I fr","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 7r, 7r, 0, fx.dur, 1, { frame_dur } ), \"\\\\fscxyrt80d1.6\\\\frot80d( 26*(-1)^syl.i )\"","","Lua",false); table.insert(hilight_fx_library, Shake_Zoom_I_fr); table.insert(hilight_fx, "Shake Zoom I fr")
	Shake_Zoom_II_faxy = table.duplicate(PfxM_Box); table.inbox(Shake_Zoom_II_faxy, "hi-light[fx]: Shake Zoom II faxy","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 7r, 7r, 0, fx.dur, 1, { frame_dur } ), \"\\\\fscxyrt80d1.6\\\\faxyt80dRcs( 0.1, 0.2 )\"","","Lua",false); table.insert(hilight_fx_library, Shake_Zoom_II_faxy); table.insert(hilight_fx, "Shake Zoom II faxy")
	Shake_Zoom_III_Crazy = table.duplicate(PfxM_Box); table.inbox(Shake_Zoom_III_Crazy, "hi-light[fx]: Shake Zoom III Crazy","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Rmove( 7r, 7r, 0, fx.dur, 1, { frame_dur } ), \"\\\\fscxyrt80d1.6\\\\faxyt80dRcs( 0.08, 0.12 )\", tag.oscill( fx.dur, frame_dur, \"\\\\froRds( 10, 20 )\" )","","Lua",false); table.insert(hilight_fx_library, Shake_Zoom_III_Crazy); table.insert(hilight_fx, "Shake Zoom III Crazy")
	Shine_Replay_Multi = table.duplicate(PfxM_Box); table.inbox(Shine_Replay_Multi, "hi-light[fx]: Shine Replay Multi","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + tag.only( J == 1, Dxy*module*(-1)^j ), fx.pos_x","fx.pos_y + tag.only( J == 2, Dxy*module*(-1)^j ), fx.pos_y","","14","","syl.text","replay( 2 ), format( \"\\\\bord0\\\\1c&HFFFFFF&\\\\1a%s\\\\blur%s\\\\fad(0,%s)\", alpha.interpolate( 186, 240), 1 + 1*module, 0.4*fx.dur ), tag.only( J == 1, tag.oscill( fx.dur, frame_dur, \"\\\\fscx(R(0.75*l.scale_x,1.25*l.scale_x))\" ), tag.oscill( fx.dur, frame_dur, \"\\\\fscy(R(0.75*l.scale_y,1.25*l.scale_y))\" ) )","delay = 100;\nDxy = 32*ratio","Lua",false); table.insert(hilight_fx_library, Shine_Replay_Multi); table.insert(hilight_fx, "Shine Replay Multi")
	Shine_Spand_I = table.duplicate(PfxM_Box); table.inbox(Shine_Spand_I, "hi-light[fx]: Shine Spand I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shines( )","shines = function( )\n	maxloop( 32 )\n	local angle = 0.7\n	local orgpx = ratio * 10000 * (-1)^ceil( 2 * j/maxj )\n	local orgpy = ratio * 10000\n	local valor = (0.25 * maxj - 0.25 * maxj * ceil( 4 * j/maxj ) + j - 1)/(maxj - 1)\n	return format( \"\\\\bord0\\\\shad0\\\\blur2.6\\\\org(%s,%s)\\\\fr%s\\\\1a%s\\\\fscx%s\\\\fscy%s\\\\t(\\\\fr0\\\\fscx%s\\\\fscy%s)\",\n	math.round( syl.center + orgpx, 2 ), math.round( syl.middle - orgpy, 2 ), math.round( angle * valor * (-1)^ceil( 4 * j/maxj ), 2 ),\n	alpha.module( \"&HAE&\", \"&HD0&\", valor ), math.round( l.scale_x*(1 - 2.6 * valor), 2 ), math.round( l.scale_y*(1 - 2.6 * valor), 2 ),\n	l.scale_x, l.scale_y )\nend","Lua",false); table.insert(hilight_fx_library, Shine_Spand_I); table.insert(hilight_fx, "Shine Spand I")
	Shine_Zoom_Extra_I = table.duplicate(PfxM_Box); table.inbox(Shine_Zoom_Extra_I, "hi-light[fx]: Shine Zoom Extra I","Syl",true,false,"#FFFFFF","#008DFF","#000000","45","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, syl.text, shape.size( shape.circle, 40*ratio ) )","tag.only( j == 1, format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\t(0,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\", fx.dur/4, 1.45*l.scale_x, 1.45*l.scale_y, fx.dur/4, fx.dur, text.color1, text.color3, l.scale_x, l.scale_y, delay ), format( \"\\\\bord0\\\\blur14\\\\t(0,%s,\\\\fscx165\\\\fscy165)\\\\t(%s,%s,\\\\fscx70\\\\fscy70)\", fx.dur/4, fx.dur/4, fx.dur ) )","","Lua",false); table.insert(hilight_fx_library, Shine_Zoom_Extra_I); table.insert(hilight_fx, "Shine Zoom Extra I")
	Shine_Zoom_Extra_II = table.duplicate(PfxM_Box); table.inbox(Shine_Zoom_Extra_II, "hi-light[fx]: Shine Zoom Extra II","Syl",true,false,"#FFFFFF","#008DFF","#000000","45","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, syl.text, shape.size( shape.shine1t, 86*ratio ) )","tag.only( j == 1, format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\t(0,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\", fx.dur/4, 1.45*l.scale_x, 1.45*l.scale_y, fx.dur/4, fx.dur, text.color1, text.color3, l.scale_x, l.scale_y, delay ), format( \"\\\\bord0\\\\blur6\\\\t(0,%s,\\\\fscx165\\\\fscy165)\\\\t(%s,%s,\\\\fscx70\\\\fscy70)\\\\t(\\\\fr%s)\", fx.dur/4, fx.dur/4, fx.dur, fx.dur*0.25*(-1)^R( 2 ) ) )","","Lua",false); table.insert(hilight_fx_library, Shine_Zoom_Extra_II); table.insert(hilight_fx, "Shine Zoom Extra II")
	Shine_Zoom_Extra_III_Multi = table.duplicate(PfxM_Box); table.inbox(Shine_Zoom_Extra_III_Multi, "hi-light[fx]: Shine Zoom Extra III Multi","Syl",true,false,"#FFFFFF","#008DFF","#000000","45","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","R( 2, 4 )","","tag.only( j == 1, syl.text, shape.size( shape.shine1t, 82*ratio ) )","tag.only( j == 1, format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\t(0,%s,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\", fx.dur/4, 1.45*l.scale_x, 1.45*l.scale_y, fx.dur/4, fx.dur, text.color1, text.color3, l.scale_x, l.scale_y, delay ), format( \"\\\\bord0\\\\blur4.5\\\\t(0,%s,\\\\fscx150\\\\fscy150)\\\\t(%s,%s,\\\\fscx70\\\\fscy70)\\\\fr%s\\\\t(\\\\fr%s)\", fx.dur/4, fx.dur/4, fx.dur, var.loop.Ai, var.loop.Ai + fx.dur*0.25*(-1)^R( 2 ) ) )","Ai = R( 360 )","Lua",false); table.insert(hilight_fx_library, Shine_Zoom_Extra_III_Multi); table.insert(hilight_fx, "Shine Zoom Extra III Multi")
	Shineline_Clip_Move_Left_Right = table.duplicate(PfxM_Box); table.inbox(Shineline_Clip_Move_Left_Right, "hi-light[fx]: Shineline Clip Move Left Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\shad0\\\\blur4\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\ybord%s%s\\\\t(%s)\", 8*ratio, tag.clip( fx.pos_l, fx.pos_t - l.fontsize, 2*ratio, 3*l.fontsize ), tag.clip( fx.pos_r, fx.pos_t - l.fontsize, 2*ratio, 3*l.fontsize ) )","","Lua",false); table.insert(hilight_fx_library, Shineline_Clip_Move_Left_Right); table.insert(hilight_fx, "Shineline Clip Move Left Right")
	Simple_Shine = table.duplicate(PfxM_Box); table.inbox(Simple_Shine, "hi-light[fx]: Simple Shine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.3*l.scale_x, 1.3*l.scale_y","syl.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1)\\\\fad(0,%s)\", text.color1, text.color3, l.scale_x, l.scale_y, delay )","delay = 300","Lua",false); table.insert(hilight_fx_library, Simple_Shine); table.insert(hilight_fx, "Simple Shine")
	Simple_Shine_Alternate_Angle = table.duplicate(PfxM_Box); table.inbox(Simple_Shine_Alternate_Angle, "hi-light[fx]: Simple Shine Alternate Angle","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.3*l.scale_x, 1.3*l.scale_y","syl.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\fr%s\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1\\\\fr0)\\\\fad(0,%s)\", angle*(-1)^syl.i, text.color1, text.color3, l.scale_x, l.scale_y, delay )","delay = 300;\nangle = 15","Lua",false); table.insert(hilight_fx_library, Simple_Shine_Alternate_Angle); table.insert(hilight_fx, "Simple Shine Alternate Angle")
	Simple_Shine_Ascent_Descent_I = table.duplicate(PfxM_Box); table.inbox(Simple_Shine_Ascent_Descent_I, "hi-light[fx]: Simple Shine Ascent Descent I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.3*l.scale_x, 1.3*l.scale_y","syl.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\org(%s,%s)\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1\\\\fr0)\\\\fad(0,%s)\", fx.move_x1 - 10000, fx.move_y1, angle*(-1)^syl.i, fx.dur, text.color1, text.color3, l.scale_x, l.scale_y, delay )","delay = 300;\nangle = 0.12","Lua",false); table.insert(hilight_fx_library, Simple_Shine_Ascent_Descent_I); table.insert(hilight_fx, "Simple Shine Ascent Descent I")
	Simple_Shine_Ascent_Descent_II = table.duplicate(PfxM_Box); table.inbox(Simple_Shine_Ascent_Descent_II, "hi-light[fx]: Simple Shine Ascent Descent II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.3*l.scale_x, 1.3*l.scale_y","syl.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\shad0\\\\blur3\\\\org(%s,%s)\\\\fr%s\\\\t(\\\\1c%s\\\\3c%s\\\\fscx%s\\\\fscy%s\\\\blur1\\\\fr0)\\\\fad(0,%s)\", fx.move_x1 - 10000, fx.move_y1, angle*(-1)^syl.i, text.color1, text.color3, l.scale_x, l.scale_y, delay )","delay = 300;\nangle = 0.12","Lua",false); table.insert(hilight_fx_library, Simple_Shine_Ascent_Descent_II); table.insert(hilight_fx, "Simple Shine Ascent Descent II")
	Slider_Syl_Cut = table.duplicate(PfxM_Box); table.inbox(Slider_Syl_Cut, "hi-light[fx]: Slider Syl Cut","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + math.polar( theta + 180*(j - 1), Dxy, \"x\" )","fx.pos_y, fx.pos_y + math.polar( theta + 180*(j - 1), Dxy, \"y\" )","","2","","syl.text","format( \"\\\\clip(%s)\\\\fad(0,300)\", slider( syl.width + 4*Dxy, theta + 180*(j - 1) ) )","Dxy = 12*ratio;\ntheta = R( 0, 75, 5 )*(-1)^R( 2 );\nslider = function( val, angle )\n	local Shape = format( \"m 0 %d l %d %d l %d 0 l 0 0 m 0 %d l %d %d \", val/2, val, val/2, val, val, val, val )\n	return shape.centerpos( shape.rotate( Shape, angle ), syl.center, syl.middle )\nend","Lua",false); table.insert(hilight_fx_library, Slider_Syl_Cut); table.insert(hilight_fx, "Slider Syl Cut")
	Slider_Syl_Cut_Lmove2 = table.duplicate(PfxM_Box); table.inbox(Slider_Syl_Cut_Lmove2, "hi-light[fx]: Slider Syl Cut Lmove2","Syl",true,false,"#FF0000","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + math.polar( theta + 180*(j - 1), Dxy, \"x\" ), fx.pos_y + math.polar( theta + 180*(j - 1), Dxy, \"y\" ), fx.pos_x - math.polar( theta + 180*(j - 1), Dxy, \"x\" ), fx.pos_y - math.polar( theta + 180*(j - 1), Dxy, \"y\" ), fx.pos_x, fx.pos_y } ), format( \"\\\\clip(%s)\\\\t(\\\\1c%s)\\\\fad(0,300)\", slider( syl.width + 4*Dxy, theta + 180*(j - 1) ), shape.color1 )","Dxy = 12*ratio;\ntheta = R( 0, 75, 5 )*(-1)^R( 2 );\nslider = function( val, angle )\n	local Shape = format( \"m 0 %d l %d %d l %d 0 l 0 0 m 0 %d l %d %d \", val/2, val, val/2, val, val, val, val )\n	return shape.centerpos( shape.rotate( Shape, angle ), syl.center, syl.middle )\nend","Lua",false); table.insert(hilight_fx_library, Slider_Syl_Cut_Lmove2); table.insert(hilight_fx, "Slider Syl Cut Lmove2")
	Slider_Syl_Cut_Multi_Clip = table.duplicate(PfxM_Box); table.inbox(Slider_Syl_Cut_Multi_Clip, "hi-light[fx]: Slider Syl Cut Multi Clip","Syl",true,false,"#1666FF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","8","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x + math.polar( theta + 180*(j - 1), Dxy, \"x\" ), fx.pos_y + math.polar( theta + 180*(j - 1), Dxy, \"y\" ), fx.pos_x - math.polar( theta + 180*(j - 1), Dxy, \"x\" ), fx.pos_y - math.polar( theta + 180*(j - 1), Dxy, \"y\" ), fx.pos_x, fx.pos_y } ), format( \"\\\\clip(%s)\\\\t(\\\\1c%s)\\\\fad(0,300)\", slider( syl.width + 4*Dxy, theta ), shape.color1 )","Dxy = 12*ratio;\ntheta = R( 0, 75, 5 )*(-1)^R( 2 );\nslider = function( val, angle )\n	local Shape = format( \"m 0 0 l %s 0 m 0 %s l %s %s m 0 %s l 0 %s l %s %s l %s %s \", val, syl.height, val, syl.height,\n	syl.height*(j - 1)/maxj, syl.height*j/maxj, val, syl.height*j/maxj, val, syl.height*(j - 1)/maxj )\n	return shape.centerpos( shape.rotate( Shape, angle ), syl.center, syl.middle )\nend","Lua",false); table.insert(hilight_fx_library, Slider_Syl_Cut_Multi_Clip); table.insert(hilight_fx, "Slider Syl Cut Multi Clip")
	Spark_Shine_I = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_I, "hi-light[fx]: Spark Shine I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur2\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(0,%s)\", -10000*ratio, fx.pos_y, alpha.module( alpha1, alpha2 ), math.round( angle*module, 3 ), fx.dur, delay )","angle = 0.24;\ndelay = 300;\nalpha1 = 140;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_I); table.insert(hilight_fx, "Spark Shine I")
	Spark_Shine_II_Left = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_II_Left, "hi-light[fx]: Spark Shine II Left","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur2\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(0,%s)\", fx.pos_x, -10000*ratio, alpha.module( alpha1, alpha2 ), math.round( -angle*module, 3 ), fx.dur, delay )","angle = 0.24;\ndelay = 300;\nalpha1 = 150;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_II_Left); table.insert(hilight_fx, "Spark Shine II Left")
	Spark_Shine_III_Left_Right = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_III_Left_Right, "hi-light[fx]: Spark Shine III Left Right","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - 50","l.start_time + syl.end_time + 50","","","","0","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","10","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur2\\\\fr%s\\\\org(%s,%s)\\\\1a%s\\\\t(\\\\fr%s)\\\\fad(50,50)\", math.round( -angle*module, 3 ), fx.pos_x, -10000*ratio, alpha.module( alpha1, alpha2 ), math.round( angle*module, 3 ) )","angle = 0.3;\nalpha1 = 150;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_III_Left_Right); table.insert(hilight_fx, "Spark Shine III Left Right")
	Spark_Shine_IV_Right = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_IV_Right, "hi-light[fx]: Spark Shine IV Right","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur2\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(0,%s)\", fx.pos_x, -10000*ratio, alpha.module( alpha1, alpha2 ), math.round( angle*module, 3 ), fx.dur, delay )","angle = 0.24;\ndelay = 300;\nalpha1 = 150;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_IV_Right); table.insert(hilight_fx, "Spark Shine IV Right")
	Spark_Shine_V_Top_Bottom = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_V_Top_Bottom, "hi-light[fx]: Spark Shine V Top Bottom","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s\\\\blur1.5\\\\t(80,%s,\\\\fscx%s\\\\fscy%s\\\\blur3)\\\\be1\\\\fad(0,%s)\", -10000*ratio, fx.pos_y, alpha.module( alpha1, alpha2 ), math.round( angle*(2*module - 1), 3 ), fx.dur, 0.6*l.scale_x, 1.3*l.scale_y, delay )","angle = 0.1;\ndelay = 300;\nalpha1 = 150;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_V_Top_Bottom); table.insert(hilight_fx, "Spark Shine V Top Bottom")
	Spark_Shine_VI_Horizontal = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_VI_Horizontal, "hi-light[fx]: Spark Shine VI Horizontal","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","1.2*l.scale_x, 1.2*l.scale_y","syl.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s\\\\blur1.5\\\\t(80,%s,\\\\fscy%s\\\\blur2)\\\\be1\\\\fad(100,100)\", fx.pos_x, -10000*ratio, alpha.module( alpha1, alpha2 ), math.round( angle*(2*module - 1), 3 ), fx.dur, l.scale_y )","angle = 0.12;\ndelay = 100;\nalpha1 = 150;\nalpha2 = 230","Lua",false); table.insert(hilight_fx_library, Spark_Shine_VI_Horizontal); table.insert(hilight_fx, "Spark Shine VI Horizontal")
	Spark_Shine_VII_Dance = table.duplicate(PfxM_Box); table.inbox(Spark_Shine_VII_Dance, "hi-light[fx]: Spark Shine VII Dance","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + delay1*module","l.start_time + syl.end_time + delay2 - delay1*module","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","l.scale_x, 1.2*l.scale_y","syl.text","format( \"\\\\shad0\\\\bord0\\\\1c&HFFFFFF&\\\\blur2\\\\1a%s\\\\org(%s,%s)%s\\\\fad(0,%s)\", alpha.module( alpha1, alpha2 ), fx.pos_x, fx.pos_y - 10000*ratio, tag.oscill( fx.dur, 120, \"\\\\fr-0.04\", \"\\\\fr0.04\" ), delay1 )","delay1 = 200;\ndelay2 = 500;\nalpha1 = 150;\nalpha2 = 240","Lua",false); table.insert(hilight_fx_library, Spark_Shine_VII_Dance); table.insert(hilight_fx, "Spark Shine VII Dance")
	Sutil_Tremor_Ghost_I = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Ghost_I, "hi-light[fx]: Sutil Tremor Ghost I","Syl",true,false,"#FFFFFF","#4A90E2","#E149E2","0","0","0","retime( \"syl\", delay * module, delay * module )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y - 8rm","","9","","syl.text","shape.Rmove( 7r ), tag.only( j ~= 1, \"\\\\bord0\\\\shad0\\\\1cSC1>SC3\\\\blur2>4\\\\alpha192\\\\fad(0,150)\" )","random_mode = \"syl\";\ndelay = 200","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Ghost_I); table.insert(hilight_fx, "Sutil Tremor Ghost I")
	Sutil_Tremor_Ghost_II_Char = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Ghost_II_Char, "hi-light[fx]: Sutil Tremor Ghost II Char","Char",true,false,"#FFFFFF","#80D028","#5F5860","0","0","0","retime( \"syl\", delay * module, delay * module )","l.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y - 8rm","","9","","char.text","shape.Rmove( 7r ), tag.only( j ~= 1, \"\\\\bord0\\\\shad0\\\\1cSC1>SC3\\\\blur2>4\\\\alpha192\\\\fad(0,150)\" )","random_mode = \"char\";\ndelay = 200","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Ghost_II_Char); table.insert(hilight_fx, "Sutil Tremor Ghost II Char")
	Sutil_Tremor_Halo_Border_I = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Halo_Border_I, "hi-light[fx]: Sutil Tremor Halo Border I","Syl",true,false,"#F47AF5","#474444","#000000","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - tag.only( j > 1, 0.125 * syl.width )","fx.pos_y + tag.only( j > 1, 0.125 * l.descent )","","2","","syl.text","shape.Rmove( 7r ), tag.only( j > 1, \"\\\\shad0\\\\1a255\\\\3cSC1\\\\3a86\\\\fscxyr1.5\\\\bord4\\\\blur2\" )","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Halo_Border_I); table.insert(hilight_fx, "Sutil Tremor Halo Border I")
	Sutil_Tremor_Halo_Border_II_Char = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Halo_Border_II_Char, "hi-light[fx]: Sutil Tremor Halo Border II Char","Char",true,false,"#F47AF5","#474444","#000000","0","0","0","retime( \"syl\" )","l.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x - tag.only( j > 1, 0.125 * char.width )","fx.pos_y + tag.only( j > 1, 0.125 * l.descent )","","2","","char.text","shape.Rmove( 7r ), tag.only( j > 1, \"\\\\shad0\\\\1a255\\\\3cSC1\\\\3a86\\\\fscxyr1.5\\\\bord4\\\\blur2\" )","random_mode = \"char\"","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Halo_Border_II_Char); table.insert(hilight_fx, "Sutil Tremor Halo Border II Char")
	Sutil_Tremor_Shape_Mark_I = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Shape_Mark_I, "hi-light[fx]: Sutil Tremor Shape Mark I","Syl",true,false,"#F47AF5","#474444","#000000","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","tag.only( j > 1, shp, syl.text )","shape.Rmove( 7r ), tag.only( j > 1, \"\\\\shad0\\\\1a255\\\\3cSC1\\\\3a86\\\\bord4\\\\blur2\", \"\\\\blur3\" )","random_mode = \"syl\";\nshp = shape.rectangle;\nSize = 0.75 * math.distance( syl.width, syl.height );\nshp = shape.displace( shape.size( shp, Size ), (syl.width - Size) / 2, l.descent - (syl.height - Size) / 2 )","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Shape_Mark_I); table.insert(hilight_fx, "Sutil Tremor Shape Mark I")
	Sutil_Tremor_Shape_Mark_II_Char = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Shape_Mark_II_Char, "hi-light[fx]: Sutil Tremor Shape Mark II Char","Char",false,false,"#F47AF5","#474444","#000000","0","0","0","retime( \"syl\" )","l.end_time","","","","","char.center","char.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","tag.only( j > 1, shp, char.text )","shape.Rmove( 7r ), tag.only( j > 1, \"\\\\shad0\\\\1a255\\\\3cSC1\\\\3a86\\\\bord4\\\\blur2\" )","random_mode = \"char\";\nfxgroup = ( char.text ~= \" \" );\nshp = shape.rectangle;\nSize = 0.75 * math.distance( char.width, char.height );\nshp = shape.displace( shape.size( shp, Size ), (char.width - Size) / 2, l.descent - (char.height - Size) / 2 )","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Shape_Mark_II_Char); table.insert(hilight_fx, "Sutil Tremor Shape Mark II Char")
	Sutil_Tremor_Shape_Rotate = table.duplicate(PfxM_Box); table.inbox(Sutil_Tremor_Shape_Rotate, "hi-light[fx]: Sutil Tremor Shape Rotate","Syl",true,false,"#F47AF5","#474444","#000000","0","0","0","retime( \"syl\" )","l.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","tag.only( j > 1, shp, syl.text )","shape.Rmove( 7r ), tag.only( j > 1, \"\\\\shad0\\\\1a255\\\\3cSC1\\\\3a86\\\\bord5\\\\blur2\\\\t(\\\\fro( 0.28 * fx.dur * (-1) ^ R( 2 ) ))\" )","random_mode = \"syl\";\nshp = \"m 35 31 b 0 36 0 36 25 61 b 20 95 20 95 50 79 b 81 95 81 95 75 61 b 100 36 100 36 65 31 b 50 0 50 0 35 31 \";\nSize = 1.05 * math.distance( syl.width, syl.height );\nshp = shape.displace( shape.size( shp, Size ), (syl.width - Size) / 2, l.descent - (syl.height - Size) / 2 )","Lua",false); table.insert(hilight_fx_library, Sutil_Tremor_Shape_Rotate); table.insert(hilight_fx, "Sutil Tremor Shape Rotate")
	Syl_Deformed_I = table.duplicate(PfxM_Box); table.inbox(Syl_Deformed_I, "hi-light[fx]: Syl Deformed I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","tag.oscill( fx.dur, 2*frame_dur, \"\\\\faxRc( -0.12, 0.12 )\\\\fayRc( -0.12, 0.12 )\\\\frxR( -8, 8 )\\\\fryR( -8, 8 )\\\\frzR( -8, 8 )\" ), format( \"\\\\t(\\\\fscx%s\\\\fscy%s)\", l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Syl_Deformed_I); table.insert(hilight_fx, "Syl Deformed I")
	Syl_Deformed_II = table.duplicate(PfxM_Box); table.inbox(Syl_Deformed_II, "hi-light[fx]: Syl Deformed II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","shape.Rmove( 10*ratio, 10*ratio, 0, fx.dur, 1, { 2.6*frame_dur } ), tag.oscill( fx.dur, 2*frame_dur, \"\\\\faxRc( -0.15, 0.15 )\\\\fayRc( -0.15, 0.15 )\" ), format( \"\\\\t(\\\\fscx%s\\\\fscy%s)\", l.scale_x, l.scale_y )","","Lua",false); table.insert(hilight_fx_library, Syl_Deformed_II); table.insert(hilight_fx, "Syl Deformed II")
	Syl_Zoom_fry = table.duplicate(PfxM_Box); table.inbox(Syl_Zoom_fry, "hi-light[fx]: Syl Zoom fry","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\t(0,60,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\fry360)\", 1.2*l.scale_x, 1.2*l.scale_y, fx.dur - 120, fx.dur, l.scale_x, l.scale_y )",""); table.insert(hilight_fx_library, Syl_Zoom_fry); table.insert(hilight_fx, "Syl Zoom fry")
	tags_functions_Demo_I = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_I, "hi-light[fx]: tags functions Demo I","Syl",true,false,"#E2EAFD","#3F3C3C","#AC0CC2","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\4cSC4\\\\4a160\\\\blur2\\\\fscxyrt80d1.6\\\\o42faxyRcs( 0.03, 0.08 )\\\\o80xyshadRs( 14r )\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_I); table.insert(hilight_fx, "tags functions Demo I")
	tags_functions_Demo_I_A = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_I_A, "hi-light[fx]: tags functions Demo I A","Syl",true,false,"#E2EAFD","#3F3C3C","#AC0CC2","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, \"\\\\4cSC4\", \"\\\\4cR( )\" ), \"\\\\4a160\\\\blur2\\\\fscxyrt80d1.6\\\\o42faxyRcs( 0.03, 0.08 )\\\\o80xyshadRs( 16r )\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_I_A); table.insert(hilight_fx, "tags functions Demo I A")
	tags_functions_Demo_I_B = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_I_B, "hi-light[fx]: tags functions Demo I B","Syl",true,false,"#E2EAFD","#3F3C3C","#AC0CC2","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, \"\\\\4cSC4\", \"\\\\4cR( )\\\\1a255\\\\3a255\" ), \"\\\\4a160\\\\blur2\\\\fscxyrt80d1.6\\\\o42faxyRcs( 0.03, 0.08 )\\\\o80xyshadRs( 16r )\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_I_B); table.insert(hilight_fx, "tags functions Demo I B")
	tags_functions_Demo_II = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_II, "hi-light[fx]: tags functions Demo II","Syl",true,false,"#E2EAFD","#3F3C3C","#AC0CC2","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x - 10000r, fx.pos_y )\\\\t(0,frame_dur,\\\\fscyr1.6\\\\fr0.056)\\\\t(frame_dur,fx.dur-2*frame_dur,\\\\fscxr1.25\\\\fr-0.046\\\\3cR( ))\\\\t(fx.dur-2*frame_dur,fx.dur,\\\\fscxyr1\\\\fr0\\\\3cTC3)\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_II); table.insert(hilight_fx, "tags functions Demo II")
	tags_functions_Demo_II_A = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_II_A, "hi-light[fx]: tags functions Demo II A","Syl",true,false,"#E2EAFD","#3F3C3C","#0852BB","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x - 10000r, fx.pos_y )\\\\t(0,frame_dur,\\\\fscyr1.6\\\\fr0.056)\\\\t(frame_dur,fx.dur-2*frame_dur,\\\\fscxr1.25\\\\fr-0.046\\\\3cR( ))\\\\t(fx.dur-2*frame_dur,fx.dur,\\\\fscxyr1\\\\fr0\\\\3cTC3)\", \"\\\\4cSC4\\\\4a150\\\\blur3\\\\o120xyshadRds( 16r )\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_II_A); table.insert(hilight_fx, "tags functions Demo II A")
	tags_functions_Demo_III = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_III, "hi-light[fx]: tags functions Demo III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y - 16r, fx.pos_x, fx.pos_y }, { 0, 80, 80, fx.dur } ), \"\\\\fscxyrt80d1.4\\\\org( fx.pos_x, fx.pos_b )\\\\t(0,0.25*fx.dur,\\\\fr-20)\\\\t(0.25*fx.dur,0.75*fx.dur,\\\\fr20)\\\\t(0.75*fx.dur,fx.dur,\\\\fr0)\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_III); table.insert(hilight_fx, "tags functions Demo III")
	tags_functions_Demo_IV_A = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_IV_A, "hi-light[fx]: tags functions Demo IV A","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x - 80r, fx.pos_y )\\\\fryt80d36\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_IV_A); table.insert(hilight_fx, "tags functions Demo IV A")
	tags_functions_Demo_IV_B = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_IV_B, "hi-light[fx]: tags functions Demo IV B","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x + 80r, fx.pos_y )\\\\fryt80d-36\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_IV_B); table.insert(hilight_fx, "tags functions Demo IV B")
	tags_functions_Demo_IV_C = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_IV_C, "hi-light[fx]: tags functions Demo IV C","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x - 80r * (-1) ^ syl.i, fx.pos_y )\\\\fryt80d( 36 * (-1) ^ syl.i )\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_IV_C); table.insert(hilight_fx, "tags functions Demo IV C")
	tags_functions_Demo_IV_D = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_IV_D, "hi-light[fx]: tags functions Demo IV D","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x, fx.pos_y + 80r )\\\\frxt80d( 36 * (-1) ^ syl.i )\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_IV_D); table.insert(hilight_fx, "tags functions Demo IV D")
	tags_functions_Demo_IV_E = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_IV_E, "hi-light[fx]: tags functions Demo IV E","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\org( fx.pos_x, fx.pos_y + 80r )\\\\frxyt80dRs( 20, 40 )\\\\fscxyrt80d1.5\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_IV_E); table.insert(hilight_fx, "tags functions Demo IV E")
	tags_functions_Demo_V_A = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_V_A, "hi-light[fx]: tags functions Demo V A","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\blur2\\\\3a180\\\\4a100\\\\ybordt80d16r\\\\fscyrt80d1.5\", tag.oscill( fx.dur, 80, \"\\\\xyshadRrs( 6, 12 )\\\\4cR( nil, 60 )\" )","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_V_A); table.insert(hilight_fx, "tags functions Demo V A")
	tags_functions_Demo_V_B = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_V_B, "hi-light[fx]: tags functions Demo V B","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\blur2\\\\3a180\\\\3cR( )\\\\4a100\\\\t(0,80,\\\\ybord16r\\\\fscxyr1.3\\\\fr( 12 * (-1) ^ syl.i ))( 0, fx.dur - 80 )\", tag.oscill( fx.dur, 80, \"\\\\xyshadRrs( 6, 12 )\\\\4cR( nil, 60 )\" )","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_V_B); table.insert(hilight_fx, "tags functions Demo V B")
	tags_functions_Demo_VI = table.duplicate(PfxM_Box); table.inbox(tags_functions_Demo_VI, "hi-light[fx]: tags functions Demo VI","Syl",true,false,"#3EA100","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","syl.height / 15r, syl.width / 15r","","syl.text","tag.clip( \"shape.Rmove( 10r )\" ), \"\\\\blur3\\\\1ct80dSC1\"","","Lua",false); table.insert(hilight_fx_library, tags_functions_Demo_VI); table.insert(hilight_fx, "tags functions Demo VI")
	Zoom_move_Shad_I = table.duplicate(PfxM_Box); table.inbox(Zoom_move_Shad_I, "hi-light[fx]: Zoom move Shad I","Syl",true,false,"#FFFFFF","#008DFF","#D9D61A","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","format( \"\\\\4c%s\\\\xshad%s\\\\blur1\\\\t(\\\\fscx%s\\\\fscy%s\\\\xshad%s)\", shape.color4, -8*ratio, l.scale_x, l.scale_y, 6*ratio )","","Lua",false); table.insert(hilight_fx_library, Zoom_move_Shad_I); table.insert(hilight_fx, "Zoom move Shad I")
	Zoom_move_Shad_II = table.duplicate(PfxM_Box); table.inbox(Zoom_move_Shad_II, "hi-light[fx]: Zoom move Shad II","Syl",true,false,"#FFFFFF","#008DFF","#D9D61A","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","format( \"\\\\4c%s\\\\xshad%s\\\\blur1\\\\t(\\\\fscx%s\\\\fscy%s\\\\xshad%s)\", shape.color4, 8*ratio*(-1)^syl.i, l.scale_x, l.scale_y, 8*ratio*(-1)^(syl.i + 1) )","","Lua",false); table.insert(hilight_fx_library, Zoom_move_Shad_II); table.insert(hilight_fx, "Zoom move Shad II")
	Zoom_move_Shad_III = table.duplicate(PfxM_Box); table.inbox(Zoom_move_Shad_III, "hi-light[fx]: Zoom move Shad III","Syl",true,false,"#FFFFFF","#008DFF","#D9D61A","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","format( \"\\\\4c%s\\\\yshad%s\\\\blur1\\\\t(\\\\fscx%s\\\\fscy%s\\\\yshad%s)\", shape.color4, -8*ratio, l.scale_x, l.scale_y, 8*ratio )","","Lua",false); table.insert(hilight_fx_library, Zoom_move_Shad_III); table.insert(hilight_fx, "Zoom move Shad III")
	Zoom_move_Shad_IV = table.duplicate(PfxM_Box); table.inbox(Zoom_move_Shad_IV, "hi-light[fx]: Zoom move Shad IV","Syl",true,false,"#FFFFFF","#008DFF","#D9D61A","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","format( \"\\\\4c%s\\\\yshad%s\\\\blur1\\\\t(\\\\fscx%s\\\\fscy%s\\\\yshad%s)\", shape.color4, 8*ratio*(-1)^syl.i, l.scale_x, l.scale_y, 8*ratio*(-1)^(syl.i + 1) )","","Lua",false); table.insert(hilight_fx_library, Zoom_move_Shad_IV); table.insert(hilight_fx, "Zoom move Shad IV")
	Zoom_move_Shad_Dancing = table.duplicate(PfxM_Box); table.inbox(Zoom_move_Shad_Dancing, "hi-light[fx]: Zoom move Shad Dancing","Syl",true,false,"#FFFFFF","#008DFF","#D9D61A","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","1.35*l.scale_x, 1.35*l.scale_y","syl.text","format( \"\\\\4c%s\\\\blur1\\\\t(\\\\fscx%s\\\\fscy%s)\", shape.color4, l.scale_x, l.scale_y ), tag.oscill( fx.dur, frame_dur, \"\\\\xshad(R(-8*ratio, 8*ratio))\\\\yshad(R(-8*ratio, 8*ratio))\" )","","Lua",false); table.insert(hilight_fx_library, Zoom_move_Shad_Dancing); table.insert(hilight_fx, "Zoom move Shad Dancing")
	Zoom_Multi_Blue_I = table.duplicate(PfxM_Box); table.inbox(Zoom_Multi_Blue_I, "hi-light[fx]: Zoom Multi Blue I","Syl",true,false,"#5D98F4","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","\"\\\\bs0\\\\alpha160>230\\\\blur2>0\\\\1cSC1\\\\org( fx.pos_x, fx.pos_y - 10000*ratio)\\\\t(0,100,\\\\fscxyr( 1 + 0.65m )\\\\fr-0.08m)( 0, fx.dur - 100 )\"","","Lua",false); table.insert(hilight_fx_library, Zoom_Multi_Blue_I); table.insert(hilight_fx, "Zoom Multi Blue I")
	Zoom_Multi_Blue_II_Shake = table.duplicate(PfxM_Box); table.inbox(Zoom_Multi_Blue_II_Shake, "hi-light[fx]: Zoom Multi Blue II Shake","Syl",true,false,"#448BFB","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","shape.Rmove( 8r, 8r, 0, fx.dur, 1, { 1.5 * frame_dur } ), \"\\\\bs0\\\\alpha160>230\\\\blur2>0\\\\1cSC1\\\\org( fx.pos_x, fx.pos_y + 10000r )\\\\t(0,100,\\\\fscxyr( 1 + 0.85m )\\\\fr0.08m)( 0, fx.dur -100 )\"","random_mode = \"syl\"","Lua",false); table.insert(hilight_fx_library, Zoom_Multi_Blue_II_Shake); table.insert(hilight_fx, "Zoom Multi Blue II Shake")
	Zoom_Multi_Blue_III_RL = table.duplicate(PfxM_Box); table.inbox(Zoom_Multi_Blue_III_RL, "hi-light[fx]: Zoom Multi Blue III RL","Syl",true,false,"#0665FA","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","12","","syl.text","\"\\\\bs0\\\\alpha160>230\\\\blur2>0\\\\1cSC1\\\\org( fx.pos_x, fx.pos_y - 10000*ratio)\\\\t(0,0.3*fx.dur,\\\\fscxyr( 1 + 0.85m )\\\\fr0.08m)\\\\t(0.3*fx.dur, 0.7*fx.dur,\\\\fr-0.08m)\\\\t(0.7*fx.dur, fx.dur,\\\\fscxyr1\\\\fr0)\"","","Lua",false); table.insert(hilight_fx_library, Zoom_Multi_Blue_III_RL); table.insert(hilight_fx, "Zoom Multi Blue III RL")
	Zoom_Shad_Oscill_I = table.duplicate(PfxM_Box); table.inbox(Zoom_Shad_Oscill_I, "hi-light[fx]: Zoom Shad Oscill I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\fscxyrt80d1.5\", tag.oscill( fx.dur, frame_dur, \"\\\\xyshad-4r\\\\4cR( )\", \"\\\\xyshad4r\\\\4cR( )\" )","","Lua",false); table.insert(hilight_fx_library, Zoom_Shad_Oscill_I); table.insert(hilight_fx, "Zoom Shad Oscill I")
	
	--lead-out FX List
	Asault = table.duplicate(PfxM_Box); table.inbox(Asault, "lead-out[fx]: Asault","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y, fx.pos_y - Dy","fx.dur - 400, fx.dur - 200","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.5,\\\\frx180\\\\fscx%s\\\\blur3)\\\\t(%s,%s,\\\\fscy%s)\\\\fad(0,150)\", fx.pos_x, fx.pos_y, fx.dur - 400, fx.dur, 0.3*l.scale_x, fx.dur - 400, fx.dur, 3*l.scale_y )","delay = R( 400, 800 );\nDy = 100","Lua",false); table.insert(leadout_fx_library, Asault); table.insert(leadout_fx, "Asault")
	Asault_Line = table.duplicate(PfxM_Box); table.inbox(Asault_Line, "lead-out[fx]: Asault Line","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + delay + 25*(syl.i - syl.n +1)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - d1","fx.pos_y","fx.dur - delay, fx.dur","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\frx180)\\\\fad(0,300)\", fx.pos_x - d2*(1 - 2*(syl.i - 1)/(syl.n - 2)), fx.pos_y + d2/2, fx.dur - delay, fx.dur )","delay = 500;\nd1 = 150*ratio*(1 - 2*(syl.i - 1)/(syl.n - 2));\nd2 = 100*ratio","Lua",false); table.insert(leadout_fx_library, Asault_Line); table.insert(leadout_fx, "Asault Line")
	Distort_in_Line_I = table.duplicate(PfxM_Box); table.inbox(Distort_in_Line_I, "lead-out[fx]: Distort in Line I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + delay1 + delay2*j","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - dx","fx.pos_y","fx.dur - var.loop.delay1, fx.dur","3","","syl.text","tag.clip(0, fx.pos_t, xres, syl.height), format( \"\\\\t(%s,%s,0.7,\\\\frx360)\\\\fad(0,300)\", fx.dur - delay1, fx.dur )","delay1 = 500;\ndelay2 = 100;\ndx = 180*ratio","Lua",false); table.insert(leadout_fx_library, Distort_in_Line_I); table.insert(leadout_fx, "Distort in Line I")
	Distort_in_Syl_I = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I, "lead-out[fx]: Distort in Syl I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 50 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\bord2\\\\shad0)\\\\t(%s,%s,0.8,\\\\rnd7\\\\blur10\\\\fscy%s)\\\\fad(0,250)\", fx.pos_x, -10000*ratio, fx.dur - 501, fx.dur - 500, fx.dur - 500, fx.dur, 0.55*l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Distort_in_Syl_I); table.insert(leadout_fx, "Distort in Syl I")
	Distort_in_Syl_I_buttLine = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_buttLine, "lead-out[fx]: Distort in Syl I buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2( 70 ) + 70*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\bord2\\\\shad0)\\\\t(%s,%s,0.8,\\\\rnd6\\\\blur10\\\\fscy%s)\\\\fad(0,150)\", fx.pos_x, -10000*ratio, fx.dur - 501, fx.dur - 500, fx.dur - 500, fx.dur, 0.55*l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Distort_in_Syl_I_buttLine); table.insert(leadout_fx, "Distort in Syl I buttLine")
	Distort_in_Syl_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_Inverse, "lead-out[fx]: Distort in Syl I Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 50 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\bord2\\\\shad0)\\\\t(%s,%s,0.8,\\\\rnd6\\\\blur10\\\\fscy%s)\\\\fad(0,250)\", fx.pos_x, -10000*ratio, fx.dur - 501, fx.dur - 500, fx.dur - 500, fx.dur, 0.55*l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Distort_in_Syl_I_Inverse); table.insert(leadout_fx, "Distort in Syl I Inverse")
	Distort_in_Syl_I_midLine = table.duplicate(PfxM_Box); table.inbox(Distort_in_Syl_I_midLine, "lead-out[fx]: Distort in Syl I midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1( 70 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,\\\\bord2\\\\shad0)\\\\t(%s,%s,0.8,\\\\rnd6\\\\blur10\\\\fscy%s)\\\\fad(0,150)\", fx.pos_x, -10000*ratio, fx.dur - 501, fx.dur - 500, fx.dur - 500, fx.dur, 0.55*l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Distort_in_Syl_I_midLine); table.insert(leadout_fx, "Distort in Syl I midLine")
	Emerge_Clip_Grip_I = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I, "lead-out[fx]: Emerge Clip Grip I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 60*(syl.i - syl.n/2 - 1) + 100","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","5, loop_h","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_I); table.insert(leadout_fx, "Emerge Clip Grip I")
	Emerge_Clip_Grip_I_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_buttLine, "lead-out[fx]: Emerge Clip Grip I buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid2(70) + 70*syl.n","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","6, loop_h","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_I_buttLine); table.insert(leadout_fx, "Emerge Clip Grip I buttLine")
	Emerge_Clip_Grip_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_Inverse, "lead-out[fx]: Emerge Clip Grip I Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","5, loop_h","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_I_Inverse); table.insert(leadout_fx, "Emerge Clip Grip I Inverse")
	Emerge_Clip_Grip_I_midLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_I_midLine, "lead-out[fx]: Emerge Clip Grip I midLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid1(70)","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","6, loop_h","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_I_midLine); table.insert(leadout_fx, "Emerge Clip Grip I midLine")
	Emerge_Clip_Grip_II = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II, "lead-out[fx]: Emerge Clip Grip II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 60*(syl.i - syl.n/2 - 1) + 100","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","5, loop_h","","syl.text","format('%s\\\\t(%s,%s,%s)\\\\fad(0,200)', tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), fx.dur - var.loop.delay, fx.dur, tag.clip(fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height))","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_II); table.insert(leadout_fx, "Emerge Clip Grip II")
	Emerge_Clip_Grip_II_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_buttLine, "lead-out[fx]: Emerge Clip Grip II buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid2(70) + 70*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","5, loop_h","","syl.text","format('%s\\\\t(%s,%s,%s)\\\\fad(0,200)', tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), fx.dur - var.loop.delay, fx.dur, tag.clip(fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height))","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_II_buttLine); table.insert(leadout_fx, "Emerge Clip Grip II buttLine")
	Emerge_Clip_Grip_II_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_Inverse, "lead-out[fx]: Emerge Clip Grip II Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","5, loop_h","","syl.text","format('%s\\\\t(%s,%s,%s)\\\\fad(0,200)', tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), fx.dur - var.loop.delay, fx.dur, tag.clip(fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height))","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_II_Inverse); table.insert(leadout_fx, "Emerge Clip Grip II Inverse")
	Emerge_Clip_Grip_II_midLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_II_midLine, "lead-out[fx]: Emerge Clip Grip II midLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid1(70)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","5, loop_h","","syl.text","format('%s\\\\t(%s,%s,%s)\\\\fad(0,200)', tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), fx.dur - var.loop.delay, fx.dur, tag.clip(fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, syl.width, syl.height))","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Grip_II_midLine); table.insert(leadout_fx, "Emerge Clip Grip II midLine")
	Emerge_Clip_Grip_III = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Grip_III, "lead-out[fx]: Emerge Clip Grip III","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 70*(syl.i - syl.n + 1) + R(var.loop.d1 - var.loop.d2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","5, loop_h","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,150)'","d1 = 1000, d2 = 300"); table.insert(leadout_fx_library, Emerge_Clip_Grip_III); table.insert(leadout_fx, "Emerge Clip Grip III")
	Emerge_Clip_Horizontal_I = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_I, "lead-out[fx]: Emerge Clip Horizontal I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 60*(syl.i - syl.n/2 - 1) + 100","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","ceil(syl.height/5)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Horizontal_I); table.insert(leadout_fx, "Emerge Clip Horizontal I")
	Emerge_Clip_Horizontal_I_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_I_buttLine, "lead-out[fx]: Emerge Clip Horizontal I buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid2(70) + 70*syl.n","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","ceil(syl.height/5)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Horizontal_I_buttLine); table.insert(leadout_fx, "Emerge Clip Horizontal I buttLine")
	Emerge_Clip_Horizontal_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_I_Inverse, "lead-out[fx]: Emerge Clip Horizontal I Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","ceil(syl.height/5)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Horizontal_I_Inverse); table.insert(leadout_fx, "Emerge Clip Horizontal I Inverse")
	Emerge_Clip_Horizontal_I_mid_line = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Horizontal_I_mid_line, "lead-out[fx]: Emerge Clip Horizontal I mid line","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid1(70)","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","ceil(syl.height/5)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Horizontal_I_mid_line); table.insert(leadout_fx, "Emerge Clip Horizontal I mid line")
	Emerge_Clip_Vertical_I = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_I, "lead-out[fx]: Emerge Clip Vertical I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 60*(syl.i - syl.n/2 - 1) + 100","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","1, ceil(syl.width/6)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Vertical_I); table.insert(leadout_fx, "Emerge Clip Vertical I")
	Emerge_Clip_Vertical_I_buttLine = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_I_buttLine, "lead-out[fx]: Emerge Clip Vertical I buttLine","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid2(70) + 70*syl.n","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","1, ceil(syl.width/6)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Vertical_I_buttLine); table.insert(leadout_fx, "Emerge Clip Vertical I buttLine")
	Emerge_Clip_Vertical_I_Inverse = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_I_Inverse, "lead-out[fx]: Emerge Clip Vertical I Inverse","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - 450, fx.dur","1, ceil(syl.width/6)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Vertical_I_Inverse); table.insert(leadout_fx, "Emerge Clip Vertical I Inverse")
	Emerge_Clip_Vertical_I_mid_line = table.duplicate(PfxM_Box); table.inbox(Emerge_Clip_Vertical_I_mid_line, "lead-out[fx]: Emerge Clip Vertical I mid line","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + time_mid1(70)","","","","0","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay, fx.dur","1, ceil(syl.width/6)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height), '\\\\fad(0,300)'","delay = 450, dx = R(-30, 30)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Emerge_Clip_Vertical_I_mid_line); table.insert(leadout_fx, "Emerge Clip Vertical I mid line")
	Function_Alpha_Delay = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_Delay, "lead-out[fx]: Function Alpha Delay","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 60*(syl.i - syl.n + 8) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.delay(fx.dur - 1000, 250, '&H00&', '&HFF&', '\\\\1va', '\\\\3va'), '\\\\fad(0,120)'","delay = 600 - R(0, 20)*10"); table.insert(leadout_fx_library, Function_Alpha_Delay); table.insert(leadout_fx, "Function Alpha Delay")
	Function_Alpha_Mask = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_Mask, "lead-out[fx]: Function Alpha Mask","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.mask('\\\\1va', text.alpha1a), '\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Alpha_Mask); table.insert(leadout_fx, "Function Alpha Mask")
	Function_Alpha_Move_Mask = table.duplicate(PfxM_Box); table.inbox(Function_Alpha_Move_Mask, "lead-out[fx]: Function Alpha Move Mask","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","alpha.movemask(fx.dur, 300, '\\\\1va', text.alpha1a), '\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Alpha_Move_Mask); table.insert(leadout_fx, "Function Alpha Move Mask")
	Function_Color_Gradient_Vertical = table.duplicate(PfxM_Box); table.inbox(Function_Color_Gradient_Vertical, "lead-out[fx]: Function Color Gradient Vertical","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\1vc%s\\\\fad(0,300)', color.gradientv('&HFFFFFF&', '&HFE8D00&'))",""); table.insert(leadout_fx_library, Function_Color_Gradient_Vertical); table.insert(leadout_fx, "Function Color Gradient Vertical")
	Function_Color_Gradient_Horizontal = table.duplicate(PfxM_Box); table.inbox(Function_Color_Gradient_Horizontal, "lead-out[fx]: Function Color Gradient Horizontal","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\1vc%s\\\\fad(0,300)', color.gradienth('&HFFFFFF&', '&HFE8D00&'))",""); table.insert(leadout_fx_library, Function_Color_Gradient_Horizontal); table.insert(leadout_fx, "Function Color Gradient Horizontal")
	Function_Color_Grandient_Horizontal_II = table.duplicate(PfxM_Box); table.inbox(Function_Color_Grandient_Horizontal_II, "lead-out[fx]: Function Color Grandient Horizontal II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\1vc%s\\\\fad(0,300)', color.gradienth('&HFFFFFF&', '&HFE8D00&', '1 - abs(2*%s - 1)'))",""); table.insert(leadout_fx_library, Function_Color_Grandient_Horizontal_II); table.insert(leadout_fx, "Function Color Grandient Horizontal II")
	Function_Color_Mask = table.duplicate(PfxM_Box); table.inbox(Function_Color_Mask, "lead-out[fx]: Function Color Mask","Syl",true,false,"#FFFFFF","#67D7FE","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.mask('\\\\1vc', '&HFED767&'), '\\\\bord0\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Color_Mask); table.insert(leadout_fx, "Function Color Mask")
	Function_Color_Move_Mask = table.duplicate(PfxM_Box); table.inbox(Function_Color_Move_Mask, "lead-out[fx]: Function Color Move Mask","Syl",true,false,"#FFFFFF","#67D7FE","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemask(fx.dur, 320, '\\\\1vc', '&HFED767&', '&H433E30&'), '\\\\bord0\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Color_Move_Mask); table.insert(leadout_fx, "Function Color Move Mask")
	Function_Color_Move_Mask_Vertical = table.duplicate(PfxM_Box); table.inbox(Function_Color_Move_Mask_Vertical, "lead-out[fx]: Function Color Move Mask Vertical","Syl",true,false,"#FFFFFF","#67D7FE","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemaskv(fx.dur, 320, '\\\\1vc', '&HFF10B5&'), '\\\\bord0\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Color_Move_Mask_Vertical); table.insert(leadout_fx, "Function Color Move Mask Vertical")
	Function_Color_Set = table.duplicate(PfxM_Box); table.inbox(Function_Color_Set, "lead-out[fx]: Function Color Set","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","'\\\\fad(0,300)', color.set(var.syl.times, var.syl.colors, '\\\\1vc')","times = {'0:00:46.066','0:00:47.300','0:00:48.535','0:00:49.306','0:00:50.200','0:00:51.116','0:00:53.066','0:00:54.005'}, colors = {'&HB82AFB&','&HFB7E35&','&H4414FA&','&HB82AFB&','&H44AAFA&','&HFB7E35&','&HB82AFB&','&HBFFAFB&'}"); table.insert(leadout_fx_library, Function_Color_Set); table.insert(leadout_fx, "Function Color Set")
	Function_MoveVC = table.duplicate(PfxM_Box); table.inbox(Function_MoveVC, "lead-out[fx]: Function MoveVC","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.dx","fx.pos_y, fx.pos_y + var.loop.dy","fx.dur - var.loop.delay + 70*j, fx.dur","1, shape.movevc(shape.multi1('default', 4), 'loops')","","syl.text","shape.movevc(shape.multi1('default', 4), 'tag'), '\\\\fad(0,200)'","delay = 600, dx = R(-25, 25)*ratio, dy = R(-25, 25)*ratio"); table.insert(leadout_fx_library, Function_MoveVC); table.insert(leadout_fx, "Function MoveVC")
	Function_Oscill_Color_and_Blur_Char = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_Color_and_Blur_Char, "lead-out[fx]: Function Oscill Color and Blur Char","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 300","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","tag.oscill(fx.dur, 300, '\\\\3vc'..color.vc('&HFF8D00&'), '\\\\3vc'..color.vc('&HFF00FF&'), '\\\\3vc'..color.vc('&H00FF00&'), tag.oscill(fx.dur, 300, '\\\\blur4', '\\\\blur1'), '\\\\bord3\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Function_Oscill_Color_and_Blur_Char); table.insert(leadout_fx, "Function Oscill Color and Blur Char")
	Function_Oscill_Snake_Move_Char = table.duplicate(PfxM_Box); table.inbox(Function_Oscill_Snake_Move_Char, "lead-out[fx]: Function Oscill Snake Move Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 300","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","tag.oscill({fx.dur - var.syl.delay, fx.dur}, 120, '\\\\fsvp'..var.syl.height, '\\\\fsvp'..-var.syl.height), '\\\\fad(0,300)'","height = 4*ratio, delay = 800"); table.insert(leadout_fx_library, Function_Oscill_Snake_Move_Char); table.insert(leadout_fx, "Function Oscill Snake Move Char")
	Flashing_Outro_Aux = table.duplicate(PfxM_Box); table.inbox(Flashing_Outro_Aux, "lead-out[fx]: Flashing Outro Aux","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","16","","syl.text","format('\\\\org(%s,%s)\\\\bord0\\\\shad0\\\\blur3\\\\1va%s\\\\t(%s,%s,0.8,\\\\fr%s)', var.syl.orgx, var.syl.orgy, alpha.va('&HDD&'), fx.dur - var.syl.delay, fx.dur, 2*var.syl.a*module - var.syl.a)","delay = 400, orgx = syl.center - 10000*ratio, orgy = syl.middle, a = 0.2"); table.insert(leadout_fx_library, Flashing_Outro_Aux); table.insert(leadout_fx, "Flashing Outro Aux")
	Helical_Char_Leadout = table.duplicate(PfxM_Box); table.inbox(Helical_Char_Leadout, "lead-out[fx]: Helical Char Leadout","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 1.5*var.char.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.char.d*(-1)^j + (2*var.char.d*(-1)^(j+1))*(char.i-1)/char.n","fx.dur - 1.5*var.char.delay, fx.dur","2","","char.text","format('\\\\fad(0,300)\\\\org(%s,%s)\\\\1va%s\\\\3va%s\\\\4va%s\\\\t(%s,%s,0.8,\\\\frx180)\\\\t(%s,%s,\\\\1va%s\\\\3va%s\\\\4va%s)',fx.pos_x, fx.pos_y, alpha.va(var.loop.a1),  alpha.va(var.loop.a3),  alpha.va(var.loop.a4), fx.dur - var.char.delay, fx.dur, fx.dur - var.char.delay - 301, fx.dur - var.char.delay - 300, text.alpha1, text.alpha3, text.alpha4)","delay = 450, d = 70*ratio, a1 = tag.only(j==1, '&HFF&', text.alpha1a), a3 = tag.only(j==1, '&HFF&', text.alpha3a), a4 = tag.only(j==1, '&HFF&', text.alpha4a)"); table.insert(leadout_fx_library, Helical_Char_Leadout); table.insert(leadout_fx, "Helical Char Leadout")
	Helical_Char_Leadout_buttLine = table.duplicate(PfxM_Box); table.inbox(Helical_Char_Leadout_buttLine, "lead-out[fx]: Helical Char Leadout buttLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(35) + 35*char.n","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.char.d*(-1)^j + (2*var.char.d*(-1)^(j+1))*(char.i-1)/char.n","fx.dur - 1.5*var.char.delay, fx.dur","2","","char.text","format('\\\\fad(0,300)\\\\org(%s,%s)\\\\1va%s\\\\3va%s\\\\4va%s\\\\t(%s,%s,0.8,\\\\frx180)\\\\t(%s,%s,\\\\1va%s\\\\3va%s\\\\4va%s)',fx.pos_x, fx.pos_y, alpha.va(var.loop.a1),  alpha.va(var.loop.a3),  alpha.va(var.loop.a4), fx.dur - var.char.delay, fx.dur, fx.dur - var.char.delay - 301, fx.dur - var.char.delay - 300, text.alpha1, text.alpha3, text.alpha4)","delay = 450, d = 70*ratio, a1 = tag.only(j==1, '&HFF&', text.alpha1a), a3 = tag.only(j==1, '&HFF&', text.alpha3a), a4 = tag.only(j==1, '&HFF&', text.alpha4a)"); table.insert(leadout_fx_library, Helical_Char_Leadout_buttLine); table.insert(leadout_fx, "Helical Char Leadout buttLine")
	Helical_Char_Leadout_Inverse = table.duplicate(PfxM_Box); table.inbox(Helical_Char_Leadout_Inverse, "lead-out[fx]: Helical Char Leadout Inverse","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.char.d*(-1)^j + (2*var.char.d*(-1)^(j+1))*(char.i-1)/char.n","fx.dur - 1.5*var.char.delay, fx.dur","2","","char.text","format('\\\\fad(0,300)\\\\org(%s,%s)\\\\1va%s\\\\3va%s\\\\4va%s\\\\t(%s,%s,0.8,\\\\frx180)\\\\t(%s,%s,\\\\1va%s\\\\3va%s\\\\4va%s)',fx.pos_x, fx.pos_y, alpha.va(var.loop.a1),  alpha.va(var.loop.a3),  alpha.va(var.loop.a4), fx.dur - var.char.delay, fx.dur, fx.dur - var.char.delay - 301, fx.dur - var.char.delay - 300, text.alpha1, text.alpha3, text.alpha4)","delay = 450, d = 70*ratio, a1 = tag.only(j==1, '&HFF&', text.alpha1a), a3 = tag.only(j==1, '&HFF&', text.alpha3a), a4 = tag.only(j==1, '&HFF&', text.alpha4a)"); table.insert(leadout_fx_library, Helical_Char_Leadout_Inverse); table.insert(leadout_fx, "Helical Char Leadout Inverse")
	Helical_Char_Leadout_midLine = table.duplicate(PfxM_Box); table.inbox(Helical_Char_Leadout_midLine, "lead-out[fx]: Helical Char Leadout midLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(35)","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.char.d*(-1)^j + (2*var.char.d*(-1)^(j+1))*(char.i-1)/char.n","fx.dur - 1.5*var.char.delay, fx.dur","2","","char.text","format('\\\\fad(0,300)\\\\org(%s,%s)\\\\1va%s\\\\3va%s\\\\4va%s\\\\t(%s,%s,0.8,\\\\frx180)\\\\t(%s,%s,\\\\1va%s\\\\3va%s\\\\4va%s)',fx.pos_x, fx.pos_y, alpha.va(var.loop.a1),  alpha.va(var.loop.a3),  alpha.va(var.loop.a4), fx.dur - var.char.delay, fx.dur, fx.dur - var.char.delay - 301, fx.dur - var.char.delay - 300, text.alpha1, text.alpha3, text.alpha4)","delay = 450, d = 70*ratio, a1 = tag.only(j==1, '&HFF&', text.alpha1a), a3 = tag.only(j==1, '&HFF&', text.alpha3a), a4 = tag.only(j==1, '&HFF&', text.alpha4a)"); table.insert(leadout_fx_library, Helical_Char_Leadout_midLine); table.insert(leadout_fx, "Helical Char Leadout midLine")
	Keane_Again_and_Again = table.duplicate(PfxM_Box); table.inbox(Keane_Again_and_Again, "lead-out[fx]: Keane Again and Again","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.8,\\\\fr40)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(0,200)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, fx.dur - 260, fx.dur )","","Lua",false); table.insert(leadout_fx_library, Keane_Again_and_Again); table.insert(leadout_fx, "Keane Again and Again")
	Keane_Better_Than_This = table.duplicate(PfxM_Box); table.inbox(Keane_Better_Than_This, "lead-out[fx]: Keane Better Than This","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.8,\\\\fr-40)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(0,200)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, fx.dur - 260, fx.dur )","","Lua",false); table.insert(leadout_fx_library, Keane_Better_Than_This); table.insert(leadout_fx, "Keane Better Than This")
	Keane_Black_Burning_Heart = table.duplicate(PfxM_Box); table.inbox(Keane_Black_Burning_Heart, "lead-out[fx]: Keane Black Burning Heart","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.8,\\\\fr%s)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(0,200)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, 40*(-1)^(syl.i + ii), fx.dur - 260, fx.dur )","","Lua",false); table.insert(leadout_fx_library, Keane_Black_Burning_Heart); table.insert(leadout_fx, "Keane Black Burning Heart")
	Keane_Loves_Is_The_End = table.duplicate(PfxM_Box); table.inbox(Keane_Loves_Is_The_End, "lead-out[fx]: Keane Loves Is The End","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.8,\\\\fscx%s\\\\fscy%s\\\\fr%s\\\\frx80)\\\\t(%s,%s,0.8,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\frx0)\\\\fad(0,200)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, 1.25*l.scale_x, 1.25*l.scale_y, 40*(-1)^(syl.i + ii), fx.dur - 260, fx.dur, l.scale_x, l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Keane_Loves_Is_The_End); table.insert(leadout_fx, "Keane Loves Is The End")
	Keane_Lovers_Are_Losing = table.duplicate(PfxM_Box); table.inbox(Keane_Lovers_Are_Losing, "lead-out[fx]: Keane Lovers Are Losing","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\org(%s,%s)\\\\t(%s,%s,0.8,\\\\fscy%s\\\\fr%s\\\\fry40\\\\frx80)\\\\t(%s,%s,0.8,\\\\fscy%s\\\\fr0\\\\fry0\\\\frx0)\\\\fad(0,200)\", fx.move_l1 + tag.only( (syl.i + ii)%2 == 1, syl.width ), fx.move_b1 - l.descent - tag.only( ceil( (syl.i + ii)/2 )%2 == 1, syl.height - 2*l.descent ), fx.dur - 420, fx.dur - 260, 1.6*l.scale_y, 40*(-1)^(syl.i + ii), fx.dur - 260, fx.dur, l.scale_y )","","Lua",false); table.insert(leadout_fx_library, Keane_Lovers_Are_Losing); table.insert(leadout_fx, "Keane Lovers Are Losing")
	Keane_Perfect_Symmetry = table.duplicate(PfxM_Box); table.inbox(Keane_Perfect_Symmetry, "lead-out[fx]: Keane Perfect Symmetry","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) )","","Lua",false); table.insert(leadout_fx_library, Keane_Perfect_Symmetry); table.insert(leadout_fx, "Keane Perfect Symmetry")
	Keane_Playing_Along = table.duplicate(PfxM_Box); table.inbox(Keane_Playing_Along, "lead-out[fx]: Keane Playing Along","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) )","","Lua",false); table.insert(leadout_fx_library, Keane_Playing_Along); table.insert(leadout_fx, "Keane Playing Along")
	Keane_Pretend_That_You_Are_Alone = table.duplicate(PfxM_Box); table.inbox(Keane_Pretend_That_You_Are_Alone, "lead-out[fx]: Keane Pretend That You Are Alone","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) )","","Lua",false); table.insert(leadout_fx_library, Keane_Pretend_That_You_Are_Alone); table.insert(leadout_fx, "Keane Pretend That You Are Alone")
	Keane_Spiralling = table.duplicate(PfxM_Box); table.inbox(Keane_Spiralling, "lead-out[fx]: Keane Spiralling","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) )","","Lua",false); table.insert(leadout_fx_library, Keane_Spiralling); table.insert(leadout_fx, "Keane Spiralling")
	Keane_You_Do_not_See_Me = table.duplicate(PfxM_Box); table.inbox(Keane_You_Do_not_See_Me, "lead-out[fx]: Keane You Do not See Me","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) ) )","","Lua",false); table.insert(leadout_fx_library, Keane_You_Do_not_See_Me); table.insert(leadout_fx, "Keane You Do not See Me")
	Keane_You_Have_not_Told_Me_Anything = table.duplicate(PfxM_Box); table.inbox(Keane_You_Have_not_Told_Me_Anything, "lead-out[fx]: Keane You Have not Told Me Anything","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only( syl.i%2 == 1, tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) ) )","","Lua",false); table.insert(leadout_fx_library, Keane_You_Have_not_Told_Me_Anything); table.insert(leadout_fx, "Keane You Have not Told Me Anything")
	Keane_Bonus_Track = table.duplicate(PfxM_Box); table.inbox(Keane_Bonus_Track, "lead-out[fx]: Keane Bonus Track","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 ) + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","syl.text","tag.only2( { syl.i%4 == 1, syl.i%4 == 2, syl.i%4 == 3, syl.i%4 == 0 },\ntag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) ), tag.only( j == 1, format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_b1 - l.descent, fx.move_x1, fx.move_b1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_t1, fx.move_x1, fx.move_t1 + l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) ), tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx0\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(0,200)\", fx.move_r1, fx.move_y1, fx.dur - 420, fx.dur - 80, l.scale_x ), format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx%s\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(0,200)\", fx.move_l1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ) ), tag.only( j == 1, format( \"\\\\an8\\\\move(%s,%s,%s,%s,%s,%s)\\\\1c&H0000FF&\\\\fscy0\\\\t(%s,%s,0.8,\\\\fscy%s)\\\\fad(0,200)\", fx.move_x1, fx.move_t1 + l.descent, fx.move_x1, fx.move_t1, fx.dur - 420, fx.dur - 80, fx.dur - 420, fx.dur - 80, l.scale_y ), format( \"\\\\an2\\\\move(%s,%s,%s,%s,%s,%s)\\\\fscy%s\\\\t(%s,%s,0.8,\\\\fscy0)\\\\fad(0,200)\", fx.move_x1, fx.move_b1, fx.move_x1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 80, l.scale_y, fx.dur - 420, fx.dur - 80 ) ) )","","Lua",false); table.insert(leadout_fx_library, Keane_Bonus_Track); table.insert(leadout_fx, "Keane Bonus Track")
	Move_Char_I = table.duplicate(PfxM_Box); table.inbox(Move_Char_I, "lead-out[fx]: Move Char I","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 30*(syl.i - syl.n + 1) + var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.loop.dx","fx.pos_y, fx.pos_y - var.loop.dy","fx.dur - var.syl.delay, fx.dur","1","","char.text","'\\\\fad(0,200)'","delay = 450, dx = R(50, 100)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Move_Char_I); table.insert(leadout_fx, "Move Char I")
	Move_Char_II = table.duplicate(PfxM_Box); table.inbox(Move_Char_II, "lead-out[fx]: Move Char II","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time + 30*(syl.i - syl.n + 1) + var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.loop.dx","fx.pos_y, fx.pos_y - var.loop.dy","fx.dur - var.syl.delay, fx.dur","1","","char.text","format('\\\\t(%s,%s,0.8,\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(0,200)', fx.dur - var.syl.delay, fx.dur, R(-360,360), R(-360,360), R(-360,360))","delay = 450, dx = R(50, 100)*ratio, dy = R(-30, 30)*ratio"); table.insert(leadout_fx_library, Move_Char_II); table.insert(leadout_fx, "Move Char II")
	Move_Line_Bottom = table.duplicate(PfxM_Box); table.inbox(Move_Line_Bottom, "lead-out[fx]: Move Line Bottom","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.syl.d","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = l.height, delay = 260"); table.insert(leadout_fx_library, Move_Line_Bottom); table.insert(leadout_fx, "Move Line Bottom")
	Move_Line_buttLine = table.duplicate(PfxM_Box); table.inbox(Move_Line_buttLine, "lead-out[fx]: Move Line buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.loop.delay + var.loop.delay2","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + l.width*(-1)^j","fx.pos_y, fx.pos_y","fx.dur - var.loop.delay, fx.dur","1, 2","","syl.text","tag.clip(l.left, l.top, l.width, l.height)","delay = 450, delay2 = 150"); table.insert(leadout_fx_library, Move_Line_buttLine); table.insert(leadout_fx, "Move Line buttLine")
	Move_Line_Left = table.duplicate(PfxM_Box); table.inbox(Move_Line_Left, "lead-out[fx]: Move Line Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - var.syl.d","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = 300*ratio, delay = 260"); table.insert(leadout_fx_library, Move_Line_Left); table.insert(leadout_fx, "Move Line Left")
	Move_Line_Left_Right = table.duplicate(PfxM_Box); table.inbox(Move_Line_Left_Right, "lead-out[fx]: Move Line Left Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.syl.d*(-1)^line.i","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = 300*ratio, delay = 260"); table.insert(leadout_fx_library, Move_Line_Left_Right); table.insert(leadout_fx, "Move Line Left Right")
	Move_Line_Interlaced = table.duplicate(PfxM_Box); table.inbox(Move_Line_Interlaced, "lead-out[fx]: Move Line Interlaced","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.loop.delay + var.loop.delay2","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - 0.5*l.width*(-1)^(j + 1)","fx.pos_y, fx.pos_y","fx.dur - var.loop.delay, fx.dur","1, 2","","syl.text","tag.clip(l.left, l.top, l.width, l.height)","delay = 450, delay2 = 150"); table.insert(leadout_fx_library, Move_Line_Interlaced); table.insert(leadout_fx, "Move Line Interlaced")
	Move_Line_midLine = table.duplicate(PfxM_Box); table.inbox(Move_Line_midLine, "lead-out[fx]: Move Line midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.loop.delay + var.loop.delay2","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + 0.5*l.width*(-1)^(j + 1)","fx.pos_y, fx.pos_y","fx.dur - var.loop.delay, fx.dur","1, 2","","syl.text","tag.clip(l.left, l.top, l.width, l.height)","delay = 450, delay2 = 150"); table.insert(leadout_fx_library, Move_Line_midLine); table.insert(leadout_fx, "Move Line midLine")
	Move_Line_Right = table.duplicate(PfxM_Box); table.inbox(Move_Line_Right, "lead-out[fx]: Move Line Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.syl.d","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = 300*ratio, delay = 260"); table.insert(leadout_fx_library, Move_Line_Right); table.insert(leadout_fx, "Move Line Right")
	Move_Line_Sequence_LBRT = table.duplicate(PfxM_Box); table.inbox(Move_Line_Sequence_LBRT, "lead-out[fx]: Move Line Sequence LBRT","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.syl.dx*var.syl.fX[(line.i - 1)%4 + 1]","fx.pos_y, fx.pos_y + var.syl.dy*var.syl.fY[(line.i - 1)%4 + 1]","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","delay = 260, dx = 300*ratio, dy = l.height, fX = {-1, 0, 1, 0}, fY = {0, 1, 0, -1}"); table.insert(leadout_fx_library, Move_Line_Sequence_LBRT); table.insert(leadout_fx, "Move Line Sequence LBRT")
	Move_Line_Top = table.duplicate(PfxM_Box); table.inbox(Move_Line_Top, "lead-out[fx]: Move Line Top","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - var.syl.d","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = l.height, delay = 260"); table.insert(leadout_fx_library, Move_Line_Top); table.insert(leadout_fx, "Move Line Top")
	Move_Line_Top_Bottom = table.duplicate(PfxM_Box); table.inbox(Move_Line_Top_Bottom, "lead-out[fx]: Move Line Top Bottom","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + var.syl.d*(-1)^line.i","fx.dur - var.syl.delay, fx.dur","1","","syl.text","format('\\\\t(%s,%s,\\\\shad0\\\\bord2\\\\1vc%s\\\\3vc%s\\\\blur3)', fx.dur - var.syl.delay, fx.dur - 3*var.syl.delay/4, color.vc('&HFFFFFF&'), color.vc('&HFFFFFF&'))","d = l.height, delay = 260"); table.insert(leadout_fx_library, Move_Line_Top_Bottom); table.insert(leadout_fx, "Move Line Top Bottom")
	Move_Syl_From_Center_Line = table.duplicate(PfxM_Box); table.inbox(Move_Syl_From_Center_Line, "lead-out[fx]: Move Syl From Center Line","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, l.center","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","'\\\\fad(0,300)'","delay = 460"); table.insert(leadout_fx_library, Move_Syl_From_Center_Line); table.insert(leadout_fx, "Move Syl From Center Line")
	Psycho_leadout_Deformed = table.duplicate(PfxM_Box); table.inbox(Psycho_leadout_Deformed, "lead-out[fx]: Psycho leadout Deformed","Syl",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Psycho( )","","Psycho = function( )\n	local Px1 = 60*ratio\n	local Px2 = 200*ratio\n	local trim = 4\n	local text_shape = { \n		[1] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px1*(1 + sin( 2*pi*Mx )) return x, y end );\n		[2] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px1*(sin( 2*pi*Mx ) - 1) return x, y end );\n		[3] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px2*(1 + sin( 2*pi*Mx )) return x, y end );\n		[4] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px2*(sin( 2*pi*Mx ) - 1) return x, y end )\n	}\n	replay( 2 )\n	if J == 1 then\n		retime( \"syl2end\" )\n		return syl.text\n	end\n	retime( \"postline\", 0, 8*frame_dur )\n	return \"{\\\\bord0.5\\\\fad(0,160)}\" .. shape.animated2( 8*frame_dur, 2*frame_dur, text_shape )\nend","Lua",false); table.insert(leadout_fx_library, Psycho_leadout_Deformed); table.insert(leadout_fx, "Psycho leadout Deformed")
	Screw_Char = table.duplicate(PfxM_Box); table.inbox(Screw_Char, "lead-out[fx]: Screw Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","format('\\\\t(%s,%s,0.8,\\\\frx180)\\\\fad(0,300)', fx.dur - var.char.delay, fx.dur)","delay = 440"); table.insert(leadout_fx_library, Screw_Char); table.insert(leadout_fx, "Screw Char")
	Screw_Char_buttLine = table.duplicate(PfxM_Box); table.inbox(Screw_Char_buttLine, "lead-out[fx]: Screw Char buttLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(40) + 40*char.n","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","format('\\\\t(%s,%s,0.8,\\\\frx180)\\\\fad(0,300)', fx.dur - var.char.delay, fx.dur)","delay = 440"); table.insert(leadout_fx_library, Screw_Char_buttLine); table.insert(leadout_fx, "Screw Char buttLine")
	Screw_Char_Inverse = table.duplicate(PfxM_Box); table.inbox(Screw_Char_Inverse, "lead-out[fx]: Screw Char Inverse","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","format('\\\\t(%s,%s,0.8,\\\\frx180)\\\\fad(0,300)', fx.dur - var.char.delay, fx.dur)","delay = 440"); table.insert(leadout_fx_library, Screw_Char_Inverse); table.insert(leadout_fx, "Screw Char Inverse")
	Screw_Char_midLine = table.duplicate(PfxM_Box); table.inbox(Screw_Char_midLine, "lead-out[fx]: Screw Char midLine","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(40)","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","format('\\\\t(%s,%s,0.8,\\\\frx180)\\\\fad(0,300)', fx.dur - var.char.delay, fx.dur)","delay = 440"); table.insert(leadout_fx_library, Screw_Char_midLine); table.insert(leadout_fx, "Screw Char midLine")
	Simple_Moves3_Char_I = table.duplicate(PfxM_Box); table.inbox(Simple_Moves3_Char_I, "lead-out[fx]: Simple Moves3 Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.char.dx, fx.pos_x","fx.pos_y, fx.pos_y, fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","'\\\\fad(0,300)'","dx = 70*ratio, delay = 460"); table.insert(leadout_fx_library, Simple_Moves3_Char_I); table.insert(leadout_fx, "Simple Moves3 Char I")
	Simple_Moves3_Char_II = table.duplicate(PfxM_Box); table.inbox(Simple_Moves3_Char_II, "lead-out[fx]: Simple Moves3 Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.char.dx, fx.pos_x","fx.pos_y, fx.pos_y - syl.height*(1 - 2*module1), fx.pos_y","fx.dur - var.char.delay, fx.dur","1","","char.text","'\\\\fad(0,300)'","dx = 70*ratio, delay = 460"); table.insert(leadout_fx_library, Simple_Moves3_Char_II); table.insert(leadout_fx, "Simple Moves3 Char II")
	Snake_Move_Char_I = table.duplicate(PfxM_Box); table.inbox(Snake_Move_Char_I, "lead-out[fx]: Snake Move Char I","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 4*var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.char.dx","fx.pos_y, fx.pos_y","fx.dur - 4*var.char.delay, fx.dur","1","","char.text","tag.oscill({fx.dur - 4*var.char.delay, fx.dur}, var.syl.delay, '\\\\fsvp'..var.char.height, '\\\\fsvp'..-var.char.height), '\\\\fad(0,300)'","height = 7*ratio, delay = 180, dx = 40*ratio"); table.insert(leadout_fx_library, Snake_Move_Char_I); table.insert(leadout_fx, "Snake Move Char I")
	Snake_Move_Char_II = table.duplicate(PfxM_Box); table.inbox(Snake_Move_Char_II, "lead-out[fx]: Snake Move Char II","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 5*var.loop.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x - var.char.dx","fx.pos_y, fx.pos_y","fx.dur - 4*var.char.delay, fx.dur","1","","char.text","tag.oscill({fx.dur - 4*var.char.delay, fx.dur}, var.char.delay, '\\\\fsvp'..var.char.height, '\\\\fsvp'..-var.char.height), format('\\\\fad(0,300)\\\\t(%s,%s,0.8,\\\\frx270)', fx.dur - 5*var.char.delay, fx.dur)","height = 20*ratio, delay = 180, dx = 40*ratio"); table.insert(leadout_fx_library, Snake_Move_Char_II); table.insert(leadout_fx, "Snake Move Char II")
	Spectrum_Move_Char = table.duplicate(PfxM_Box); table.inbox(Spectrum_Move_Char, "lead-out[fx]: Spectrum Move Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 25*(char.i - char.n + 1) + var.char.delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format('\\\\org(%s,%s)\\\\t(%s,%s,0.7,\\\\frx%s\\\\frz%s)\\\\fad(0,300)', fx.pos_x, fx.pos_y - 20*ratio, fx.dur - 700 - 8*char.i, fx.dur, -140 - 2*char.i, -40 - char.i)","delay = 1200"); table.insert(leadout_fx_library, Spectrum_Move_Char); table.insert(leadout_fx, "Spectrum Move Char")
	Static_Clip_Ascend = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend, "lead-out[fx]: Static Clip Ascend","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend); table.insert(leadout_fx, "Static Clip Ascend")
	Static_Clip_Ascend_buttLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend_buttLine, "lead-out[fx]: Static Clip Ascend buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(60) + 60*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend_buttLine); table.insert(leadout_fx, "Static Clip Ascend buttLine")
	Static_Clip_Ascend_Inverse = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend_Inverse, "lead-out[fx]: Static Clip Ascend Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend_Inverse); table.insert(leadout_fx, "Static Clip Ascend Inverse")
	Static_Clip_Ascend_midLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend_midLine, "lead-out[fx]: Static Clip Ascend midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(60)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend_midLine); table.insert(leadout_fx, "Static Clip Ascend midLine")
	Static_Clip_Ascend_Descend_in_Line = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend_Descend_in_Line, "lead-out[fx]: Static Clip Ascend Descend in Line","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height*(-1)^line.i","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend_Descend_in_Line); table.insert(leadout_fx, "Static Clip Ascend Descend in Line")
	Static_Clip_Ascend_Descend_in_Syl = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Ascend_Descend_in_Syl, "lead-out[fx]: Static Clip Ascend Descend in Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height*(-1)^syl.i","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Ascend_Descend_in_Syl); table.insert(leadout_fx, "Static Clip Ascend Descend in Syl")
	Static_Clip_Descend = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Descend, "lead-out[fx]: Static Clip Descend","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.syl.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Descend); table.insert(leadout_fx, "Static Clip Descend")
	Static_Clip_Descend_buttLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Descend_buttLine, "lead-out[fx]: Static Clip Descend buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(60) + 60*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.widtht, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Descend_buttLine); table.insert(leadout_fx, "Static Clip Descend buttLine")
	Static_Clip_Descend_Inverse = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Descend_Inverse, "lead-out[fx]: Static Clip Descend Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Descend_Inverse); table.insert(leadout_fx, "Static Clip Descend Inverse")
	Static_Clip_Descend_midLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Descend_midLine, "lead-out[fx]: Static Clip Descend midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(60)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Descend_midLine); table.insert(leadout_fx, "Static Clip Descend midLine")
	Static_Clip_Left = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left, "lead-out[fx]: Static Clip Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left); table.insert(leadout_fx, "Static Clip Left")
	Static_Clip_Left_buttLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_buttLine, "lead-out[fx]: Static Clip Left buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(60) + 60*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left_buttLine); table.insert(leadout_fx, "Static Clip Left buttLine")
	Static_Clip_Left_Inverse = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_Inverse, "lead-out[fx]: Static Clip Left Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left_Inverse); table.insert(leadout_fx, "Static Clip Left Inverse")
	Static_Clip_Left_midLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_midLine, "lead-out[fx]: Static Clip Left midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(60)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left_midLine); table.insert(leadout_fx, "Static Clip Left midLine")
	Static_Clip_Left_Right_in_Line = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_Right_in_Line, "lead-out[fx]: Static Clip Left Right in Line","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.line.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width*(-1)^line.i","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left_Right_in_Line); table.insert(leadout_fx, "Static Clip Left Right in Line")
	Static_Clip_Left_Right_in_Syl = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Left_Right_in_Syl, "lead-out[fx]: Static Clip Left Right in Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.line.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width*(-1)^syl.i","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Left_Right_in_Syl); table.insert(leadout_fx, "Static Clip Left Right in Syl")
	Static_Clip_Right = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Right, "lead-out[fx]: Static Clip Right","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Right); table.insert(leadout_fx, "Static Clip Right")
	Static_Clip_Right_buttLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Right_buttLine, "lead-out[fx]: Static Clip Right buttLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid2(60) + 60*syl.n","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Right_buttLine); table.insert(leadout_fx, "Static Clip Right buttLine")
	Static_Clip_Right_Inverse = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Right_Inverse, "lead-out[fx]: Static Clip Right Inverse","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.n - syl.i/2 + 2)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Right_Inverse); table.insert(leadout_fx, "Static Clip Right Inverse")
	Static_Clip_Right_midLine = table.duplicate(PfxM_Box); table.inbox(Static_Clip_Right_midLine, "lead-out[fx]: Static Clip Right midLine","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_mid1(60)","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","1","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_Right_midLine); table.insert(leadout_fx, "Static Clip Right midLine")
	Static_Clip_H_Multi = table.duplicate(PfxM_Box); table.inbox(Static_Clip_H_Multi, "lead-out[fx]: Static Clip H Multi","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + syl.width*(-1)^j","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","5","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_H_Multi); table.insert(leadout_fx, "Static Clip H Multi")
	Static_Clip_H_Multi_II = table.duplicate(PfxM_Box); table.inbox(Static_Clip_H_Multi_II, "lead-out[fx]: Static Clip H Multi II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + var.loop.w*(-1)^j","fx.pos_y, fx.pos_y","fx.dur - var.syl.delay, fx.dur","6","","syl.text","tag.clip(fx.pos_l - var.syl.w, fx.pos_t, syl.width + 2*var.syl.w, syl.height)","delay = 400, w = 50*ratio"); table.insert(leadout_fx_library, Static_Clip_H_Multi_II); table.insert(leadout_fx, "Static Clip H Multi II")
	Static_Clip_V_Multi = table.duplicate(PfxM_Box); table.inbox(Static_Clip_V_Multi, "lead-out[fx]: Static Clip V Multi","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 1) + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height*(-1)^j","fx.dur - var.syl.delay, fx.dur","1, ceil(syl.width/7)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_V_Multi); table.insert(leadout_fx, "Static Clip V Multi")
	Static_Clip_V_Multi_II = table.duplicate(PfxM_Box); table.inbox(Static_Clip_V_Multi_II, "lead-out[fx]: Static Clip V Multi II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + var.loop.delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height*(-1)^j","fx.dur - var.syl.delay, fx.dur","1, ceil(syl.width/7)","","syl.text","tag.clip(fx.pos_l, fx.pos_t, syl.width, syl.height)","delay = 400"); table.insert(leadout_fx_library, Static_Clip_V_Multi_II); table.insert(leadout_fx, "Static Clip V Multi II")
	Stele_Move_Left = table.duplicate(PfxM_Box); table.inbox(Stele_Move_Left, "lead-out[fx]: Stele Move Left","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 50*(syl.i - syl.n + 6) + var.loop.delay*module/3","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - var.loop.dx","fx.pos_y, fx.pos_y","fx.dur - var.loop.delay - 50*module, fx.dur","7","","syl.text","format('%s\\\\fad(0,300)\\\\t(%s,%s,0.8,\\\\1va%s\\\\3va%s\\\\4va%s)', tag.only(j ~= 1, format('\\\\1va%s\\\\3va%s\\\\4va%s', alpha.va('&HFF&'), alpha.va('&HFF&'), alpha.va('&HFF&'))), fx.dur - var.loop.delay - 51, fx.dur - var.loop.delay - 50, text.alpha1, text.alpha3, text.alpha4)","dx = 80*ratio, delay = 300"); table.insert(leadout_fx_library, Stele_Move_Left); table.insert(leadout_fx, "Stele Move Left")
	Template_char2end = table.duplicate(PfxM_Box); table.inbox(Template_char2end, "lead-out[fx]: Template char2end","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + char.end_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadout_fx_library, Template_char2end); table.insert(leadout_fx, "Template char2end")
	Template_Jitter_Char = table.duplicate(PfxM_Box); table.inbox(Template_Jitter_Char, "lead-out[fx]: Template Jitter Char","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.end_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format('\\\\jitter(%s,%s,%s,%s,60,1000)', R(4)*(-1)^R(2), R(4)*(-1)^R(2), R(4)*(-1)^R(2), R(4)*(-1)^R(2))",""); table.insert(leadout_fx_library, Template_Jitter_Char); table.insert(leadout_fx, "Template Jitter Char")
	Template_Jitter_Line = table.duplicate(PfxM_Box); table.inbox(Template_Jitter_Line, "lead-out[fx]: Template Jitter Line","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format('\\\\jitter(%s,%s,%s,%s,80,1000)', var.line.jt1, var.line.jt2, var.line.jt3, var.line.jt4)","jt1 = R(4)*(-1)^R(2), jt2 = R(4)*(-1)^R(2), jt3 = R(4)*(-1)^R(2), jt4 = R(4)*(-1)^R(2)"); table.insert(leadout_fx_library, Template_Jitter_Line); table.insert(leadout_fx, "Template Jitter Line")
	Template_Leadout_Char_Flag_Line = table.duplicate(PfxM_Box); table.inbox(Template_Leadout_Char_Flag_Line, "lead-out[fx]: Template Leadout Char Flag Line","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + 30*(char.i - char.n + 1) + 300","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","tag.oscill(fx.dur, 360, '\\\\fsvp2', '\\\\fsvp-2'), '\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Template_Leadout_Char_Flag_Line); table.insert(leadout_fx, "Template Leadout Char Flag Line")
	Template_Leadout_Char = table.duplicate(PfxM_Box); table.inbox(Template_Leadout_Char, "lead-out[fx]: Template Leadout Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 20 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","'\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Template_Leadout_Char); table.insert(leadout_fx, "Template Leadout Char")
	Template_Leadout_Syl = table.duplicate(PfxM_Box); table.inbox(Template_Leadout_Syl, "lead-out[fx]: Template Leadout Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time + time_lo( 40 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","'\\\\fad(0,300)'",""); table.insert(leadout_fx_library, Template_Leadout_Syl); table.insert(leadout_fx, "Template Leadout Syl")
	Template_postchar = table.duplicate(PfxM_Box); table.inbox(Template_postchar, "lead-out[fx]: Template postchar","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + char.end_time","l.start_time + char.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadout_fx_library, Template_postchar); table.insert(leadout_fx, "Template postchar")
	Template_postline_Char = table.duplicate(PfxM_Box); table.inbox(Template_postline_Char, "lead-out[fx]: Template postline Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.end_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadout_fx_library, Template_postline_Char); table.insert(leadout_fx, "Template postline Char")
	Template_postline_Syl = table.duplicate(PfxM_Box); table.inbox(Template_postline_Syl, "lead-out[fx]: Template postline Syl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.end_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadout_fx_library, Template_postline_Syl); table.insert(leadout_fx, "Template postline Syl")
	Template_postsyl = table.duplicate(PfxM_Box); table.inbox(Template_postsyl, "lead-out[fx]: Template postsyl","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadout_fx_library, Template_postsyl); table.insert(leadout_fx, "Template postsyl")
	Template_postsyl_Char = table.duplicate(PfxM_Box); table.inbox(Template_postsyl_Char, "lead-out[fx]: Template postsyl Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.start_time + syl.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadout_fx_library, Template_postsyl_Char); table.insert(leadout_fx, "Template postsyl Char")
	Template_syl2end = table.duplicate(PfxM_Box); table.inbox(Template_syl2end, "lead-out[fx]: Template syl2end","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","",""); table.insert(leadout_fx_library, Template_syl2end); table.insert(leadout_fx, "Template syl2end")
	Template_syl2end_Char = table.duplicate(PfxM_Box); table.inbox(Template_syl2end_Char, "lead-out[fx]: Template syl2end Char","Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","",""); table.insert(leadout_fx_library, Template_syl2end_Char); table.insert(leadout_fx, "Template syl2end Char")
	Template_Tremor_I = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_I, "lead-out[fx]: Template Tremor I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\rnd%s', var.syl.rndx), tag.oscill(fx.dur, R(20, 40)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = 7*ratio"); table.insert(leadout_fx_library, Template_Tremor_I); table.insert(leadout_fx, "Template Tremor I")
	Template_Tremor_II = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_II, "lead-out[fx]: Template Tremor II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\org(%s,%s)\\\\rnd%s', fx.pos_x, fx.pos_y - 10000*ratio, var.syl.rndx), tag.oscill(fx.dur, R(50, 80)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = ratio"); table.insert(leadout_fx_library, Template_Tremor_II); table.insert(leadout_fx, "Template Tremor II")
	Template_Tremor_III = table.duplicate(PfxM_Box); table.inbox(Template_Tremor_III, "lead-out[fx]: Template Tremor III","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.end_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format('\\\\org(%s,%s)\\\\rnd%s', fx.pos_x - 10000*ratio, fx.pos_y, var.syl.rndx), tag.oscill(fx.dur, R(30, 60)*10, '\\\\rnd'..2*var.syl.rndx,'\\\\rnd'..var.syl.rndx)","rndx = 0.4*ratio"); table.insert(leadout_fx_library, Template_Tremor_III); table.insert(leadout_fx, "Template Tremor III")
	Tremor_Clip_I = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_I, "lead-out[fx]: Tremor Clip I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.end_time","l.end_time + delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 20*ratio, fx.dur - delay, fx.dur, 0.8, { 80 } )\" ), \"\\\\fad(0,150)\"","delay = 320","Lua",false); table.insert(leadout_fx_library, Tremor_Clip_I); table.insert(leadout_fx, "Tremor Clip I")
	Tremor_Clip_II = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_II, "lead-out[fx]: Tremor Clip II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.end_time","l.end_time + delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 50*ratio, 0, fx.dur - delay, fx.dur, 0.8, { 80 } )\" ), \"\\\\fad(0,150)\"","delay = 320","Lua",false); table.insert(leadout_fx_library, Tremor_Clip_II); table.insert(leadout_fx, "Tremor Clip II")
	Tremor_Clip_III = table.duplicate(PfxM_Box); table.inbox(Tremor_Clip_III, "lead-out[fx]: Tremor Clip III","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.end_time","l.end_time + delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","syl.text","tag.clip( \"shape.Rmove( 0, 50*ratio, fx.dur - delay, fx.dur, 0.8, { 80 } )\" ), \"\\\\fad(0,150)\"","delay = 320","Lua",false); table.insert(leadout_fx_library, Tremor_Clip_III); table.insert(leadout_fx, "Tremor Clip III")
	
	--shape FX List
	つき_ろのがたり_I = table.duplicate(Shape_Box); table.inbox(つき_ろのがたり_I, "shape[fx]: つき ろのがたり I","Syl",true,false,"#E86F03","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, linefx[ii].syl[syl.i + 1].center","fx.pos_y + 4","fx.dur - 80, fx.dur","2","1.1*Sz","m 50 0 b 22 0 0 22 0 50 l 8 50 b 8 26 26 8 50 8 m 50 100 b 78 100 100 78 100 50 l 92 50 b 92 75 75 92 50 92 ","format( \"\\\\bord0\\\\fr%s\\\\t(\\\\fr%s)\\\\1c%s\", vel*syl.start_time*(-1)^j + 90*(j - 1), vel*syl.end_time*(-1)^j + 90*(j - 1), random.color( { 0, 360 }, { 60, 86 } ) )","Sz = math.distance( syl.width, syl.height );\nvel = -0.4","Lua",false); table.insert(shape_fx_library, つき_ろのがたり_I); table.insert(shape_fx, "つき ろのがたり I")
	つき_ろのがたり_II = table.duplicate(Shape_Box); table.inbox(つき_ろのがたり_II, "shape[fx]: つき ろのがたり II","Syl",true,false,"#FF0000","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, linefx[ii].syl[syl.i + 1].center","fx.pos_y + 4*ratio","fx.dur - 80, fx.dur","1","1.1*Sz","m 50 0 b 22 0 0 22 0 50 l 8 50 b 8 26 26 8 50 8 m 50 100 b 78 100 100 78 100 50 l 92 50 b 92 75 75 92 50 92 ","format( \"\\\\bord0\\\\fr%s\\\\t(\\\\fr%s)\", vel*syl.start_time, vel*syl.end_time )","Sz = math.distance( syl.width, syl.height );\nvel = -0.4","Lua",false); table.insert(shape_fx_library, つき_ろのがたり_II); table.insert(shape_fx, "つき ろのがたり II")
	Akame_Ga_Kill_preline = table.duplicate(Shape_Box); table.inbox(Akame_Ga_Kill_preline, "shape[fx]: Akame Ga Kill preline","Line",true,false,"#676767","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 200","l.end_time - 200","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","0, 60*ratio","shape.rectangle","\"\\\\bord0\\\\shad0\\\\1a&H86&\\\\t(0,100,\\\\fscx1000)\\\\t(100,200,\\\\fscx100)\\\\t(200,300,\\\\fscx1280\\\\frx180)\"","","Lua",false); table.insert(shape_fx_library, Akame_Ga_Kill_preline); table.insert(shape_fx, "Akame Ga Kill preline")
	Bakura_HL_I = table.duplicate(Shape_Box); table.inbox(Bakura_HL_I, "shape[fx]: Bakura HL I","Syl",true,false,"#FFFFFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","2","syl.width, syl.height","shape.rectangle","format( \"\\\\bord%s\\\\1a255\\\\blur2\\\\t(\\\\fr%s)\", Bord, 180*(-1)^j ), tag.oscill( fx.dur, 3*frame_dur, format( \"\\\\bord%s\\\\blur10\\\\fscy%s\", 3*Bord, syl.height/4 ), format( \"\\\\bord%s\\\\blur2\\\\fscy%s\", Bord, syl.height ) )","Bord = 3*ratio","Lua",false); table.insert(shape_fx_library, Bakura_HL_I); table.insert(shape_fx, "Bakura HL I")
	Bakura_HL_II = table.duplicate(Shape_Box); table.inbox(Bakura_HL_II, "shape[fx]: Bakura HL II","Syl",true,false,"#FFFFFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","2","tag.only( j == 1, syl.width, syl.height ), tag.only( j == 1, syl.height, syl.width )","shape.rectangle","format( \"\\\\bord%s\\\\1a255\\\\blur2\\\\t(\\\\fr%s)\", Bord, fx.dur*Vel*(-1)^syl.i ), tag.oscill( fx.dur, 3*frame_dur, format( \"\\\\bord%s\\\\blur10\", 3*Bord ), format( \"\\\\bord%s\\\\blur2\", Bord ) )","Bord = 3*ratio;\nVel = 0.36","Lua",false); table.insert(shape_fx_library, Bakura_HL_II); table.insert(shape_fx, "Bakura HL II")
	Bar_Line_Love_Lab_OP_1 = table.duplicate(Shape_Box); table.inbox(Bar_Line_Love_Lab_OP_1, "shape[fx]: Bar Line Love Lab OP 1","Line",true,false,"#92CDF1","#ADC4D6","#6A8DD6","20","0","0","l.start_time","l.end_time","","","","","l.center","syl.middle + 5*ratio","","","8","0","fx.pos_x","fx.pos_y","","1","","Bar( )","\"\\\\bord0\\\\blur0.4\"","Bar = function( Offset )\n	local Offset = (Offset or 25)*ratio\n	local O, W = 142*ratio, 2*Offset + line.width*1.41\n	local S = format( \"m 0 0 l 3 20 b %d %d %d %d %d 20 l %d 0 b %d %d %d %d 0 0 \", W/3, 20-W/O, 2*W/3, 20-W/O, W, W+3, 2*W/3, -W/O, W/3, -W/O )\n	return shape.origin( S )\nend","Lua",false); table.insert(shape_fx_library, Bar_Line_Love_Lab_OP_1); table.insert(shape_fx, "Bar Line Love Lab OP 1")
	Before_Line_Hexagon_fry = table.duplicate(Shape_Box); table.inbox(Before_Line_Hexagon_fry, "shape[fx]: Before Line Hexagon fry","Line",true,false,"#298CFF","#FFFFFF","#000000","200","50","0","l.start_time - 220","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x + (j - 1)*(Size + Space) - 0.5*(Length - Size)","fx.pos_y","","Loop","Size","shape.hexagon","format( \"\\\\bord3\\\\shad0\\\\blur3\\\\fscy%s\\\\fry100\\\\t(0,220,\\\\fscy%s\\\\fry0)\\\\fad(120,120)\", 1.4*Size, Size )","Size = 80*ratio;\nSpace = 0.4*Size;\nLoop = ceil( l.width/(Size + Space) + 0.5 );\nLength = Loop*Size + (Loop - 1)*Space","Lua",false); table.insert(shape_fx_library, Before_Line_Hexagon_fry); table.insert(shape_fx, "Before Line Hexagon fry")
	Bezier_Heart_I = table.duplicate(Shape_Box); table.inbox(Bezier_Heart_I, "shape[fx]: Bezier Heart I","Syl",true,false,"#FFFFFF","#FECE0E","#6A8DD6","0","0","0","l.start_time + syl.start_time + 300*module","fx.start_time + 600 + R( 400 )","math.bezier( \"x\", heart( 3.4 )[J] )","math.bezier( \"y\", heart( 3.4 )[J] )","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","50","R( 6, 12 )","shape.shine2t","replay( 2 ), \"\\\\bord0\\\\shad0\\\\fad(60,150)\\\\1c\" .. color1, tag.glitter( fx.dur, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. color1 )","heart = function( Ratio )\n	local Ratio = Ratio or 4*ratio\n	local Heart1 = { 0, -5*Ratio, -12*Ratio, -19*Ratio, -22*Ratio, 2*Ratio, 0, 10*Ratio }\n	local Heart2 = { 0, -5*Ratio, 12*Ratio, -19*Ratio, 22*Ratio, 2*Ratio, 0, 10*Ratio }\n	local Heart = { Heart1, Heart2 }\n	return Heart\nend; color1 = color.interpolate( shape.color1, shape.color3, Rc( 0, 1 ) )","Lua",false); table.insert(shape_fx_library, Bezier_Heart_I); table.insert(shape_fx, "Bezier Heart I")
	Bezier_Heart_II = table.duplicate(Shape_Box); table.inbox(Bezier_Heart_II, "shape[fx]: Bezier Heart II","Syl",true,false,"#FFFFFF","#FECE0E","#6A8DD6","0","0","0","l.start_time + syl.start_time + 300*module","fx.start_time + 600 + R( 400 )","math.bezier( \"x\", heart( 3.4 )[J] )","math.bezier( \"y\", heart( 3.4 )[J] )","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + R( -dxy, dxy )","fx.pos_y, fx.pos_y + R( -dxy, dxy )","fx.dur - 300, fx.dur","50","R( 5, 10 )","shape.shine2t","replay( 2 ), \"\\\\bord0\\\\shad0\\\\fad(60,150)\\\\1c\" .. color1, tag.glitter( { 260, fx.dur }, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. color1 )","dxy = 20*ratio;\nheart = function( Ratio )\n	local Ratio = Ratio or 4*ratio\n	local Heart1 = { 0, -5*Ratio, -12*Ratio, -19*Ratio, -22*Ratio, 2*Ratio, 0, 10*Ratio }\n	local Heart2 = { 0, -5*Ratio, 12*Ratio, -19*Ratio, 22*Ratio, 2*Ratio, 0, 10*Ratio }\n	local Heart = { Heart1, Heart2 }\n	return Heart\nend; color1 = color.interpolate( shape.color1, shape.color3, Rc( 0, 1 ) )","Lua",false); table.insert(shape_fx_library, Bezier_Heart_II); table.insert(shape_fx, "Bezier Heart II")
	Bezier_Snake_I = table.duplicate(Shape_Box); table.inbox(Bezier_Snake_I, "shape[fx]: Bezier Snake I","Syl",true,false,"#FFFFFF","#FE0FFA","#6A8DD6","0","0","0","l.start_time + syl.start_time + 300*module","l.end_time + time_lo( 40 ) + 300 + R( 500 )","math.bezier( \"x\", var.syl.P )","math.bezier( \"y\", var.syl.P )","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + R( -dxy, dxy )","fx.pos_y, fx.pos_y + R( -dxy, dxy )","fx.dur - 300, fx.dur","60","R( 5, 10 )","shape.shine2t","\"\\\\bord0\\\\shad0\\\\fad(60,150)\\\\1c\" .. color1, tag.glitter( { 260, fx.dur }, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. color1 )","dxy = 20*ratio;\ncolor1 = color.interpolate( shape.color1, shape.color3, Rc( 0, 1 ) );\nP = math.point( R( 5, 6 ), 86*ratio, 86*ratio, 0, 0, ( (syl.i ~= syl.n) and line.kara[syl.i + 1].center - syl.center + l.left or 60 ), 0 )","Lua",false); table.insert(shape_fx_library, Bezier_Snake_I); table.insert(shape_fx, "Bezier Snake I")
	Bezier_Snake_Super_Star = table.duplicate(Shape_Box); table.inbox(Bezier_Snake_Super_Star, "shape[fx]: Bezier Snake Super Star","Syl",true,false,"#FEBD0F","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module^0.8","fx.start_time + 800","math.bezier( \"x\", pnt( ) )","math.bezier( \"y\", pnt( ) )","","","syl.center","syl.middle","","0.75","5","R( 0, 2 )","fx.pos_x, fx.pos_x + R( -15, 15 )","fx.pos_y + 5*ratio, fx.pos_y + 5*ratio + R( -15, 15 )","200, fx.dur","ceil( 0.35*math.length_bezier( pnt( ) ) )","12*ratio","shape.shine1t","\"\\\\bord0\\\\shad0\\\\fad(50,200)\", tag.glitter( fx.dur, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. shape.color1 ), \"\\\\bord0\\\\blur0\"","pnt = function( )\n	local w\n	if syl.i == syl.n then\n		w = 1.2*syl.height\n	else\n		w = linefx[ii].syl[val_i + 1].center - linefx[ii].syl[val_i].center\n	end\n	local P = {\n	[1] = 0,\n	[2] = 0.5*syl.height*(-1)^(val_i + 0),\n	[3] = w/2,\n	[4] = 0.5*syl.height*(-1)^(val_i + 0),\n	[5] = w/2,\n	[6] = 0.5*syl.height*(-1)^(val_i + 1),\n	[7] = w,\n	[8] = 0.5*syl.height*(-1)^(val_i + 1)\n	}\n	return P\nend","Lua",false); table.insert(shape_fx_library, Bezier_Snake_Super_Star); table.insert(shape_fx, "Bezier Snake Super Star")
	Bezier_Snake_Super_Star_Double = table.duplicate(Shape_Box); table.inbox(Bezier_Snake_Super_Star_Double, "shape[fx]: Bezier Snake Super Star Double","Syl",true,false,"#FEBD0F","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module^0.8 + 200*(J - 1)","fx.start_time + 800","math.bezier( \"x\", pnt2( ) )","math.bezier( \"y\", pnt2( ) )","","","syl.center","syl.middle","","0.8","5","R( 0, 2 )","fx.pos_x, fx.pos_x + R( -15, 15 )*ratio","fx.pos_y, fx.pos_y + R( -15, 15 )*ratio","200, fx.dur","0.25*math.length_bezier( pnt2( ) )","10*ratio","shape.shine1t","replay( 2 ), \"\\\\bord0\\\\shad0\\\\fad(50,200)\", tag.glitter( fx.dur, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. shape.color1 ), \"\\\\bord0\\\\blur0\"","pnt2 = function( )\n	local w\n	if syl.i == syl.n then\n		w = 1.2*syl.height\n	else\n		w = linefx[ii].syl[val_i + 1].center - linefx[ii].syl[val_i].center\n	end\n	local P = {\n		[1] = 0,\n		[2] = 0.5*syl.height*(-1)^(val_i + J),\n		[3] = w/2,\n		[4] = 0.5*syl.height*(-1)^(val_i + J),\n		[5] = w/2,\n		[6] = 0.5*syl.height*(-1)^(val_i + 1 + J),\n		[7] = w,\n		[8] = 0.5*syl.height*(-1)^(val_i + 1 + J)\n	}\n	return P\nend","Lua",false); table.insert(shape_fx_library, Bezier_Snake_Super_Star_Double); table.insert(shape_fx, "Bezier Snake Super Star Double")
	Big_Pixel_HL = table.duplicate(Shape_Box); table.inbox(Big_Pixel_HL, "shape[fx]: Big Pixel HL","Syl",true,false,"#1AC022","#FFFFFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 12*R( 15, 30 )","","","","","syl.center","syl.middle","","","5","R( 2 )","fx.pos_l + syl.width*module + R( 10 ), fx.pos_l + syl.width*module - R( 10, 30 )","fx.pos_y + var.loop.Dy","","syl.dur/30","R( 10 ,20 )*ratio","shape.rectangle","tag.glitter( fx.dur, \"\\\\alpha&HFF&\", \"\\\\alpha&H00&\" ), \"\\\\bord0\\\\shad0\\\\fad(0, 100)\"","Dy = 0.2*l.height*(2*sin( pi*module ) - 1) + R( -5, 5 )*ratio","Lua",false); table.insert(shape_fx_library, Big_Pixel_HL); table.insert(shape_fx, "Big Pixel HL")
	Bleed_it_Out_I = table.duplicate(Shape_Box); table.inbox(Bleed_it_Out_I, "shape[fx]: Bleed it Out I","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","255","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 160 + R( 80 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + math.polar( var.loop.Angle, var.loop.Radius, \"x\" )","fx.pos_y, fx.pos_y + math.polar( var.loop.Angle, var.loop.Radius, \"y\" )","","syl.dur/15","R( 15, 30 )*ratio, 2*ratio","m 200 0 l 100 0 l 100 100 l 200 100 m 0 0 l 0 100 ","\"\\\\blur1.8\\\\bord1\\\\shad0\\\\fad(0,100)\\\\fr\" .. var.loop.Angle","Angle = R( 24 )*15;\nRadius = R( 30, 60 )*ratio","Lua",false); table.insert(shape_fx_library, Bleed_it_Out_I); table.insert(shape_fx, "Bleed it Out I")
	Bleed_it_Out_II = table.duplicate(Shape_Box); table.inbox(Bleed_it_Out_II, "shape[fx]: Bleed it Out II","Syl",true,false,"#FFFFFF","#3F3C3C","#3C79FA","0","255","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 160 + R( 80 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + math.polar( var.loop.Angle, var.loop.Radius, \"x\" )","fx.pos_y, fx.pos_y + math.polar( var.loop.Angle, var.loop.Radius, \"y\" )","","syl.dur/15","var.loop.Circle and 6*ratio or R( 15, 30 )*ratio, var.loop.Circle and 6*ratio or 2*ratio","var.loop.Circle and shape.circle or \"m 200 0 l 100 0 l 100 100 l 200 100 m 0 0 l 0 100 \"","\"\\\\blur1.8\\\\bord1\\\\shad0\\\\fad(0,100)\\\\fr\" .. var.loop.Angle, tag.only( var.loop.Circle, \"\\\\1c\" .. shape.color4 )","Angle = R( 24 )*15;\nRadius = R( 30, 60 )*ratio;\nCircle = R( 3 ) == 1","Lua",false); table.insert(shape_fx_library, Bleed_it_Out_II); table.insert(shape_fx, "Bleed it Out II")
	Bleed_it_Out_III = table.duplicate(Shape_Box); table.inbox(Bleed_it_Out_III, "shape[fx]: Bleed it Out III","Syl",true,false,"#FFFFFF","#3F3C3C","#3C79FA","0","255","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 160 + R( 80 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + math.polar( var.loop.Angle, var.loop.Radius, \"x\" ), fx.pos_x","fx.pos_y + math.polar( var.loop.Angle, var.loop.Radius, \"y\" ), fx.pos_y","","syl.dur/15","var.loop.Circle and 6*ratio or R( 15, 30 )*ratio, var.loop.Circle and 6*ratio or 2*ratio","var.loop.Circle and shape.circle or \"m 200 0 l 100 0 l 100 100 l 200 100 m 0 0 l 0 100 \"","\"\\\\blur1.8\\\\bord1\\\\shad0\\\\fad(0,100)\\\\fr\" .. var.loop.Angle, tag.only( var.loop.Circle, \"\\\\1c\" .. shape.color4 )","Angle = R( 24 )*15;\nRadius = R( 30, 60 )*ratio;\nCircle = R( 3 ) == 1","Lua",false); table.insert(shape_fx_library, Bleed_it_Out_III); table.insert(shape_fx, "Bleed it Out III")
	Blood_Lad_preline_Bars = table.duplicate(Shape_Box); table.inbox(Blood_Lad_preline_Bars, "shape[fx]: Blood Lad preline Bars","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 260","l.start_time + 200","","","","","line.center","line.middle","","","5","0","fx.pos_x + 0.5*(xres + l.width + 120*ratio)*(-1)^line.i, fx.pos_x","fx.pos_y","0, 260","1","l.width + 120*ratio, 110*ratio","m 5 32 l 5 30 l 100 30 l 100 31 m 0 26 l 0 24 l 95 24 l 95 26 m 5 20 l 5 18 l 100 18 l 100 19 m 0 13 l 0 12 l 95 12 l 95 14 m 5 8 l 5 6 l 100 6 l 100 7 m 0 1 l 0 0 l 95 0 l 95 2 ","\\bord0\\blur1.5\\1a&H84&\\t(260,260,\\fscx!l.width + 300!\\1a&H00&)\\fad(0,200)","","Automation Auto-4",false); table.insert(shape_fx_library, Blood_Lad_preline_Bars); table.insert(shape_fx, "Blood Lad preline Bars")
	Blue_Fire_Animated_HL_I = table.duplicate(Shape_Box); table.inbox(Blue_Fire_Animated_HL_I, "shape[fx]: Blue Fire Animated HL I","Syl",true,false,"#8FBDFF","#2862FD","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","2","0","fx.pos_x","fx.pos_b - l.descent","","4","90*ratio","shape.animated2( fx.dur, 1.5*frame_dur, shpfx( ) )","format( \"\\\\bord0.5\\\\blur4\\\\fad(0,%s)\", delay ), tag.oscill( fx.dur, 1.5*frame_dur, \"\\\\fscy( R( 75, 100 ) )\" )","delay = 200;\nshp = \"m 21 15 b 0 42 0 82 24 82 b 42 82 53 57 42 29 b 41 45 40 51 35 54 b 40 38 39 17 25 0 b 27 14 28 31 20 45 b 15 33 27 31 21 15 m 22 54 b 23 60 31 63 21 73 b 22 65 14 64 22 54 \";\nshpfx = function( )\n	local shps = { }\n	for i = 0, 3 do\n		shps[i + 1] = shape.filter3( shp, 1,\n			function( x, y )\n				x = x + 6*sin( 4*pi*Mx + pi*(i/2) )\n				return x, y\n			end\n		)\n	end\n	return shps\nend","Lua",false); table.insert(shape_fx_library, Blue_Fire_Animated_HL_I); table.insert(shape_fx, "Blue Fire Animated HL I")
	Blue_Fire_Animated_HL_II = table.duplicate(Shape_Box); table.inbox(Blue_Fire_Animated_HL_II, "shape[fx]: Blue Fire Animated HL II","Syl",true,false,"#8FBDFF","#2862FD","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","6","0","fx.pos_r","fx.pos_y","","4","90*ratio","shape.animated2( fx.dur, 1.5*frame_dur, shpfx( ) )","format( \"\\\\bord0.5\\\\blur4\\\\fad(0,%s)\", delay ), tag.oscill( fx.dur, 1.5*frame_dur, \"\\\\fscy( R( 75, 100 ) )\" )","delay = 200;\nshp = shape.rotate( \"m 21 15 b 0 42 0 82 24 82 b 42 82 53 57 42 29 b 41 45 40 51 35 54 b 40 38 39 17 25 0 b 27 14 28 31 20 45 b 15 33 27 31 21 15 m 22 54 b 23 60 31 63 21 73 b 22 65 14 64 22 54 \", 90 );\nshpfx = function( )\n	local shps = { }\n	for i = 0, 3 do\n		shps[i + 1] = shape.origin( shape.filter3( shp, 1,\n			function( x, y )\n				y = y + 6*sin( 4*pi*My + pi*(i/2) )\n				return x, y\n			end\n		) )\n	end\n	return shps\nend","Lua",false); table.insert(shape_fx_library, Blue_Fire_Animated_HL_II); table.insert(shape_fx, "Blue Fire Animated HL II")
	Blue_the_Stars_HL_I = table.duplicate(Shape_Box); table.inbox(Blue_the_Stars_HL_I, "shape[fx]: Blue the Stars HL I","Syl",true,false,"#193ED0","#9EBFE6","#080B4D","20","20","0","l.start_time + syl.start_time + syl.dur*module - R( 150 )","fx.start_time + R( 500, 1000 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","syl.dur/8","R( 5, 8 )*ratio","tag.only( var.loop.Shine ~= 1, tag.only( R( 2 ) == 1, shape.circle, shape.size( shape.diamond, 50, 100 ) ), shape.shine2t )","tag.only( var.loop.Shine ~= 1, format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)%s\", Rd( 3, 6 ), R( -360, 360 ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 5 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 ) ), format( \"\\\\bord0.8\\\\shad0\\\\blur3\\\\1c&HFFFFFF&\\\\3c%s\\\\t(\\\\fr%s)%s\", random.color( { 170, 200 } ), R( -360, 360 ), tag.glitter( ) ) )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio;\nShine = R( 7 )","Lua",false); table.insert(shape_fx_library, Blue_the_Stars_HL_I); table.insert(shape_fx, "Blue the Stars HL I")
	Blue_the_Stars_HL_II = table.duplicate(Shape_Box); table.inbox(Blue_the_Stars_HL_II, "shape[fx]: Blue the Stars HL II","Syl",true,false,"#193ED0","#9EBFE6","#080B4D","20","20","0","l.start_time + syl.start_time + syl.dur*module - R( 150 )","fx.start_time + R( 500, 1000 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x - var.loop.Dy2","fx.pos_y + var.loop.Dy1, fx.pos_y + var.loop.Dx2","","syl.dur/8","R( 5, 8 )*ratio","tag.only( var.loop.Shine ~= 1, tag.only( R( 2 ) == 1, shape.circle, shape.size( shape.diamond, 50, 100 ) ), shape.shine2t )","tag.only( var.loop.Shine ~= 1, format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)%s\", Rd( 3, 6 ), R( -360, 360 ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 5 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 ) ), format( \"\\\\bord0.8\\\\shad0\\\\blur3\\\\1c&HFFFFFF&\\\\3c%s\\\\t(\\\\fr%s)%s\", random.color( { 170, 200 } ), R( -360, 360 ), tag.glitter( ) ) )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio;\nShine = R( 7 )","Lua",false); table.insert(shape_fx_library, Blue_the_Stars_HL_II); table.insert(shape_fx, "Blue the Stars HL II")
	Bubble_Syl_HL = table.duplicate(Shape_Box); table.inbox(Bubble_Syl_HL, "shape[fx]: Bubble Syl HL","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","(j == 1) and syl.text or mi_bubble","tag.only( j == 1, format( \"\\\\t(0,80,\\\\fr%s\\\\3c%s\\\\blur3\\\\fscx%s\\\\fscy%s)\\\\t(80,%s,\\\\fr0\\\\3c%s\\\\blur0\\\\fscx%s\\\\fscy%s)\", 30*(-1)^(syl.i + ii), random.color( nil, 70 ), 1.25*l.scale_x, 1.25*l.scale_y, fx.dur, text.color3, l.scale_x, l.scale_y ), format( \"\\\\3c%s\\\\blur3\\\\bord0.3\\\\fscx0\\\\fscy0\\\\t(\\\\fscx100\\\\fscy100)\\\\fad(80,0)\", random.color( ) ) )","Size = 0.82*math.distance( syl.width, syl.height );\nmi_bubble = shape.size( shape.bubble, Size )","Lua",false); table.insert(shape_fx_library, Bubble_Syl_HL); table.insert(shape_fx, "Bubble Syl HL")
	Bubble_Syl_Multi = table.duplicate(Shape_Box); table.inbox(Bubble_Syl_Multi, "shape[fx]: Bubble Syl Multi","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 1200 + R( 500 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x","fx.pos_y","","syl.dur/92","","shape.bubble","shape.Smove( shape.ratio( var.loop.mi_bezier, ratio + Rc( -0.5, 0.2 ) ) ), format( \"\\\\3c%s\\\\blur3\\\\bord0.3\\\\fscx%s\\\\fscy%s\\\\fad(0,300)\", random.color( ), var.loop.Size, var.loop.Size )","Size = R( 20, 35 )*ratio;\nmi_bezier = format( \"m 0 0 b %s %s %s %s %s %s \", R( 40, 70 )*(-1)^R( 2 ), R( -35, -70 ), R( 40, 70 )*(-1)^R( 2 ), R( -70, -105 ), R( -20, 20 ), R( -120, -160 ) )","Lua",false); table.insert(shape_fx_library, Bubble_Syl_Multi); table.insert(shape_fx, "Bubble Syl Multi")
	Bubble_Syl_postsyl = table.duplicate(Shape_Box); table.inbox(Bubble_Syl_postsyl, "shape[fx]: Bubble Syl postsyl","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.end_time","fx.start_time + 1200 + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","2","","(j == 1) and syl.text or mi_bubble","shape.Smove( shape.ratio( mi_bezier, ratio ) ), tag.only( j == 1, \"\\\\fad(0,300)\", format( \"\\\\3c%s\\\\blur3\\\\bord0.3\\\\fad(0,300)\", random.color( ) ) )","delay = R( 500 );\nSize = 0.82*math.distance( syl.width, syl.height );\nmi_bezier = format( \"m 0 0 b %s %s %s %s %s %s \", R( 40, 70 )*(-1)^R( 2 ), R( -35, -70 ), R( 40, 70 )*(-1)^R( 2 ), R( -70, -105 ), R( -20, 20 ), R( -120, -160 ) );\nmi_bubble = shape.displace( shape.size( shape.bubble, Size ), syl.width/2 - Size/2, l.descent - syl.height/2 + Size/2 )","Lua",false); table.insert(shape_fx_library, Bubble_Syl_postsyl); table.insert(shape_fx, "Bubble Syl postsyl")
	Circle_Multi_Shape_HL = table.duplicate(Shape_Box); table.inbox(Circle_Multi_Shape_HL, "shape[fx]: Circle Multi Shape HL","Syl",true,false,"#FFFFFF","#3AA6FD","#000000","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","cos( s )","sin( s )","0","2*pi","syl.center","syl.middle + l.descent/4","math.distance( syl.width, syl.height )/2.2","math.distance( syl.width, syl.height )/2.2","5","0","fx.pos_x, fx.pos_x + R( -10, 10 )*ratio","fx.pos_y, fx.pos_y + R( -10, 10 )*ratio","100, fx.dur","0.7*math.distance( syl.width, syl.height )","8*ratio","shape.shine2t","\"\\\\bord0.5\\\\blur4\\\\fad(0,200)\", tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. shape.color3 )","","Lua",false); table.insert(shape_fx_library, Circle_Multi_Shape_HL); table.insert(shape_fx, "Circle Multi Shape HL")
	Circle_Zoom_HL = table.duplicate(Shape_Box); table.inbox(Circle_Zoom_HL, "shape[fx]: Circle Zoom HL","Syl",true,false,"#FFFFFF","#5398FA","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle + l.descent/4","","","5","2","fx.pos_x, fx.pos_x + dx","fx.pos_y","fx.dur - 50, fx.dur","1","1.2*math.distance( syl.width, l.height )","Shape","format( \"\\\\bord1.5\\\\blur3\\\\shad0\\\\fr%s\\\\t(\\\\fr%s)\", -0.56*syl.start_time, -0.56*syl.end_time ), tag.oscill( fx.dur, 80, \"\\\\bord3\\\\3c&HFFFFFF&\", \"\\\\bord1.5\\\\3c&HFA9853&\" )","dx= (syl.i ~= syl.n) and line.left + line.kara[syl.i+1].center - line.kara[syl.i].center or 0;\nShape = \"m 50 0 b 22 0 0 22 0 50 b 0 78 22 100 50 100 b 78 100 100 78 100 50 b 100 22 78 0 50 0 m 97 50 b 97 76 76 97 50 97 b 24 97 3 76 3 50 b 3 25 24 3 50 3 l 50 8 b 65 8 80 17 87 31 l 91 28 b 94 32 97 38 97 50 m 9 87 l 11 89 l 20 80 l 18 78 l 9 87 \"","Lua",false); table.insert(shape_fx_library, Circle_Zoom_HL); table.insert(shape_fx, "Circle Zoom HL")
	Circle_Zoom_Intro = table.duplicate(Shape_Box); table.inbox(Circle_Zoom_Intro, "shape[fx]: Circle Zoom Intro","Syl",true,false,"#FFFFFF","#5398FA","#FFFFFF","0","0","0","l.start_time + syl.start_time - 400","l.start_time + syl.start_time","","","","","syl.center","syl.middle + l.descent/4","","","5","2","fx.pos_x - 120*ratio, fx.pos_x","fx.pos_y","","1","1.2*math.distance( syl.width, l.height )","Shape","\"\\\\bord1.5\\\\blur3\\\\shad0\\\\fad(100,0)\\\\fr360\\\\t(\\\\fr0)\", tag.oscill( fx.dur, 80, \"\\\\bord3\\\\3c&HFFFFFF&\", \"\\\\bord1.5\\\\3c&HFA9853&\" )","fxgroup = (syl.i == 1);\nShape = \"m 50 0 b 22 0 0 22 0 50 b 0 78 22 100 50 100 b 78 100 100 78 100 50 b 100 22 78 0 50 0 m 97 50 b 97 76 76 97 50 97 b 24 97 3 76 3 50 b 3 25 24 3 50 3 l 50 8 b 65 8 80 17 87 31 l 91 28 b 94 32 97 38 97 50 m 9 87 l 11 89 l 20 80 l 18 78 l 9 87 \"","Lua",false); table.insert(shape_fx_library, Circle_Zoom_Intro); table.insert(shape_fx, "Circle Zoom Intro")
	Circle_Zoom_Outro = table.duplicate(Shape_Box); table.inbox(Circle_Zoom_Outro, "shape[fx]: Circle Zoom Outro","Syl",true,false,"#FFFFFF","#5398FA","#FFFFFF","0","0","0","l.start_time + syl.end_time","l.start_time + syl.end_time + 400","","","","","syl.center","syl.middle + l.descent/4","","","5","2","fx.pos_x, fx.pos_x + 120*ratio","fx.pos_y","","1","1.2*math.distance( syl.width, l.height )","Shape","format( \"\\\\bord1.5\\\\blur3\\\\shad0\\\\fad(0,100)\\\\fr%s\\\\t(\\\\fr%s)\", -0.56*syl.end_time, -0.56*syl.end_time - 360 ), tag.oscill( fx.dur, 80, \"\\\\bord3\\\\3c&HFFFFFF&\", \"\\\\bord1.5\\\\3c&HFA9853&\" )","fxgroup = (syl.i == syl.n);\nShape = \"m 50 0 b 22 0 0 22 0 50 b 0 78 22 100 50 100 b 78 100 100 78 100 50 b 100 22 78 0 50 0 m 97 50 b 97 76 76 97 50 97 b 24 97 3 76 3 50 b 3 25 24 3 50 3 l 50 8 b 65 8 80 17 87 31 l 91 28 b 94 32 97 38 97 50 m 9 87 l 11 89 l 20 80 l 18 78 l 9 87 \"","Lua",false); table.insert(shape_fx_library, Circle_Zoom_Outro); table.insert(shape_fx, "Circle Zoom Outro")
	Cristal_Syl_postline = table.duplicate(Shape_Box); table.inbox(Cristal_Syl_postline, "shape[fx]: Cristal Syl postline","Syl",true,false,"#6D95FF","#3F3C3C","#FFFFFF","20","40","0","l.end_time + time_lo( 50 ) + R( -100 )","l.end_time + time_lo( 50 ) + R( 800, 2200 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.dx1, fx.pos_x + var.loop.dx2","fx.pos_y + var.loop.dy1, fx.pos_y + var.loop.dy2","","R( 4, 8 )","R( 8, 15 )*ratio","\"m 0 0 l 0 100 l 60 25 \"","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\t(0.2,\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(0,300)\", R( -4600, 4600 ), R( -6000, 6000 ), R( -4600, 4600 ) ), tag.glitter( fx.dur, \"\\\\1c&HFFFFFF&\", \"\\\\1c\" .. text.color1 )","dx1 = R( -syl.width/2, syl.width/2 );\ndx2 = R( 60, 500 )*ratio;\ndy1 = R( -0.36*syl.height, 0.4*syl.height );\ndy2 = R( -120, -20 )*ratio","Lua",false); table.insert(shape_fx_library, Cristal_Syl_postline); table.insert(shape_fx, "Cristal Syl postline")
	Despixel_HL_I = table.duplicate(Shape_Box); table.inbox(Despixel_HL_I, "shape[fx]: Despixel HL I","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","80","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 800 + R( 400 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_l + syl.width*module, fx.pos_l + syl.width*module + R( -10, 30 )*ratio","fx.pos_y+ var.loop.Dy1, fx.pos_y - R( 60,120 )*ratio","","syl.dur/12","var.syl.size","shape.rectangle","\"\\\\bord0\\\\shad0\\\\blur0.4\\\\fad(0,200)\"","size = 4*ratio;\nDy1 = R( -0.3*syl.height, 0.3*syl.height )","Lua",false); table.insert(shape_fx_library, Despixel_HL_I); table.insert(shape_fx, "Despixel HL I")
	Dollars_Bills_HL = table.duplicate(Shape_Box); table.inbox(Dollars_Bills_HL, "shape[fx]: Dollars Bills HL","Syl",true,false,"#F3F5FA","#557045","#FFFFFF","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 800 + R( 800 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + R( -30, 30 )*ratio, fx.pos_x + R( -200, -80 )*ratio","fx.pos_y + R( -20, 20 )*ratio, fx.pos_y + R( -16, 16 )*ratio","","syl.dur/20","var.loop.Size","mi_shape","format( \"\\\\shad0\\\\bord1\\\\blur3\\\\frx%s\\\\fry%s\\\\frz%s\\\\t(0.5,\\\\fscx%s\\\\fscy%s\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(100,200)\", R( -360, 360 ), R( -360, 360 ), R( -360, 360 ), 0.15*var.loop.Size, 0.35*var.loop.Size, R( -640, 660 ), R( -640, 660 ), R( -640, 660 ) )","Size = R( 16, 28 )*ratio;\nmi_shape = \"m 0 0 l 0 40 l 34 40 l 34 32 l 8 32 l 8 8 l 62 8 l 62 11 l 11 11 l 11 29 l 37 29 l 37 40 l 108 40 l 108 0 l 74 0 l 74 8 l 100 8 l 100 32 l 46 32 l 46 29 l 97 29 l 97 11 l 71 11 l 71 0 l 0 0 m 22 18 l 86 18 l 86 21 l 22 21 \"","Lua",false); table.insert(shape_fx_library, Dollars_Bills_HL); table.insert(shape_fx, "Dollars Bills HL")
	Dollars_Bills_postline = table.duplicate(Shape_Box); table.inbox(Dollars_Bills_postline, "shape[fx]: Dollars Bills postline","Char",true,false,"#F3F5FA","#557045","#FFFFFF","0","0","0","l.end_time + time_lo( 30 ) + R( -100, 100 )","fx.start_time + 600 + R( 1000 )","","","","","char.center","char.middle","","","5","R( 0, 1 )","fx.pos_x + R( -20, 20 )*ratio, fx.pos_x + R( -30, 30 )*ratio","fx.pos_y + R( -10, 10 )*ratio, fx.pos_y + R( -80, -40 )*ratio","","R( 2, 4 )","var.loop.Size","mi_shape","format( \"\\\\shad0\\\\bord1\\\\blur3\\\\frx%s\\\\fry%s\\\\frz%s\\\\t(0.5,\\\\fscx%s\\\\fscy%s\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(400,200)\", R( -360, 360 ), R( -360, 360 ), R( -360, 360 ), 0.15*var.loop.Size, 0.35*var.loop.Size, R( -640, 660 ), R( -640, 660 ), R( -640, 660 ) )","Size = R( 16, 28 )*ratio;\nmi_shape = \"m 0 0 l 0 40 l 34 40 l 34 32 l 8 32 l 8 8 l 62 8 l 62 11 l 11 11 l 11 29 l 37 29 l 37 40 l 108 40 l 108 0 l 74 0 l 74 8 l 100 8 l 100 32 l 46 32 l 46 29 l 97 29 l 97 11 l 71 11 l 71 0 l 0 0 m 22 18 l 86 18 l 86 21 l 22 21 \"","Lua",false); table.insert(shape_fx_library, Dollars_Bills_postline); table.insert(shape_fx, "Dollars Bills postline")
	Dollars_Bills_preline = table.duplicate(Shape_Box); table.inbox(Dollars_Bills_preline, "shape[fx]: Dollars Bills preline","Syl",true,false,"#FAF6F6","#FAF6F6","#6A8DD6","0","60","0","l.start_time - 400 + R( 600 )","fx.start_time + 300","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -60, 60 )*ratio","fx.pos_y+ R( -20, 20 )*ratio","","R( 4 ,8 )","var.loop.Size","shape.rectangle","format( \"\\\\shad0\\\\bord1.5\\\\1a%s\\\\fad(100,100)\\\\t(\\\\fscx%s\\\\fscy%s)\", var.loop.A, 0.5*var.loop.Size, 0.5*var.loop.Size )","Size = R( 8, 14 )*ratio;\nA = (R( 4 ) == 1) and \"&H15&\" or random.alpha( 200, 255 )","Lua",false); table.insert(shape_fx_library, Dollars_Bills_preline); table.insert(shape_fx, "Dollars Bills preline")
	Ebullition_HL = table.duplicate(Shape_Box); table.inbox(Ebullition_HL, "shape[fx]: Ebullition HL","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 500, 900 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","syl.dur/36","R( 6,10 )*ratio","shape.circle","format( \"\\\\bord1\\\\shad0\\\\blur2\\\\3c%s\\\\1a255\\\\fad(20,200)\", var.loop.Color ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. var.loop.Color )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 10 )*ratio;\nDy2 = R( 30, 120 )*ratio;\nColor = random.color( )","Lua",false); table.insert(shape_fx_library, Ebullition_HL); table.insert(shape_fx, "Ebullition HL")
	Ebullition_HL_Figure = table.duplicate(Shape_Box); table.inbox(Ebullition_HL_Figure, "shape[fx]: Ebullition HL Figure","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 500, 900 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","syl.dur/36","R( 6,10 )*ratio","m 33 0 l 33 33 l 0 33 l 0 67 l 33 67 l 33 100 l 67 100 l 67 67 l 100 67 l 100 33 l 67 33 l 67 0 ","format( \"\\\\bord1\\\\shad0\\\\blur2\\\\3c%s\\\\1a255\\\\t(\\\\fr%s)\\\\fad(20,200)\", var.loop.Color, R( -180, 180 ) ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. var.loop.Color )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 10 )*ratio;\nDy2 = R( 30, 120 )*ratio;\nColor = random.color( )","Lua",false); table.insert(shape_fx_library, Ebullition_HL_Figure); table.insert(shape_fx, "Ebullition HL Figure")
	Energy_Power = table.duplicate(Shape_Box); table.inbox(Energy_Power, "shape[fx]: Energy Power","Line",true,false,"#4CF300","#E1DEDE","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","4","j - 1","fx.pos_x - line.width/2","fx.pos_b + fx.sizey","","2","0, 0.2*l.height","shape.rectangle","tag.only( (j == 1), format( \"\\\\bord1\\\\shad0\\\\1va%s\\\\fscx%s\", alpha.va( \"&HFF&\" ), l.width ), format( \"\\\\bord0\\\\shad0\\\\t(\\\\1vc(%s,&H0000FF&,%s,&H0000FF&)%s)\", shape.color1, shape.color1, energy( ) ) )","energy = function( )\n	local Tag = \"\"\n	for i = 1, #line.kara do\n		Tag = Tag .. format( \"\\\\t(%s,%s,\\\\fscx%s)\", line.kara[i].start_time, line.kara[i].end_time,\n		( (i == 1) and line.kara[i].right - l.left or line.kara[i].right ) )\n	end\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Energy_Power); table.insert(shape_fx, "Energy Power")
	Equalizer_Sound_I = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_I, "shape[fx]: Equalizer Sound I","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + (syl.dur + delay)*(j - 1)/maxj","l.start_time + syl.start_time + (syl.dur + delay)*j/maxj","","","","","syl.center","syl.middle","","","2","0","fx.pos_x","fx.pos_b - l.descent","","ceil( syl.duration/100 )","0.9*syl.width, 0","shape.rectangle","format( \"\\\\bord0\\\\1c%s\\\\t(\\\\fscy%s)\\\\fad(0,%s)\", random.color( ), R( 60, 120 )*ratio, delay/2 )","delay = 300"); table.insert(shape_fx_library, Equalizer_Sound_I); table.insert(shape_fx, "Equalizer Sound I")
	Equalizer_Sound_II = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_II, "shape[fx]: Equalizer Sound II","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + (syl.dur + delay)*(j - 1)/maxj","l.start_time + syl.start_time + (syl.dur + delay)*j/maxj","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","ceil( syl.dur/100 )","0.9*syl.width, 0","shape.rectangle","format( \"\\\\bord0\\\\1c%s\\\\t(\\\\fscy%s)\\\\fad(0,%s)\", random.color( ), R( 80, 150 )*ratio, delay/2 )","delay = 300"); table.insert(shape_fx_library, Equalizer_Sound_II); table.insert(shape_fx, "Equalizer Sound II")
	Equalizer_Sound_III = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_III, "shape[fx]: Equalizer Sound III","Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","2","0","fx.pos_x","fx.pos_b - l.descent","","1","0.95*char.width, 0","shape.rectangle","format( \"\\\\bord0\\\\shad0\\\\1c%s\\\\fad(0,%s)\", color.module1( var.line.colors[1], var.line.colors[2] ), delay/2 ), sound( 40, 120 )","delay = 300;\ncolors = { random.color( { 0, 180 } ), random.color( { 180, 360 } ) };\nsound = function( min_y, max_y )\n	local Tag, i = \"\", 1\n	while i <= #line.kara do\n		Tag = Tag .. format( \"\\\\t(%s,%s,\\\\fscy%s)\\\\t(%d,%d,\\\\fscy%s)\", line.kara[i].start_time, line.kara[i].start_time + 1,\n		R( min_y, max_y )*ratio, line.kara[i].start_time + 1, line.kara[i].end_time, R( min_y )*ratio )\n		i = i + 1\n	end\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Equalizer_Sound_III); table.insert(shape_fx, "Equalizer Sound III")
	Equalizer_Sound_Horizontal_Left = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_Horizontal_Left, "shape[fx]: Equalizer Sound Horizontal Left","Line",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","6","0","fx.pos_l","fx.pos_t + fx.sizey*(j + 0.5)","","10","0, (l.height - l.descent)/maxj","shape.rectangle","format( \"\\\\bord0\\\\shad0\\\\1c%s\\\\fad(0,%s)\", var.line.colors, delay/2 ), sound_left( 40, 120 )","delay = 300;\ncolors = random.color( );\nsound_left = function( min_y, max_y )\n	local Tag, i = \"\", 1\n	while i <= #line.kara do\n		Tag = Tag .. format( \"\\\\t(%s,%s,\\\\fscx%s)\\\\t(%d,%d,\\\\fscx%s)\", line.kara[i].start_time, line.kara[i].start_time + 1,\n		R( min_y, max_y )*ratio, line.kara[i].start_time + 1, line.kara[i].end_time, R( min_y )*ratio )\n		i = i + 1\n	end\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Equalizer_Sound_Horizontal_Left); table.insert(shape_fx, "Equalizer Sound Horizontal Left")
	Equalizer_Sound_Horizontal_Left_Right = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_Horizontal_Left_Right, "shape[fx]: Equalizer Sound Horizontal Left Right","Line",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5 + (-1)^j","0","fx.pos_x - (l.width/2 + 10*ratio)*(-1)^j","fx.pos_t + l.descent/2 + fx.sizey/2 + (ceil( j/2 ) - 1)*fx.sizey","","20","0, 2*(l.height - l.descent)/maxj","shape.rectangle","format( \"\\\\bord0\\\\shad0\\\\1c%s\\\\fad(0,%s)\", var.line.colors, delay/2 ), sound_LR( 40, 120 )","delay = 300;\ncolors = random.color( );\nsound_LR = function( min_y, max_y )\n	local Tag, i = \"\", 1\n	while i <= #line.kara do\n		Tag = Tag .. format( \"\\\\t(%s,%s,\\\\fscx%s)\\\\t(%d,%d,\\\\fscx%s)\", line.kara[i].start_time, line.kara[i].start_time + 1,\n		R( min_y, max_y )*ratio, line.kara[i].start_time + 1, line.kara[i].end_time, R( min_y )*ratio )\n		i = i + 1\n	end\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Equalizer_Sound_Horizontal_Left_Right); table.insert(shape_fx, "Equalizer Sound Horizontal Left Right")
	Equalizer_Sound_Horizontal_Right = table.duplicate(Shape_Box); table.inbox(Equalizer_Sound_Horizontal_Right, "shape[fx]: Equalizer Sound Horizontal Right","Line",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","4","0","fx.pos_r","fx.pos_t + fx.sizey*(j + 0.5)","","10","0, (l.height - l.descent)/maxj","shape.rectangle","format( \"\\\\bord0\\\\shad0\\\\1c%s\\\\fad(0,%s)\", var.line.colors, delay/2 ), sound_right( 40, 120 )","delay = 300;\ncolors = random.color( );\nsound_right = function( min_y, max_y )\n	local Tag, i = \"\", 1\n	while i <= #line.kara do\n		Tag = Tag .. format( \"\\\\t(%s,%s,\\\\fscx%s)\\\\t(%d,%d,\\\\fscx%s)\", line.kara[i].start_time, line.kara[i].start_time + 1,\n		R( min_y, max_y )*ratio, line.kara[i].start_time + 1, line.kara[i].end_time, R( min_y )*ratio )\n		i = i + 1\n	end\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Equalizer_Sound_Horizontal_Right); table.insert(shape_fx, "Equalizer Sound Horizontal Right")
	Feather_HL_I = table.duplicate(Shape_Box); table.inbox(Feather_HL_I, "shape[fx]: Feather HL I","Syl",true,false,"#8FF3E6","#448E83","#6A8DD6","20","40","0","l.start_time + syl.start_time + (syl.dur + 200)*module","fx.start_time + 480 + R(400)","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -5, 5 )*ratio, fx.pos_x + R( -25, 25 )*ratio","fx.pos_y - R( 15, 20 )*ratio, fx.pos_y + R( 25, 50 )*ratio","","syl.dur/82","1.45*Size, Size","shape.feather","format( \"\\\\frx%s\\\\fry%s\\\\fr%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\blur4\\\\bord0.6\\\\fad(100,400)\", R( -240, 240 ), R( -240, 240 ), R( -240, 240 ), R( -340, 340 ), R( -340, 340 ), R( -340, 340 ) )","Size = R( 18, 28 )","Lua",false); table.insert(shape_fx_library, Feather_HL_I); table.insert(shape_fx, "Feather HL I")
	Feather_LI_I = table.duplicate(Shape_Box); table.inbox(Feather_LI_I, "shape[fx]: Feather LI I","Syl",true,false,"#85D9FB","#FFFFFF","#6A8DD6","0","0","0","l.start_time + time_li( 60 ) + 60*module","fx.start_time + 1200 + R( 60 )*10 + tag.only( R( 7 ) == 1, 1200 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -14, 14 )*ratio, fx.pos_x - R( 80, 220 )*ratio","fx.pos_y, fx.pos_y + R( -0.7*l.height, 0.7*l.height )","","R( 4, 8 )","R( 25, 40 )*ratio","\"m 103 15 l 92 26 b 87 20 80 25 80 28 b 73 26 68 29 62 27 b 53 27 50 21 44 21 b 38 15 31 11 21 8 b 14 2 7 0 4 2 b 0 16 11 37 29 43 b 40 49 65 50 82 37 b 87 41 97 36 93 27 l 104 16 \"","format( \"\\\\bord0\\\\shad0\\\\blur0.8\\\\t(0.7,\\\\frx%s\\\\fry%s\\\\fr%s\\\\fscx%s\\\\fscy%s)\\\\fad(200,400)\", R( -900, 900 ), R( -900, 900 ), R( -900, 900 ), var.loop.Size, var.loop.Size )","Size = R( 10, 18 )*ratio","Lua",false); table.insert(shape_fx_library, Feather_LI_I); table.insert(shape_fx, "Feather LI I")
	Feather_LO_I = table.duplicate(Shape_Box); table.inbox(Feather_LO_I, "shape[fx]: Feather LO I","Syl",true,false,"#85D9FB","#FFFFFF","#6A8DD6","0","0","0","l.end_time + time_lo( 60 ) + 60*module","fx.start_time + 1200 + R( 60 )*10 + tag.only( R( 7 ) == 1, 1200 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -14, 14 )*ratio, fx.pos_x - R( 80, 220 )*ratio","fx.pos_y, fx.pos_y + R( -0.7*l.height, 0.7*l.height )","","R( 4, 8 )","R( 25, 40 )*ratio","\"m 103 15 l 92 26 b 87 20 80 25 80 28 b 73 26 68 29 62 27 b 53 27 50 21 44 21 b 38 15 31 11 21 8 b 14 2 7 0 4 2 b 0 16 11 37 29 43 b 40 49 65 50 82 37 b 87 41 97 36 93 27 l 104 16 \"","format( \"\\\\bord0\\\\shad0\\\\blur0.8\\\\t(0.7,\\\\frx%s\\\\fry%s\\\\fr%s\\\\fscx%s\\\\fscy%s)\\\\fad(200,400)\", R( -900, 900 ), R( -900, 900 ), R( -900, 900 ), var.loop.Size, var.loop.Size )","Size = R( 10, 18 )*ratio","Lua",false); table.insert(shape_fx_library, Feather_LO_I); table.insert(shape_fx, "Feather LO I")
	Finito_HL = table.duplicate(Shape_Box); table.inbox(Finito_HL, "shape[fx]: Finito HL","Syl",true,false,"#9E0DCC","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x, fx.pos_x + linefx[ii].syl[syl.i + 1].center - linefx[ii].syl[syl.i].center","fx.pos_y","fx.dur - 80, fx.dur","2","0.92*math.distance( syl.width, syl.height )","Shp[j]","\"\\\\bord0\\\\blur1\", tag.only( j == 1, format( \"\\\\1a20\\\\1c%s\", color.interpolate( shape.color1, \"&HFFFFFF&\", 0.72 ) ), format( \"\\\\bord0.6\\\\3c%s\\\\fr%s\\\\t(\\\\fr%s)\", shape.color1, -syl.start_time*0.4, -syl.end_time*0.4 ) )","Shp = { \"m 58 8 b 30 8 8 30 8 58 l 14 58 b 14 34 34 14 58 14 b 83 14 102 34 102 58 b 102 83 83 102 58 102 b 34 102 14 83 14 58 l 8 58 b 8 86 30 108 58 108 b 86 108 108 86 108 58 b 108 30 86 8 58 8 m 0 0 l 116 0 m 0 116 l 116 116 \", \"m 58 8 b 30 8 8 30 8 58 l 14 58 b 14 34 34 14 58 14 b 83 14 102 34 102 58 l 108 58 b 108 30 86 8 58 8 m 94 58 l 105 71 l 116 58 m 0 0 l 116 0 m 0 116 l 116 116 \" }","Lua",false); table.insert(shape_fx_library, Finito_HL); table.insert(shape_fx, "Finito HL")
	Fire_Char_Translation_LI = table.duplicate(Shape_Box); table.inbox(Fire_Char_Translation_LI, "shape[fx]: Fire Char Translation LI","Char",true,false,"#FA3904","#FFA800","#440601","20","40","0","l.start_time + time_li( 20 ) + 260*module","fx.start_time + R( 500, 1000 )","","","","","char.center","char.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","R( 10, 14 )","R( 5, 10 )*ratio","tag.only( R( 2 ) == 1, shape.triangle, shape.size( shape.circle, 50, 100 ) )","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)\", Rd( 3, 5 ), R( -360, 360 ) ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 4 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 )","Dx1 = R( -0.6*char.width, 0.6*char.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio","Lua",false); table.insert(shape_fx_library, Fire_Char_Translation_LI); table.insert(shape_fx, "Fire Char Translation LI")
	Fire_Char_Translation_LO = table.duplicate(Shape_Box); table.inbox(Fire_Char_Translation_LO, "shape[fx]: Fire Char Translation LO","Char",true,false,"#FA3904","#FFA800","#440601","20","40","0","l.end_time + time_lo( 20 ) + 260*module - 400","fx.start_time + R( 500, 1000 )","","","","","char.center","char.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","R( 10, 14 )","R( 5, 10 )*ratio","tag.only( R( 2 ) == 1, shape.triangle, shape.size( shape.circle, 50, 100 ) )","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)\", Rd( 3, 5 ), R( -360, 360 ) ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 4 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 )","Dx1 = R( -0.6*char.width, 0.6*char.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio","Lua",false); table.insert(shape_fx_library, Fire_Char_Translation_LO); table.insert(shape_fx, "Fire Char Translation LO")
	Fire_Syl_HL = table.duplicate(Shape_Box); table.inbox(Fire_Syl_HL, "shape[fx]: Fire Syl HL","Syl",true,false,"#FA3904","#FFA800","#440601","20","40","0","l.start_time + syl.start_time + syl.dur*module - R( 150 )","fx.start_time + R( 500, 1000 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","syl.dur/10","R( 5, 10 )*ratio","tag.only( R( 2 ) == 1, shape.triangle, shape.size( shape.circle, 50, 100 ) )","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)\", Rd( 3, 5 ), R( -360, 360 ) ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 4 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio","Lua",false); table.insert(shape_fx_library, Fire_Syl_HL); table.insert(shape_fx, "Fire Syl HL")
	Fire_Syl_LI = table.duplicate(Shape_Box); table.inbox(Fire_Syl_LI, "shape[fx]: Fire Syl LI","Syl",true,false,"#FA3904","#FFA800","#440601","20","40","0","l.start_time + time_li( 40 ) + 260*module","fx.start_time + R( 500, 1000 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","R( 24, 32 )","R( 5, 10 )*ratio","tag.only( R( 2 ) == 1, shape.triangle, shape.size( shape.circle, 50, 100 ) )","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)\", Rd( 3, 5 ), R( -360, 360 ) ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 4 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio","Lua",false); table.insert(shape_fx_library, Fire_Syl_LI); table.insert(shape_fx, "Fire Syl LI")
	Fire_Syl_LO = table.duplicate(Shape_Box); table.inbox(Fire_Syl_LO, "shape[fx]: Fire Syl LO","Syl",true,false,"#FA3904","#FFA800","#440601","20","40","0","l.end_time + time_lo( 40 ) + 260*module - 400","fx.start_time + R( 500, 1000 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","R( 24, 32 )","R( 5, 10 )*ratio","tag.only( R( 2 ) == 1, shape.triangle, shape.size( shape.circle, 50, 100 ) )","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\t(\\\\fr%s)\\\\fad(20,200)\", Rd( 3, 5 ), R( -360, 360 ) ), tag.glitter( fx.dur, \"\\\\1c\" .. tag.only( R( 4 ) == 1, shape.color4, shape.color3 ), \"\\\\1c\" .. shape.color1 )","Dx1 = R( -0.6*syl.width, 0.6*syl.width );\nDx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 20 )*ratio;\nDy2 = R( 30, 90 )*ratio","Lua",false); table.insert(shape_fx_library, Fire_Syl_LO); table.insert(shape_fx, "Fire Syl LO")
	Flowers_preline_Golden_Time_OP_1 = table.duplicate(Shape_Box); table.inbox(Flowers_preline_Golden_Time_OP_1, "shape[fx]: Flowers preline Golden Time OP 1","Syl",true,false,"#F6F3F3","#9A4715","#6A8DD6","45","45","0","l.start_time + time_li( 55 ) + R( -300, 300 )","fx.start_time + 800 + R( 20 )*10","","","","","syl.center","syl.middle","","","R( 9 )","2","fx.pos_x + R( -20, 20 ), fx.pos_x + R( -200, -100 )","fx.pos_y + R( -20, 20 ), fx.pos_y + R( 20, 50 )*(-1)^R( 2 )","","2","R( 25, 50 )*ratio","\"m 60 57 b 92 62 110 64 110 55 b 110 46 92 48 60 53 m 60 55 b 92 47 109 42 106 34 b 102 26 87 34 59 51 m 60 53 b 86 34 100 22 94 16 b 88 10 76 24 57 50 m 59 51 b 76 23 84 8 76 4 b 68 1 63 18 55 50 m 57 50 b 62 18 64 0 55 0 b 46 0 48 18 53 50 m 55 50 b 47 18 42 1 34 4 b 26 8 34 23 51 51 m 53 50 b 34 24 22 10 16 16 b 10 22 24 34 50 53 m 51 51 b 23 34 8 26 4 34 b 1 42 18 47 50 55 m 50 53 b 18 48 0 46 0 55 b 0 64 18 62 50 57 m 50 55 b 18 63 1 68 4 76 b 8 84 23 76 51 59 m 50 57 b 24 76 10 88 16 94 b 22 100 34 86 53 60 m 51 59 b 34 87 26 102 34 106 b 42 109 47 92 55 60 m 53 60 b 48 92 46 110 55 110 b 64 110 62 92 57 60 m 55 60 b 63 92 68 109 76 106 b 84 102 76 87 59 59 m 57 60 b 76 86 88 100 94 94 b 100 88 86 76 60 57 m 59 59 b 87 76 102 84 106 76 b 109 68 92 63 60 55 m 40 55 b 40 35 70 35 70 55 b 70 75 40 75 40 55 \"","format( \"\\\\blur3\\\\bord0.6\\\\1c%s\\\\t(\\\\frz%s)\\\\fad(50,150)\", random.color( { 0, 360 }, 50 ), R( -360, 360 ) )","","Lua",false); table.insert(shape_fx_library, Flowers_preline_Golden_Time_OP_1); table.insert(shape_fx, "Flowers preline Golden Time OP 1")
	Formule_HL_I = table.duplicate(Shape_Box); table.inbox(Formule_HL_I, "shape[fx]: Formule HL I","Syl",true,false,"#FFFFFF","#FFFFFF","#6A8DD6","255","0","0","l.start_time + syl.start_time - tag.only( syl.i == 1, 200 )","l.start_time + syl.end_time + tag.only( syl.i == syl.n, 200 )","","","","","syl.center","syl.middle","","","5","0","fx.pos_x + Dxi, fx.pos_x + Dxf","fx.pos_y","","1","Size","\"m 50 0 b 22 0 0 22 0 50 l 6 50 b 6 26 26 6 50 6 m 50 100 b 78 100 100 78 100 50 l 94 50 b 94 75 75 94 50 94 m 19 83 b 19 77 11 77 11 83 b 11 89 19 89 19 83 m 89 17 b 89 11 81 11 81 17 b 81 23 89 23 89 17 \"","format( \"\\\\bord2\\\\blur1\\\\shad0\\\\fr%s\\\\t(\\\\fr%s)\", var.line.Ang[ syl.i - 1 ], var.line.Ang[ syl.i ] ), tag.only( syl.i == 1, \"\\\\fad(160,0)\" ), tag.only( syl.i == syl.n, \"\\\\fad(0,160)\" )","Size = 92*ratio;\nDxi = tag.only( syl.i == 1, -syl.width/2 - Size );\nDxf = tag.only( syl.i ~= syl.n, linefx[ii].syl[ syl.i + 1].center - linefx[ii].syl[ syl.i ].center, syl.width/2 + 0.7*Size );\nrotation = function( )\n	local angles = { [0] = R( 360 ) }\n	local line = linefx[ii]\n	local ang\n	for i = 1, line.syl.n do\n		ang = line.syl[i].dur*0.17*(-1)^R( 2 )\n		angles[i] = angles[i - 1] + ang\n	end\n	return angles\nend;\nAng = rotation( )","Lua",false); table.insert(shape_fx_library, Formule_HL_I); table.insert(shape_fx, "Formule HL I")
	Genki_Desuka = table.duplicate(Shape_Box); table.inbox(Genki_Desuka, "shape[fx]: Genki Desuka","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time - 300*module","fx.start_time + syl.dur + delay + R( 300 )","cos( s )/2","sin( s )/2","0","2*pi","syl.center","syl.middle + l.descent/4","Rat","Rat","5","2","fx.pos_x, fx.pos_x + R( -5, 5 )*ratio","fx.pos_y, fx.pos_y + R( -25, -95 )*ratio","fx.dur - delay, fx.dur","0.86 * Rat","8*ratio","shape.shine2t","format( \"\\\\bord0.6\\\\shad0\\\\blur4\\\\3c%s\\\\fad(50,200)\", color.module1( var.line.color1, var.line.color2 ) ), tag.glitter( { fx.dur - delay, fx.dur }, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. color.module1( var.line.color1, var.line.color2 ) )","delay = 650;\nRat = 0.9*math.distance( syl.width, syl.height );\ncolor1 = random.color( );\ncolor2 = random.color( )","Lua",false); table.insert(shape_fx_library, Genki_Desuka); table.insert(shape_fx, "Genki Desuka")
	Hamatora_HL_Triangle = table.duplicate(Shape_Box); table.inbox(Hamatora_HL_Triangle, "shape[fx]: Hamatora HL Triangle","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_l - Size, fx.pos_l - Size + syl.widtht","fx.pos_y","","1","Size","triangle( )","\\fr30","Size = 35*ratio;\ntriangle = function( )\n	maxloop( 5 )\n	local Shapes = {\n		[1] = \"m 0 0 l 100 0 m 50 0 l 0 86 l 100 86 \",\n		[2] = \"m 0 0 l 100 0 m 50 0 l 0 86 l 100 86 \",\n		[3] = \"m 0 0 l 100 0 m 0 86 l 100 86 m 50 58 l 75 43 l 50 0 l 25 43 \",\n		[4] = \"m 0 0 l 100 0 m 0 86 l 100 86 m 50 58 l 25 43 l 0 86 l 50 86 \",\n		[5] = \"m 0 0 l 100 0 m 0 86 l 100 86 m 50 58 l 50 86 l 100 86 l 75 43 \"\n	}\n	local bord = { 11, 8, 5, 5, 5 }\n	local c1 = { \"&HE97D29&\", \"&HE97D29&\", \"&HE97D29&\", \"&HA60BDA&\", \"&H47DEF5&\" }\n	local c3 = { \"&H000000&\", \"&HFFFFFF&\", \"&H000000&\", \"&H000000&\", \"&H000000&\" }\n	local a1 = { \"\\\\1a&HFF&\", \"\\\\1a&HFF&\", \"\", \"\", \"\" }\n	return format( \"{\\\\p1\\\\bord%s\\\\1c%s\\\\3c%s}%s\", bord[j], c1[j], c3[j]..a1[j], Shapes[j] )\nend","Automation Auto-4",false); table.insert(shape_fx_library, Hamatora_HL_Triangle); table.insert(shape_fx, "Hamatora HL Triangle")
	Hanamonogatari_HL_I = table.duplicate(Shape_Box); table.inbox(Hanamonogatari_HL_I, "shape[fx]: Hanamonogatari HL I","Syl",true,false,"#FF1048","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time + syl.dur*module","l.start_time + syl.end_time + 1400 + R( 600 )","","","","","syl.center","syl.middle","","","R( 9 )","0","fx.pos_x, fx.pos_x - R( 400, 560 )*ratio","fx.pos_y, fx.pos_y + R( 50 )*ratio","","ceil( syl.dur/240 )","var.loop.sizes/2","shapes[R( 2 )]","format( \"\\\\bord0\\\\shad0\\\\blur1.4\\\\t(0.8,\\\\fr%s)\\\\t(0,320,\\\\fscx%s\\\\fscy%s)\\\\fad(200,200)\", -0.18*fx.dur, var.loop.sizes, var.loop.sizes )","fxgroup = (syl.i%2 == 1);\nsizes = R( 46, 66 )*ratio;\nshapes = { \"m 50 50 l 75 64 l 100 50 l 75 36 m 50 50 l 64 25 l 50 0 l 36 25 m 50 50 l 25 36 l 0 50 l 25 64 m 50 50 l 36 75 l 50 100 l 64 75 \", \"m 40 48 l 65 62 l 90 48 l 65 34 m 40 48 l 61 29 l 55 0 l 34 20 m 40 48 l 28 22 l 0 19 l 12 45 m 40 48 l 12 51 l 0 77 l 28 74 m 40 48 l 34 76 l 55 96 l 61 67 m 35 48 b 35 42 44 42 44 48 b 44 54 35 54 35 48 \" }","Lua",false); table.insert(shape_fx_library, Hanamonogatari_HL_I); table.insert(shape_fx, "Hanamonogatari HL I")
	Hanamonogatari_HL_II = table.duplicate(Shape_Box); table.inbox(Hanamonogatari_HL_II, "shape[fx]: Hanamonogatari HL II","Syl",true,false,"#FB7C9D","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 920 + R( 600 )","","","","","syl.center","syl.middle","","","R( 9 )","0","fx.pos_x, fx.pos_x - R( 60, 20 )*ratio","fx.pos_y, fx.pos_y + R( 80, 120 )*ratio","","ceil( syl.dur/120 )","0.8*var.loop.sizes/2, var.loop.sizes/2","\"m 0 16 b 5 13 11 11 19 22 b 38 47 62 39 70 16 b 48 26 37 0 19 2 b 10 3 1 9 0 16 \"","format( \"\\\\bord0\\\\shad0\\\\blur1.8\\\\t(0.8,\\\\fr%s)\\\\t(0,320,\\\\fscx%s\\\\fscy%s)\\\\fad(200,200)\\\\t(\\\\frx%s\\\\fry%s)\", -0.18*fx.dur, 0.8*var.loop.sizes, var.loop.sizes, R( -360, 360 ), R( -360, 360 ) )","sizes = R( 36, 46 )*ratio","Lua",false); table.insert(shape_fx_library, Hanamonogatari_HL_II); table.insert(shape_fx, "Hanamonogatari HL II")
	Heart_Multi_HL_Love_Lab_OP_1 = table.duplicate(Shape_Box); table.inbox(Heart_Multi_HL_Love_Lab_OP_1, "shape[fx]: Heart Multi HL Love Lab OP 1","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","45","45","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 300","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","syl.dur/82","40*ratio","shape.heart_b","format( \"\\\\shad0\\\\bord2\\\\blur3\\\\t(\\\\fscx120\\\\fscy120)\\\\3c%s\\\\fad(50,100)\", color.module( color1, color2 ) )","color1 = random.color( { 0, 360 }, 50 );\ncolor2 = random.color( { 0, 360 }, 50 )","Lua",false); table.insert(shape_fx_library, Heart_Multi_HL_Love_Lab_OP_1); table.insert(shape_fx, "Heart Multi HL Love Lab OP 1")
	Hearts_preline_Golden_Time_OP_1 = table.duplicate(Shape_Box); table.inbox(Hearts_preline_Golden_Time_OP_1, "shape[fx]: Hearts preline Golden Time OP 1","Syl",true,false,"#FA0567","#FCB5E0","#6A8DD6","45","45","0","l.start_time + time_li( 50 ) + R( -300, 300 )","fx.start_time + 800 + R( 20 )*10","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -20, 20 ), fx.pos_x + R( -200, -100 )","fx.pos_y + R( -20, 20 ), fx.pos_y + R( 20, 50 )*(-1)^R( 2 )","","R( 3, 5 )","R( 8, 30 )*ratio","shape.heart2t","format( \"\\\\blur1\\\\bord0.6\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(50,150)\", colors[R( 2 )], R( -360, 360 ), R( -360, 360 ), R( -360, 360 ) )","colors ={ shape.color1, shape.color3 }","Lua",false); table.insert(shape_fx_library, Hearts_preline_Golden_Time_OP_1); table.insert(shape_fx, "Hearts preline Golden Time OP 1")
	InXtremes_Shapes_TL_I = table.duplicate(Shape_Box); table.inbox(InXtremes_Shapes_TL_I, "shape[fx]: InXtremes Shapes TL I","Translation Line",true,false,"#FFFFFF","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x +( 0.5*l.width + 0.6*shape.width( mi_shape ) )*(-1)^ceil( j/2 )","fx.pos_y","","4","","mi_shape","format( \"\\\\bord0\\\\shad0\\\\fr%s\\\\1c%s\\\\t(\\\\fr%s)\\\\fad(200,200)\", (j - 1)*90, random.color( ), (j - 1)*90 + 0.26*fx.dur )","Size = 86*ratio;\nmi_shape = shape.size( \"m 0 0 l 100 0 m 0 100 l 100 100 m 50 0 b 37 13 29 30 29 50 l 71 50 b 71 70 63 87 50 100 \", Size )","Lua"); table.insert(shape_fx_library, InXtremes_Shapes_TL_I); table.insert(shape_fx, "InXtremes Shapes TL I")
	InXtremes_Shapes_TL_II = table.duplicate(Shape_Box); table.inbox(InXtremes_Shapes_TL_II, "shape[fx]: InXtremes Shapes TL II","Translation Line",true,false,"#FFD200","#D37A06","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x +( 0.5*l.width + 0.6*shape.width( mi_shape ) )*(-1)^ j","fx.pos_y - 6*ratio","","2","","mi_shape","format( \"\\\\bord2\\\\shad0\\\\blur2\\\\fr%s\\\\fad(200,200)\", 30*(-1)^(j + 1) ), tag.oscill( fx.dur, { 400, 0.8 }, format( \"\\\\fr%s\", 30*(-1)^j ), format( \"\\\\fr%s\", 30*(-1)^(j + 1) ) )","Size = 86*ratio;\nmi_shape = shape.size( \"m 35 31 b 0 36 0 36 25 61 b 20 95 20 95 50 79 b 81 95 81 95 75 61 b 100 36 100 36 65 31 b 50 0 50 0 35 31 m 33 45 b 33 33 43 33 43 45 b 43 58 33 58 33 45 m 57 45 b 57 33 67 33 67 45 b 67 58 57 58 57 45 m 70 66 b 66 73 57 76 50 70 b 42 76 35 73 31 66 l 33 64 b 37 70 43 72 50 67 b 57 72 64 70 68 64 \", Size )","Lua"); table.insert(shape_fx_library, InXtremes_Shapes_TL_II); table.insert(shape_fx, "InXtremes Shapes TL II")
	Jason_Bourne_HL = table.duplicate(Shape_Box); table.inbox(Jason_Bourne_HL, "shape[fx]: Jason Bourne HL","Syl",true,false,"#2DBAFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 680","math.bezier( \"x\", trayectory( ) )","math.bezier( \"y\", trayectory( ) )","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","3*ratio","shape.rectangle","\"\\\\bord0\\\\shad0\\\\fad(40,100)\\\\t(\\\\c&HFFFFFF&)\"","trayectory = function( )\n	local n = ceil( syl.dur/150 )\n	n = 2*(n + 2) - 1\n	local Dx, Dy = syl.height, 0.75*syl.height\n	local xn\n	if syl.i ~= syl.n then\n		xn = linefx[ii].syl[val_i + 1].center - linefx[ii].syl[val_i].center\n	else\n		xn = syl.height\n	end\n	local P = { [1] = {0, 0}, [n] = { ceil( xn ), 0 } }\n	for i = 3, n - 2, 2 do\n		P[i] = { ceil( R( -Dx/4, Dx/4 )*4 ), ceil( R( -Dy/4, Dy/4 )*4 ) }\n	end\n	for i = 2, n - 1, 2 do\n		P[i] = { P[i - 1][1], P[i + 1][2] }\n	end\n	local s = \"m \"\n	for i = 1, #P do\n		s = format( \"%s %s %s l \", s, P[i][1], P[i][2] )\n	end\n	return s:sub( 1, -3 )\nend","Lua",false); table.insert(shape_fx_library, Jason_Bourne_HL); table.insert(shape_fx, "Jason Bourne HL")
	Jason_Bourne_LI = table.duplicate(Shape_Box); table.inbox(Jason_Bourne_LI, "shape[fx]: Jason Bourne LI","Syl",true,false,"#2DBAFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) + 60*module","fx.start_time + 520","math.bezier( \"x\", trayectory( ) )","math.bezier( \"y\", trayectory( ) )","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","3*ratio","shape.rectangle","\"\\\\bord0\\\\shad0\\\\fad(40,300)\\\\t(\\\\c&HFFFFFF&)\"","trayectory = function( )\n	local n = R( 2, 3 )\n	n = 2*(n + 2) - 1\n	local Dx, Dy = syl.height, 0.65*syl.height\n	local xn\n	if syl.i ~= syl.n then\n		xn = linefx[ii].syl[val_i + 1].center - linefx[ii].syl[val_i].center\n	else\n		xn = syl.height\n	end\n	local P = { [1] = {0, 0}, [n] = { ceil( xn ), 0 } }\n	for i = 3, n - 2, 2 do\n		P[i] = { ceil( R( -Dx/4, Dx/4 )*4 ), ceil( R( -Dy/4, Dy/4 )*4 ) }\n	end\n	for i = 2, n - 1, 2 do\n		P[i] = { P[i - 1][1], P[i + 1][2] }\n	end\n	local s = \"m \"\n	for i = 1, #P do\n		s = format( \"%s %s %s l \", s, P[i][1], P[i][2] )\n	end\n	return s:sub( 1, -3 )\nend","Lua",false); table.insert(shape_fx_library, Jason_Bourne_LI); table.insert(shape_fx, "Jason Bourne LI")
	Jason_Bourne_LO = table.duplicate(Shape_Box); table.inbox(Jason_Bourne_LO, "shape[fx]: Jason Bourne LO","Syl",true,false,"#2DBAFF","#008DFF","#000000","0","0","0","l.end_time + time_lo( 60 ) + 60*module","fx.start_time + 520","math.bezier( \"x\", trayectory( ) )","math.bezier( \"y\", trayectory( ) )","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","3*ratio","shape.rectangle","\"\\\\bord0\\\\shad0\\\\fad(40,300)\\\\t(\\\\c&HFFFFFF&)\"","trayectory = function( )\n	local n = R( 2, 3 )\n	n = 2*(n + 2) - 1\n	local Dx, Dy = syl.height, 0.65*syl.height\n	local xn\n	if syl.i ~= syl.n then\n		xn = linefx[ii].syl[val_i + 1].center - linefx[ii].syl[val_i].center\n	else\n		xn = syl.height\n	end\n	local P = { [1] = {0, 0}, [n] = { ceil( xn ), 0 } }\n	for i = 3, n - 2, 2 do\n		P[i] = { ceil( R( -Dx/4, Dx/4 )*4 ), ceil( R( -Dy/4, Dy/4 )*4 ) }\n	end\n	for i = 2, n - 1, 2 do\n		P[i] = { P[i - 1][1], P[i + 1][2] }\n	end\n	local s = \"m \"\n	for i = 1, #P do\n		s = format( \"%s %s %s l \", s, P[i][1], P[i][2] )\n	end\n	return s:sub( 1, -3 )\nend","Lua",false); table.insert(shape_fx_library, Jason_Bourne_LO); table.insert(shape_fx, "Jason Bourne LO")
	Jump_Clasic_Shape_preHilight_I = table.duplicate(Shape_Box); table.inbox(Jump_Clasic_Shape_preHilight_I, "shape[fx]: Jump Clasic Shape preHilight I","Syl",false,false,"#FFFFFF","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)","l.start_time + syl.start_time","","","","","syl.center","syl.middle - 1.25*l.descent","","","5","1","fx.pos_x - var.syl.dx, fx.pos_x - var.syl.dx, fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - 0.75*var.syl.dx, fx.pos_y - 0.75*var.syl.dx, fx.pos_y","","1","20","shape.star","format('\\\\3vc%s\\\\bord0.8\\\\shad0\\\\blur3\\\\t(\\\\fr-72)', color.vc(var.line.hue)), tag.only((syl.i == 1), '\\\\fad(150,0)', '')","hue = random.color(), dx = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center"); table.insert(shape_fx_library, Jump_Clasic_Shape_preHilight_I); table.insert(shape_fx, "Jump Clasic Shape preHilight I")
	Jump_Clasic_Shape_preHilight_II = table.duplicate(Shape_Box); table.inbox(Jump_Clasic_Shape_preHilight_II, "shape[fx]: Jump Clasic Shape preHilight II","Syl",false,false,"#FFFFFF","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - var.syl.dx, fx.pos_x - var.syl.dx, fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - 0.75*var.syl.dx*(-1)^(syl.i + line.i), fx.pos_y - 0.75*var.syl.dx*(-1)^(syl.i + line.i), fx.pos_y","","1","25","shape.star","format('\\\\3vc%s\\\\bord2\\\\shad0\\\\blur4\\\\t(\\\\frx180)', color.vc(var.line.hue)), tag.only((syl.i == 1), '\\\\fad(150,0)', '')","hue = random.color(), dx = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center"); table.insert(shape_fx_library, Jump_Clasic_Shape_preHilight_II); table.insert(shape_fx, "Jump Clasic Shape preHilight II")
	Jump_Clasic_Shape_preHilight_II_Double = table.duplicate(Shape_Box); table.inbox(Jump_Clasic_Shape_preHilight_II_Double, "shape[fx]: Jump Clasic Shape preHilight II Double","Syl",false,false,"#FFFFFF","#3F3C3C","#FFFFFF","20","40","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)","l.start_time + syl.start_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x - var.syl.dx, fx.pos_x - var.syl.dx, fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y - var.syl.dx*(-1)^(syl.i + j), fx.pos_y - var.syl.dx*(-1)^(syl.i + j), fx.pos_y","","2","25","shape.star","format('\\\\3vc%s\\\\bord2\\\\shad0\\\\blur4\\\\t(\\\\frx180)', color.vc(var.line.hue)), tag.only((syl.i == 1), '\\\\fad(150,0)', '')","hue = random.color(), dx = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center"); table.insert(shape_fx_library, Jump_Clasic_Shape_preHilight_II_Double); table.insert(shape_fx, "Jump Clasic Shape preHilight II Double")
	kurisuto_esu_amoru_I = table.duplicate(Shape_Box); table.inbox(kurisuto_esu_amoru_I, "shape[fx]: kurisuto esu amoru I","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time + 400*module","fx.start_time + 1200 + R( 800 )","math.bezier( \"x\", var.syl.P )","math.bezier( \"y\", var.syl.P )","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + R( -dxy, dxy )","fx.pos_y, fx.pos_y + R( -dxy, dxy )","","64","tag.only( J == 1, 2, R( 4, 9 ) )*ratio","tag.only( J == 1, shape.circle, shape.shine2t )","replay( 2 ), \"\\\\bord0\\\\shad0\", tag.only( J == 1, format( \"\\\\t(\\\\fscx%s\\\\fscy%s\\\\blur12)\\\\fad(60,150)\", remember( \"size\", R( 8,16 )*ratio ), recall.size ), tag.glitter( ) )","P = math.point( 5, 100*ratio, 100*ratio, 0, 0, R(-50,50)*ratio, R(-50,50)*ratio );\ndxy = 30*ratio","Lua",false); table.insert(shape_fx_library, kurisuto_esu_amoru_I); table.insert(shape_fx, "kurisuto esu amoru I")
	kurisuto_esu_amoru_II = table.duplicate(Shape_Box); table.inbox(kurisuto_esu_amoru_II, "shape[fx]: kurisuto esu amoru II","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time + 400*(module - 1)","fx.start_time + 1000 + R( 600 )","math.bezier( \"x\", var.syl.P )","math.bezier( \"y\", var.syl.P )","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x + R( -dxy, dxy )","fx.pos_y, fx.pos_y + R( -dxy, dxy )","","86","2*ratio","shape.circle","format( \"\\\\bord0\\\\shad0\\\\t(\\\\fscx%s\\\\fscy%s\\\\blur12)\\\\fad(60,150)\", remember( \"size\", R( 6,12 )*ratio ), recall.size )","P = math.point( 5, 80*ratio, 80*ratio );\ndxy = 30*ratio","Lua",false); table.insert(shape_fx_library, kurisuto_esu_amoru_II); table.insert(shape_fx, "kurisuto esu amoru II")
	Leviatan = table.duplicate(Shape_Box); table.inbox(Leviatan, "shape[fx]: Leviatan","Syl",true,false,"#79A4C3","#E5EDF5","#78CB76","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 400 + R( 160 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + R( 30, 50 )*ratio*(-1)^R( 2 )","fx.pos_y, fx.pos_y + R( 30, 50 )*ratio*(-1)^R( 2 )","","syl.dur/60","","shape.size( shape.circangle, var.loop.Size )","format( \"\\\\shad0\\\\bord3\\\\1c%s\\\\blur1.2\\\\fr%s\\\\t(\\\\fr%s\\\\fscx40\\\\fscy40)\\\\fad(0,200)\", color.interpolate( shape.color1, shape.color4, Rd( 0, 1 ) ), R( -360, 360 ), R( -360, 360 ) )","Size = R( 20, 32 )*ratio","Lua",false); table.insert(shape_fx_library, Leviatan); table.insert(shape_fx, "Leviatan")
	Leviatan_Triangle = table.duplicate(Shape_Box); table.inbox(Leviatan_Triangle, "shape[fx]: Leviatan Triangle","Syl",true,false,"#0099FF","#FFFFFF","#94A1CD","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 400 + R( 160 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + R( 30, 50 )*ratio*(-1)^R( 2 )","fx.pos_y, fx.pos_y + R( 30, 50 )*ratio*(-1)^R( 2 )","","syl.dur/50","","shape.size( mi_shape, var.loop.Size )","format( \"\\\\shad0\\\\bord3\\\\1c%s\\\\blur1.2\\\\fr%s\\\\t(\\\\fr%s\\\\fscx40\\\\fscy40)\\\\fad(0,200)\", color.interpolate( shape.color1, shape.color4, Rd( 0, 1 ) ), R( -360, 360 ), R( -360, 360 ) )","Size = R( 28, 40 )*ratio;\nmi_shape = \"m 39 19 l 12 66 b 5 77 11 86 24 86 l 76 86 b 90 86 95 77 88 66 l 61 19 b 55 8 45 8 39 19 m 0 0 l 100 0 m 0 100 l 100 100 \"","Lua",false); table.insert(shape_fx_library, Leviatan_Triangle); table.insert(shape_fx, "Leviatan Triangle")
	Lupa_HL = table.duplicate(Shape_Box); table.inbox(Lupa_HL, "shape[fx]: Lupa HL","Syl",true,false,"#211F1F","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time - tag.only( syl.i == 1, 200 )","l.start_time + syl.end_time + tag.only( syl.i == syl.n, 200 )","","","","","syl.center","syl.middle","","","5","3","fx.pos_l - Size/2 + dxoff_i, fx.pos_l - Size/2 + dx + dxoff_f","fx.pos_y","","2","Size","shapes[j]","(j == 1) and \"\\\\fr-60\\\\blur1\\\\bord0\" or format( \"\\\\bord0.4\\\\1c&HFFFFFF&\\\\1a&H10&\\\\3c&HFFFFFF&\\\\blur2\\\\fr%s\\\\t(\\\\fr%s)\", var.line.my_angles[syl.i - 1], var.line.my_angles[syl.i] ), tag.only( syl.i == 1, \"\\\\fad(200,0)\" ), tag.only( syl.i == syl.n, \"\\\\fad(0,200)\" )","Size = 80*ratio;\ndxoff_i = tag.only( syl.i == 1, -40*ratio );\ndxoff_f = tag.only( syl.i == syl.n, 15*ratio );\ndx = ((syl.i == syl.n) and syl.width + Size + 5 or linefx[ii].syl[val_i + 1].left - linefx[ii].syl[val_i].left);\nshapes = { \"m 0 0 l 100 0 m 50 82 b 22 82 0 104 0 132 b 0 160 22 182 50 182 b 78 182 100 160 100 132 b 100 104 78 82 50 82 m 97 132 b 97 158 76 179 50 179 b 24 179 3 158 3 132 b 3 106 24 85 50 85 b 76 85 97 106 97 132 m 46 181 l 46 190 l 38 190 l 38 193 l 42 193 l 40 264 l 60 264 l 58 193 l 62 193 l 62 190 l 54 190 l 54 181 \", \"m 0 0 l 100 0 m 0 264 l 100 264 m 50 82 b 22 82 0 104 0 132 b 0 160 22 182 50 182 b 78 182 100 160 100 132 b 100 104 78 82 50 82 m 98 132 b 98 159 77 180 50 180 b 23 180 2 159 2 132 b 2 105 24 84 50 84 b 25 97 88 127 85 99 b 93 108 98 120 98 132 m 64 117 b 63 121 72 123 73 120 b 74 116 66 114 64 117 m 13 153 b 12 157 20 159 21 156 b 22 152 15 150 13 153 \" };\nrotation = function( )\n	local angles = { [0] = 0 }\n	for i = 1, linefx[ii].syl.n do\n		angles[i] = angles[i - 1] + linefx[ii].syl[i].duration * 0.14 * (-1)^R( 2 )\n	end\n	return angles\nend;\nmy_angles = rotation( )","Lua",false); table.insert(shape_fx_library, Lupa_HL); table.insert(shape_fx, "Lupa HL")
	Math_Bezier_HL_I = table.duplicate(Shape_Box); table.inbox(Math_Bezier_HL_I, "shape[fx]: Math Bezier HL I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + 200*module^0.8","fx.start_time + 500","math.bezier( \"x\", my_point )","math.bezier( \"y\", my_point )","0","pi","syl.center","syl.middle","1","0.8","5","2","fx.pos_x","fx.pos_y","100, fx.dur","ceil( 0.45*math.length_bezier( my_point ) )","R( 6, 8 )*ratio","shape.shine1t","tag.glitter( fx.dur ), \"\\\\bord0\\\\blur0\\\\fad(50,200)\"","my_point = math.point( 5, 1.5*syl.height, 1.5*syl.height, -syl.width/2, R( -0.2*syl.height, 0.2*syl.height ), syl.width/2, R( -0.2*syl.height, 0.2*syl.height ) )","Lua",false); table.insert(shape_fx_library, Math_Bezier_HL_I); table.insert(shape_fx, "Math Bezier HL I")
	Math_Bezier_HL_II = table.duplicate(Shape_Box); table.inbox(Math_Bezier_HL_II, "shape[fx]: Math Bezier HL II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module^0.8","fx.start_time + 600 + ((var.loop.D == 16) and 1000 or 0)","math.bezier( \"x\", my_point )","math.bezier( \"y\", my_point )","","","syl.center","syl.middle","1","0.8","5","2","fx.pos_x","fx.pos_y","100, fx.dur","ceil( 0.45*math.length_bezier( my_point ) )","(var.loop.D == 16) and 10*ratio or 7.4*ratio","(var.loop.D == 16) and shape.shine2t or shape.shine1t","\"\\\\bord0\\\\fad(20,200)\\\\3c\" .. random.color( ), tag.only( var.loop.D == 16, tag.glitter(fx.dur, \"\\\\bord0.5\\\\blur4\", \"\\\\bord0\\\\blur0\" ), tag.glitter( ) )","my_point = math.point( 4, 1.5*syl.height, 1.5*syl.height, -syl.width/2 - syl.prespacewidth, 0, syl.width/2 + syl.postspacewidth, 0 );\nD = R( 65 )","Lua",false); table.insert(shape_fx_library, Math_Bezier_HL_II); table.insert(shape_fx, "Math Bezier HL II")
	Math_Bezier_HL_III = table.duplicate(Shape_Box); table.inbox(Math_Bezier_HL_III, "shape[fx]: Math Bezier HL III","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + syl.dur*module^0.8","fx.start_time + 600 + ((var.loop.D == 16) and 1000 or 0)","math.bezier( \"x\", my_point )","math.bezier( \"y\", my_point )","","","syl.center","syl.middle","","0.8","5","2","fx.pos_x","fx.pos_y","","ceil( 0.5*math.length_bezier( my_point ) )","(var.loop.D == 16) and 8.8*ratio or 3*ratio","(var.loop.D == 16) and shape.shine2t or shape.circle","format( \"\\\\bord0\\\\fad(20,200)\\\\3c%s\", color.module1( var.line.c1, var.line.c2 ) ), tag.only( var.loop.D == 16, tag.glitter( fx.dur, \"\\\\bord0.5\\\\blur4\", \"\\\\bord0\\\\blur0\" ), \"\\\\bord0.2\\\\blur4\" )","my_point = math.point( 4, 1.5*syl.height, 1.3*syl.height, -syl.width/2 - syl.prespacewidth, 0, syl.width/2 + syl.postspacewidth, 0 );\nD = R( 65 );\nc1 = random.color( { 180, 540 } );\nc2 = random.color( 360 )","Lua",false); table.insert(shape_fx_library, Math_Bezier_HL_III); table.insert(shape_fx, "Math Bezier HL III")
	Motor_Gear = table.duplicate(Shape_Box); table.inbox(Motor_Gear, "shape[fx]: Motor Gear","Syl",false,false,"#FADE22","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_l - Size/2, fx.pos_l - Size/2 + syl.widtht","fx.pos_y","","1","","shape.size( shape.gear, Size )","format( \"\\\\bord0\\\\fr%s\\\\t(\\\\fr%s)\", -0.32*syl.start_time, -0.32*syl.end_time )","Size = 80*ratio","Lua",false); table.insert(shape_fx_library, Motor_Gear); table.insert(shape_fx, "Motor Gear")
	Motor_Gear_Intro = table.duplicate(Shape_Box); table.inbox(Motor_Gear_Intro, "shape[fx]: Motor Gear Intro","Syl",false,false,"#FADE22","#3F3C3C","#FFFFFF","0","0","0","l.start_time - 400","l.start_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_l - Size/2 - 120*ratio, fx.pos_l - Size/2","fx.pos_y","","1","","(syl.i == 1) and shape.size( shape.gear, Size ) or nil","format( \"\\\\fad(200,0)\\\\bord0\\\\fr%s\\\\t(\\\\fr0)\", 0.32*fx.dur )","Size = 80*ratio","Lua",false); table.insert(shape_fx_library, Motor_Gear_Intro); table.insert(shape_fx, "Motor Gear Intro")
	Motor_Gear_Outro = table.duplicate(Shape_Box); table.inbox(Motor_Gear_Outro, "shape[fx]: Motor Gear Outro","Syl",false,false,"#FADE22","#3F3C3C","#FFFFFF","0","0","0","l.end_time","l.end_time + 400","","","","","syl.center","syl.middle","","","5","2","fx.pos_l - Size/2 + syl.widtht, fx.pos_l - Size/2 + syl.widtht + 120*ratio","fx.pos_y","","1","","(syl.i == syl.n) and shape.size( shape.gear, Size ) or nil","format( \"\\\\fad(0,200)\\\\bord0\\\\fr%s\\\\t(\\\\fr%s)\", -0.32*syl.end_time, 0.32*(syl.end_time + syl.dur) )","Size = 80*ratio","Lua",false); table.insert(shape_fx_library, Motor_Gear_Outro); table.insert(shape_fx, "Motor Gear Outro")
	Natsuo_ADN = table.duplicate(Shape_Box); table.inbox(Natsuo_ADN, "shape[fx]: Natsuo ADN","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 100","l.end_time + 100","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","l.height + 5","shape.animated2( fx.dur, 75, table_code_ADN )","\"\\\\bord0\\\\shad0\\\\fad(200,200)\"","loops = 6;\nangle = 0;\nDxy=-15;\nadn1= \"m 0 0 l 286 0 m 0 113 l 286 113 m 30 63 b 23 63 18 68 18 75 b 18 82 23 87 30 87 b 37 87 42 82 42 75 b 42 68 37 63 30 63 m 58 45 b 51 45 46 50 46 57 b 46 63 51 69 58 69 b 64 69 70 63 70 57 b 70 50 64 45 58 45 m 82 26 b 76 26 71 31 71 38 b 71 44 76 49 82 49 b 89 49 94 44 94 38 b 94 31 89 26 82 26 m 107 12 b 101 12 96 17 96 24 b 96 30 101 35 107 35 b 113 35 118 30 118 24 b 118 17 113 12 107 12 m 130 4 b 124 4 119 9 119 15 b 119 21 124 25 130 25 b 136 25 141 21 141 15 b 141 9 136 4 130 4 m 153 0 b 147 0 143 4 143 10 b 143 15 147 20 153 20 b 158 20 163 15 163 10 b 163 4 158 0 153 0 m 175 2 b 170 2 166 6 166 11 b 166 16 170 20 175 20 b 180 20 184 16 184 11 b 184 6 180 2 175 2 m 200 8 b 195 8 191 12 191 17 b 191 22 195 26 200 26 b 205 26 209 22 209 17 b 209 12 205 8 200 8 m 225 16 b 221 16 217 20 217 24 b 217 29 221 33 225 33 b 230 33 234 29 234 24 b 234 20 230 16 225 16 m 249 27 b 245 27 242 30 242 34 b 242 38 245 41 249 41 b 253 41 256 38 256 34 b 256 30 253 27 249 27 m 7 41 b 3 41 0 44 0 48 b 0 52 3 55 7 55 b 11 55 14 52 14 48 b 14 44 11 41 7 41 m 33 51 b 30 51 27 54 27 57 b 27 61 30 64 33 64 b 37 64 40 61 40 57 b 40 54 37 51 33 51 m 61 60 b 58 60 55 63 55 66 b 55 70 58 73 61 73 b 65 73 68 70 68 66 b 68 63 65 60 61 60 m 90 70 b 86 70 83 73 83 77 b 83 81 86 84 90 84 b 94 84 97 81 97 77 b 97 73 94 70 90 70 m 118 79 b 114 79 111 82 111 86 b 111 90 114 93 118 93 b 122 93 125 90 125 86 b 125 82 122 79 118 79 m 147 85 b 143 85 139 89 139 93 b 139 97 143 101 147 101 b 151 101 155 97 155 93 b 155 89 151 85 147 85 m 176 90 b 171 90 167 94 167 99 b 167 104 171 108 176 108 b 181 108 185 104 185 99 b 185 94 181 90 176 90 m 206 91 b 201 91 197 95 197 100 b 197 106 201 110 206 110 b 212 110 216 106 216 100 b 216 95 212 91 206 91 m 238 85 b 232 85 227 90 227 96 b 227 102 232 107 238 107 b 244 107 249 102 249 96 b 249 90 244 85 238 85 m 268 76 b 261 76 256 81 256 88 b 256 95 261 100 268 100 b 275 100 280 95 280 88 b 280 81 275 76 268 76 m 9 53 l 22 70 l 24 68 l 10 50 m 38 59 l 48 58 l 48 55 l 38 56 m 75 43 l 64 65 l 67 67 l 78 45 m 102 31 l 89 73 l 92 74 l 106 33 m 126 21 l 116 81 l 120 82 l 130 22 m 150 17 l 145 88 l 150 88 l 154 18 m 173 17 l 173 93 l 178 93 l 177 17 m 198 24 l 203 93 l 208 93 l 202 24 m 223 30 l 233 90 l 238 89 l 227 30 m 249 38 l 263 81 l 267 79 l 252 37 \";\nadn2 = \"m 0 0 l 286 0 m 0 113 l 286 113 m 12 21 b 8 21 5 24 5 28 b 5 32 8 35 12 35 b 16 35 19 32 19 28 b 19 24 16 21 12 21 m 37 31 b 34 31 31 34 31 37 b 31 41 34 44 37 44 b 41 44 44 41 44 37 b 44 34 41 31 37 31 m 63 41 b 60 41 57 44 57 47 b 57 51 60 54 63 54 b 67 54 70 51 70 47 b 70 44 67 41 63 41 m 89 51 b 86 51 83 54 83 57 b 83 61 86 64 89 64 b 93 64 96 61 96 57 b 96 54 93 51 89 51 m 144 71 b 141 71 138 74 138 77 b 138 81 141 84 144 84 b 148 84 151 81 151 77 b 151 74 148 71 144 71 m 172 79 b 169 79 166 82 166 85 b 166 89 169 92 172 92 b 176 92 179 89 179 85 b 179 82 176 79 172 79 m 202 85 b 197 85 194 88 194 93 b 194 97 197 101 202 101 b 206 101 210 97 210 93 b 210 88 206 85 202 85 m 231 89 b 225 89 221 93 221 99 b 221 104 225 109 231 109 b 236 109 241 104 241 99 b 241 93 236 89 231 89 m 262 91 b 256 91 252 95 252 101 b 252 106 256 111 262 111 b 267 111 272 106 272 101 b 272 95 267 91 262 91 m 27 88 b 21 88 16 93 16 99 b 16 105 21 110 27 110 b 33 110 38 105 38 99 b 38 93 33 88 27 88 m 57 79 b 51 79 46 84 46 90 b 46 96 51 101 57 101 b 63 101 68 96 68 90 b 68 84 63 79 57 79 m 85 64 b 79 64 74 69 74 75 b 74 82 79 87 85 87 b 92 87 97 82 97 75 b 97 69 92 64 85 64 m 113 45 b 107 45 102 50 102 56 b 102 63 107 68 113 68 b 120 68 125 63 125 56 b 125 50 120 45 113 45 m 139 26 b 133 26 128 31 128 37 b 128 44 133 49 139 49 b 146 49 151 44 151 37 b 151 31 146 26 139 26 m 162 13 b 157 13 152 18 152 23 b 152 30 157 35 162 35 b 169 35 174 30 174 23 b 174 18 169 13 162 13 m 186 5 b 180 5 176 9 176 15 b 176 21 180 25 186 25 b 192 25 196 21 196 15 b 196 9 192 5 186 5 m 209 0 b 203 0 199 4 199 10 b 199 16 203 20 209 20 b 215 20 219 16 219 10 b 219 4 215 0 209 0 m 231 3 b 227 3 223 6 223 11 b 223 17 227 20 231 20 b 237 20 240 17 240 11 b 240 6 237 3 231 3 m 257 10 b 253 10 249 13 249 18 b 249 23 253 26 257 26 b 262 26 265 23 265 18 b 265 13 262 10 257 10 m 11 32 l 22 91 l 26 90 l 14 31 m 37 42 l 51 82 l 55 81 l 40 41 m 64 51 l 78 70 l 81 69 l 67 50 m 93 55 l 93 58 l 103 58 l 103 55 m 158 30 l 144 73 l 148 74 l 162 31 m 171 81 l 175 81 l 187 21 l 182 20 m 200 88 l 204 88 l 210 18 l 206 18 m 230 16 l 229 92 l 233 92 l 234 16 m 259 95 l 264 94 l 258 22 l 254 22 m 116 54 b 111 54 106 59 106 64 b 106 69 111 74 116 74 b 121 74 126 69 126 64 b 126 59 121 54 116 54 m 132 43 l 119 61 l 122 64 l 135 46 \";\nadn3 =\"m 0 0 l 286 0 m 0 113 l 286 113 m 16 5 b 10 5 7 9 7 14 b 7 19 10 23 16 23 b 22 23 25 19 25 14 b 25 9 22 5 16 5 m 19 93 b 13 93 10 97 10 102 b 10 107 13 111 19 111 b 25 111 28 107 28 102 b 28 97 25 93 19 93 m 50 94 b 44 94 41 98 41 103 b 41 108 44 112 50 112 b 56 112 59 108 59 103 b 59 98 56 94 50 94 m 81 89 b 74 89 71 93 71 99 b 71 104 74 108 81 108 b 87 108 90 104 90 99 b 90 93 87 89 81 89 m 112 79 b 104 79 101 83 101 90 b 101 95 104 100 112 100 b 118 100 122 95 122 90 b 122 83 118 79 112 79 m 140 63 b 131 63 128 67 128 75 b 128 80 131 86 140 86 b 147 86 151 80 151 75 b 151 67 147 63 140 63 m 168 44 b 160 44 155 50 156 57 b 156 62 159 68 168 68 b 175 68 179 62 179 57 b 179 49 175 44 168 44 m 194 26 b 187 26 182 30 182 38 b 182 43 185 49 194 49 b 201 49 205 43 205 38 b 205 30 201 26 194 26 m 218 13 b 212 13 206 17 206 25 b 206 30 209 36 218 36 b 225 36 229 30 229 25 b 229 17 225 13 218 13 m 240 3 b 233 3 229 8 229 14 b 229 20 233 25 240 25 b 246 25 251 20 251 14 b 251 8 246 3 240 3 m 264 1 b 258 1 254 4 254 11 b 254 15 258 20 264 20 b 269 20 273 15 273 11 b 273 4 269 1 264 1 m 257 84 b 251 84 248 87 248 93 b 248 97 251 101 257 101 b 261 101 265 97 265 93 b 265 87 261 84 257 84 m 227 78 b 222 78 219 81 219 86 b 219 90 222 94 227 94 b 231 94 235 90 235 86 b 235 81 231 78 227 78 m 198 70 b 195 70 192 73 192 76 b 192 80 194 83 198 83 b 203 83 205 80 205 76 b 205 73 202 70 198 70 m 170 60 b 167 60 164 63 164 66 b 164 70 167 73 170 73 b 174 73 177 70 177 66 b 177 63 174 60 170 60 m 143 50 b 140 50 137 53 137 56 b 137 60 140 63 143 63 b 147 63 150 60 150 56 b 150 53 147 50 143 50 m 117 40 b 114 40 111 43 111 46 b 111 50 114 53 117 53 b 121 53 124 50 124 46 b 124 43 121 40 117 40 m 91 30 b 88 30 85 33 85 36 b 85 40 88 43 91 43 b 95 43 98 40 98 36 b 98 33 95 30 91 30 m 67 20 b 63 20 60 24 60 27 b 60 31 63 34 67 34 b 71 34 74 31 74 27 b 74 24 71 20 67 20 m 42 13 b 38 13 34 17 34 20 b 34 24 38 28 42 28 b 47 28 50 24 50 20 b 50 17 47 13 42 13 m 15 20 l 17 96 l 21 96 l 19 20 m 40 25 l 46 99 l 51 98 l 44 24 m 66 32 l 77 93 l 81 92 l 69 31 m 92 41 l 106 84 l 110 82 l 94 40 m 118 50 l 131 67 l 134 65 l 120 48 m 148 55 l 148 58 l 158 57 l 158 54 m 186 42 l 172 65 l 174 67 l 189 44 m 212 32 l 198 73 l 201 75 l 215 34 m 236 22 l 226 81 l 230 82 l 239 24 m 261 16 l 255 88 l 259 88 l 265 17 \";\nadn4 = \"m 0 0 l 286 0 m 0 113 l 286 113 m 21 3 b 15 3 11 7 11 13 b 11 19 15 23 21 23 b 27 23 31 19 31 13 b 31 7 27 3 21 3 m 44 5 b 39 5 35 9 35 14 b 35 19 39 23 44 23 b 49 23 53 19 53 14 b 53 9 49 5 44 5 m 68 12 b 63 12 59 16 59 21 b 59 25 63 29 68 29 b 72 29 76 25 76 21 b 76 16 72 12 68 12 m 94 19 b 89 19 86 22 86 27 b 86 30 89 34 94 34 b 97 34 101 30 101 27 b 101 22 97 19 94 19 m 118 29 b 114 29 111 32 111 36 b 111 39 114 43 118 43 b 121 43 125 39 125 36 b 125 32 121 29 118 29 m 144 40 b 140 40 137 43 137 47 b 137 50 140 54 144 54 b 147 54 151 50 151 47 b 151 43 147 40 144 40 m 170 50 b 166 50 163 53 163 57 b 163 60 166 64 170 64 b 173 64 177 60 177 57 b 177 53 173 50 170 50 m 197 59 b 193 59 190 62 190 66 b 190 69 193 73 197 73 b 203 73 204 69 204 66 b 204 62 200 59 197 59 m 225 70 b 221 70 218 73 218 77 b 218 80 220 84 225 84 b 230 84 232 80 232 77 b 232 73 228 70 225 70 m 253 79 b 249 79 246 82 246 86 b 246 89 249 93 253 93 b 257 93 260 89 260 86 b 260 82 256 79 253 79 m 268 4 b 262 4 257 9 257 15 b 257 20 262 25 268 25 b 273 25 278 20 278 15 b 278 9 273 4 268 4 m 245 13 b 238 13 233 18 233 25 b 233 30 238 35 245 35 b 250 35 255 30 255 25 b 255 18 250 13 245 13 m 221 26 b 214 26 209 31 209 38 b 209 43 214 48 221 48 b 226 48 231 43 231 38 b 231 31 226 26 221 26 m 194 45 b 187 45 182 50 182 57 b 182 63 187 68 194 68 b 200 68 205 63 205 57 b 205 50 200 45 194 45 m 166 63 b 159 63 154 68 154 75 b 154 81 159 86 166 86 b 172 86 177 81 177 75 b 177 68 172 63 166 63 m 137 78 b 130 78 125 83 125 90 b 125 96 130 101 137 101 b 143 101 148 96 148 90 b 148 83 143 78 137 78 m 108 88 b 101 88 97 92 97 99 b 97 105 101 109 108 109 b 114 109 118 105 118 99 b 118 92 114 88 108 88 m 77 93 b 71 93 67 97 67 103 b 67 109 71 113 77 113 b 83 113 87 109 87 103 b 87 97 83 93 77 93 m 45 92 b 40 92 36 96 36 101 b 36 107 40 110 45 110 b 51 110 54 107 54 101 b 54 96 51 92 45 92 m 16 87 b 12 87 8 91 8 95 b 8 101 12 104 16 104 b 22 104 25 101 25 95 b 25 91 22 87 16 87 m 18 20 l 14 89 l 18 89 l 22 20 m 42 20 l 43 98 l 47 98 l 46 20 m 66 26 l 73 97 l 77 96 l 70 26 m 92 32 l 104 94 l 107 91 l 95 31 m 117 41 l 131 81 l 135 79 l 120 40 m 145 51 l 160 69 l 162 67 l 147 49 m 174 55 l 174 58 l 185 57 l 184 54 m 213 42 l 199 63 l 202 66 l 216 45 m 239 31 l 224 74 l 228 76 l 242 33 m 263 22 l 253 82 l 256 83 l 267 23 \";\nadn5 = \"m 0 0 l 286 0 m 0 113 l 286 113 m 29 15 b 23 15 18 20 18 26 b 18 33 23 38 29 38 b 36 38 41 33 41 26 b 41 20 36 15 29 15 m 219 62 b 213 62 208 67 208 73 b 208 80 213 85 219 85 b 226 85 231 80 231 73 b 231 67 226 62 219 62 m 190 77 b 184 77 179 82 179 88 b 179 95 184 100 190 100 b 197 100 202 95 202 88 b 202 82 197 77 190 77 m 130 93 b 125 93 121 97 121 102 b 121 107 125 111 130 111 b 135 111 139 107 139 102 b 139 97 135 93 130 93 m 161 87 b 155 87 151 91 151 97 b 151 103 155 107 161 107 b 167 107 171 103 171 97 b 171 91 167 87 161 87 m 100 92 b 95 92 91 96 91 101 b 91 105 95 109 100 109 b 104 109 108 105 108 101 b 108 96 104 92 100 92 m 70 86 b 66 86 62 90 62 94 b 62 98 66 102 70 102 b 74 102 78 98 78 94 b 78 90 74 86 70 86 m 41 80 b 37 80 34 83 34 87 b 34 91 37 94 41 94 b 45 94 48 91 48 87 b 48 83 45 80 41 80 m 12 72 b 8 72 5 75 5 79 b 5 83 8 86 12 86 b 16 86 19 83 19 79 b 19 75 16 72 12 72 m 53 6 b 47 6 42 11 42 17 b 42 22 47 27 53 27 b 58 27 63 22 63 17 b 63 11 58 6 53 6 m 75 2 b 70 2 65 7 65 12 b 65 17 70 22 75 22 b 80 22 85 17 85 12 b 85 7 80 2 75 2 m 98 4 b 93 4 89 8 89 13 b 89 18 93 22 98 22 b 103 22 107 18 107 13 b 107 8 103 4 98 4 m 122 11 b 118 11 114 15 114 19 b 114 24 118 27 122 27 b 127 27 130 24 130 19 b 130 15 127 11 122 11 m 147 19 b 143 19 140 22 140 26 b 140 30 143 33 147 33 b 151 33 154 30 154 26 b 154 22 151 19 147 19 m 172 29 b 168 29 165 32 165 36 b 165 40 168 43 172 43 b 176 43 179 40 179 36 b 179 32 176 29 172 29 m 198 39 b 194 39 191 42 191 46 b 191 50 194 53 198 53 b 202 53 205 50 205 46 b 205 42 202 39 198 39 m 224 50 b 220 50 217 53 217 57 b 217 61 220 64 224 64 b 228 64 231 61 231 57 b 231 53 228 50 224 50 m 251 60 b 247 60 244 63 244 67 b 244 71 247 74 251 74 b 255 74 258 71 258 67 b 258 63 255 60 251 60 m 248 43 b 240 43 235 48 235 56 b 235 62 240 68 248 68 b 254 68 260 62 260 56 b 260 48 254 43 248 43 m 275 25 b 268 25 263 30 263 37 b 263 43 268 48 275 48 b 281 48 286 43 286 37 b 286 30 281 25 275 25 m 24 33 l 11 75 l 14 76 l 27 35 m 49 24 l 40 81 l 43 82 l 53 25 m 73 19 l 69 90 l 73 90 l 76 20 m 97 94 l 101 94 l 100 20 l 96 20 m 121 24 l 127 96 l 131 95 l 124 24 m 146 31 l 156 90 l 160 89 l 149 31 m 172 40 l 185 80 l 188 79 l 175 40 m 198 51 l 213 68 l 215 66 l 201 50 m 229 55 l 229 58 l 238 56 l 238 53 m 267 43 l 253 66 l 255 67 l 269 45 \";\nadn6 = \"m 0 0 l 286 0 m 0 113 l 286 113 m 182 92 b 177 92 173 96 173 101 b 173 106 177 110 182 110 b 187 110 191 106 191 101 b 191 96 187 92 182 92 m 213 86 b 208 86 203 91 203 96 b 203 102 208 106 213 106 b 219 106 223 102 223 96 b 223 91 219 86 213 86 m 9 51 b 5 51 2 54 2 58 b 2 62 5 65 9 65 b 13 65 16 62 16 58 b 16 54 13 51 9 51 m 37 61 b 33 61 30 64 30 68 b 30 72 33 75 37 75 b 41 75 44 72 44 68 b 44 64 41 61 37 61 m 272 62 b 266 62 261 67 261 73 b 261 80 266 85 272 85 b 279 85 284 80 284 73 b 284 67 279 62 272 62 m 243 77 b 237 77 232 82 232 88 b 232 95 237 100 243 100 b 250 100 255 95 255 88 b 255 82 250 77 243 77 m 151 91 b 146 91 142 95 142 100 b 142 105 146 109 151 109 b 156 109 160 105 160 100 b 160 95 156 91 151 91 m 123 86 b 119 86 115 90 115 94 b 115 98 119 102 123 102 b 127 102 131 98 131 94 b 131 90 127 86 123 86 m 66 72 b 62 72 59 75 59 79 b 59 82 62 85 66 85 b 69 85 72 82 72 79 b 72 75 69 72 66 72 m 95 80 b 91 80 88 83 88 87 b 88 90 91 93 95 93 b 98 93 101 90 101 87 b 101 83 98 80 95 80 m 252 39 b 248 39 245 42 245 46 b 245 49 248 52 252 52 b 255 52 258 49 258 46 b 258 42 255 39 252 39 m 226 29 b 222 29 219 32 219 36 b 219 39 222 42 226 42 b 229 42 232 39 232 36 b 232 32 229 29 226 29 m 201 19 b 197 19 194 22 194 26 b 194 29 197 32 201 32 b 204 32 207 29 207 26 b 207 22 204 19 201 19 m 175 11 b 171 11 167 15 167 19 b 167 23 171 27 175 27 b 179 27 183 23 183 19 b 183 15 179 11 175 11 m 59 28 b 53 28 48 33 48 39 b 48 45 53 50 59 50 b 65 50 70 45 70 39 b 70 33 65 28 59 28 m 83 14 b 77 14 72 19 72 25 b 72 31 77 36 83 36 b 89 36 94 31 94 25 b 94 19 89 14 83 14 m 128 1 b 123 1 118 6 118 11 b 118 17 123 21 128 21 b 134 21 138 17 138 11 b 138 6 134 1 128 1 m 106 6 b 101 6 96 11 96 16 b 96 22 101 26 106 26 b 112 26 116 22 116 16 b 116 11 112 6 106 6 m 151 3 b 146 3 142 7 142 12 b 142 17 146 21 151 21 b 156 21 160 17 160 12 b 160 7 156 3 151 3 m 34 45 b 26 45 21 50 21 58 b 21 64 26 70 34 70 b 40 70 46 64 46 58 b 46 50 40 45 34 45 m 14 57 l 14 60 l 22 60 l 22 57 m 53 44 l 38 65 l 41 67 l 56 46 m 79 32 l 65 74 l 69 75 l 83 32 m 102 22 l 93 84 l 97 85 l 105 24 m 126 18 l 121 89 l 125 89 l 130 18 m 150 20 l 150 94 l 154 93 l 153 20 m 173 25 l 179 97 l 184 96 l 177 25 m 199 29 l 209 91 l 214 90 l 203 29 m 225 39 l 240 82 l 243 80 l 228 38 m 252 50 l 267 68 l 269 65 l 254 48 \";\ntable_code_ADN = { shape.array( adn1, loops, angle, Dxy ), shape.array( adn2, loops, angle, Dxy ), shape.array( adn3, loops, angle, Dxy ), shape.array( adn4, loops, angle, Dxy ), shape.array( adn5, loops, angle, Dxy ), shape.array( adn6, loops, angle, Dxy ) }","Lua",false); table.insert(shape_fx_library, Natsuo_ADN); table.insert(shape_fx, "Natsuo ADN")
	Natsuo_Atom_HL = table.duplicate(Shape_Box); table.inbox(Natsuo_Atom_HL, "shape[fx]: Natsuo Atom HL","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_l, fx.pos_r","fx.pos_y","","1","80*ratio","atom( )","\"\\\\bord0\\\\shad0\"","atom = function( )\n	local S = \"m 27 0 b 12 0 0 22 0 50 b 0 78 12 100 27 100 b 43 100 55 78 55 50 b 55 22 43 0 27 0 m 27 3 b 41 3 52 24 52 50 b 52 76 41 97 27 97 b 14 97 3 76 3 50 b 3 24 14 3 27 3 m 42 20 b 42 28 54 28 54 20 b 54 12 42 12 42 20 \"\n	maxloop( 3 )\n	if j == 1 then\n		return format( \"{\\\\1c&HFDC81B&\\\\fr0\\\\frx%s\\\\fry%s\\\\t(\\\\frx%s\\\\fry%s)}%s\", syl.start_time/2, syl.start_time/2.47, syl.end_time/2, syl.end_time/3.47, S )\n	elseif j == 2 then\n		return format( \"{\\\\1c&H0F8CFF&\\\\fr60\\\\frx%s\\\\fry%s\\\\t(\\\\frx%s\\\\fry%s)}%s\", syl.start_time/3, syl.start_time/-2.31, syl.end_time/3, syl.end_time/-2.31, S )\n	end\n	return format( \"{\\\\1c&H37FF39&\\\\fr-240\\\\frx%s\\\\fry%s\\\\t(\\\\frx%s\\\\fry%s)}%s\", syl.start_time/-2.31, syl.start_time/2.47, syl.end_time/-2.31, syl.end_time/3.47, S )\nend","Lua",false); table.insert(shape_fx_library, Natsuo_Atom_HL); table.insert(shape_fx, "Natsuo Atom HL")
	Natsuo_Smoke_HL_I = table.duplicate(Shape_Box); table.inbox(Natsuo_Smoke_HL_I, "shape[fx]: Natsuo Smoke HL I","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 860 + R( 440 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.x1, fx.pos_x + var.loop.x2","fx.pos_y + var.loop.y1, fx.pos_y + var.loop.y2","","syl.dur/16","R( 12, 24 )*ratio","shape.circle","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\1a%s\\\\fad(200,200)\", R( 7, 14 ), random.alpha( 80, 150 ) )","x1 = R( -syl.width/2, syl.width/2 );\nx2 = R( -0.75*syl.width, 0.75*syl.width );\ny1 = R( -0.4*syl.height, 0.4*syl.height );\ny2 = R( -2*syl.height, -syl.height )","Lua",false); table.insert(shape_fx_library, Natsuo_Smoke_HL_I); table.insert(shape_fx, "Natsuo Smoke HL I")
	Natsuo_Smoke_postline = table.duplicate(Shape_Box); table.inbox(Natsuo_Smoke_postline, "shape[fx]: Natsuo Smoke postline","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.end_time + time_lo( 50 ) + R( -400, 0 )","fx.start_time + 860 + R( 440 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.x1, fx.pos_x + var.loop.x2","fx.pos_y + var.loop.y1, fx.pos_y + var.loop.y2","","R( 8, 16 )","R( 12, 24 )*ratio","shape.circle","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\1a%s\\\\fad(200,200)\", R( 7, 14 ), random.alpha( 80, 150 ) )","x1 = R( -syl.width/2, syl.width/2 );\nx2 = R( -0.75*syl.width, 0.75*syl.width );\ny1 = R( -0.4*syl.height, 0.4*syl.height );\ny2 = R( -2*syl.height, -syl.height )","Lua",false); table.insert(shape_fx_library, Natsuo_Smoke_postline); table.insert(shape_fx, "Natsuo Smoke postline")
	Natsuo_Smoke_preline = table.duplicate(Shape_Box); table.inbox(Natsuo_Smoke_preline, "shape[fx]: Natsuo Smoke preline","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 50 ) + R( -400, 0 )","fx.start_time + 860 + R( 440 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.x1, fx.pos_x + var.loop.x2","fx.pos_y + var.loop.y1, fx.pos_y + var.loop.y2","","R( 8, 16 )","R( 12, 24 )*ratio","shape.circle","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\1a%s\\\\fad(200,200)\", R( 7, 14 ), random.alpha( 80, 150 ) )","x1 = R( -syl.width/2, syl.width/2 );\nx2 = R( -0.75*syl.width, 0.75*syl.width );\ny1 = R( -0.4*syl.height, 0.4*syl.height );\ny2 = R( -2*syl.height, -syl.height )","Lua",false); table.insert(shape_fx_library, Natsuo_Smoke_preline); table.insert(shape_fx, "Natsuo Smoke preline")
	Paint_Stains = table.duplicate(Shape_Box); table.inbox(Paint_Stains, "shape[fx]: Paint Stains","Syl",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time","l.end_time + 200","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","stain( )","\\shad0\\bord0\\1a&H2A&\\blur1\\fad(0,200)\\fr!R( 360 )!","stain = function( )\n	local Shape = {\n		[1] = \"m 57 14 b 46 21 39 20 42 31 b 29 39 34 46 34 49 b 33 57 0 69 2 73 b 3 76 34 52 39 60 b 43 65 23 80 24 83 b 27 85 40 66 43 66 b 46 66 41 70 43 71 b 45 72 45 66 48 70 b 49 72 27 103 30 104 b 33 105 46 72 50 74 b 53 75 46 91 49 91 b 52 93 50 70 58 75 b 64 78 49 119 52 120 b 56 121 58 80 65 75 b 89 67 94 58 93 48 b 101 35 86 8 81 14 b 63 0 63 6 57 14 \",\n		[2] = \"m 32 69 b 44 74 5 83 9 87 b 13 91 33 73 36 78 b 39 83 25 86 28 89 b 32 93 35 79 39 84 b 44 96 45 84 50 89 b 57 97 60 91 62 94 b 71 97 68 93 71 94 b 80 97 74 108 78 108 b 82 108 74 95 82 92 b 88 89 91 106 94 105 b 98 103 88 93 89 89 b 97 89 90 87 95 86 b 98 85 109 99 111 96 b 113 93 97 88 100 84 b 102 81 105 89 107 86 b 109 83 95 83 103 76 b 109 70 121 82 123 79 b 125 75 109 77 106 68 b 113 60 106 68 105 59 b 108 46 118 53 118 50 b 118 45 103 53 103 47 b 103 39 116 38 105 36 b 97 41 97 34 92 32 b 93 21 86 30 82 23 b 80 19 89 0 85 0 b 80 0 84 24 73 24 b 62 24 66 13 62 13 b 59 13 64 23 58 26 b 42 26 48 33 42 34 b 33 32 37 38 36 42 b 29 49 17 34 16 39 b 23 46 33 46 30 55 b 29 61 17 54 17 59 b 17 63 28 58 31 61 b 33 63 21 67 32 69 m 128 47 b 122 47 122 51 128 51 b 134 51 134 47 128 47 m 7 57 b 1 57 1 61 7 61 b 13 61 13 57 7 57 m 119 104 b 127 107 125 106 120 102 b 115 98 114 100 119 104 \",\n		[3] = \"m 31 61 b 12 83 32 65 35 70 b 38 75 24 78 27 81 b 31 85 34 71 38 76 b 43 88 44 76 49 81 b 52 97 55 91 57 94 b 66 97 63 93 66 94 b 75 97 79 135 83 135 b 87 135 69 95 79 91 b 86 88 97 115 100 114 b 104 112 86 92 87 88 b 88 85 91 92 93 90 b 95 88 88 86 93 85 b 96 84 123 117 125 114 b 127 111 95 87 98 83 b 100 80 115 92 117 89 b 119 86 93 82 101 75 b 107 69 147 97 149 94 b 151 90 107 76 104 67 b 95 52 114 70 110 58 b 108 53 104 67 100 52 b 113 38 98 46 98 40 b 106 26 99 38 91 30 b 89 16 89 27 84 25 b 75 21 71 21 65 24 b 49 19 48 25 44 28 b 37 26 43 33 37 34 b 28 36 31 42 29 47 b 20 48 27 50 30 53 b 32 55 20 59 31 61 m 54 40 b 67 43 41 56 41 47 b 41 39 51 45 54 40 \",\n		[4] = \"m 27 69 b 39 74 0 83 4 87 b 8 91 28 73 31 78 b 34 83 20 86 23 89 b 27 93 30 79 34 84 b 39 96 40 84 45 89 b 52 97 55 91 57 94 b 66 91 60 97 63 97 b 66 97 63 93 66 94 b 75 97 69 108 73 108 b 77 108 69 95 79 91 b 86 88 89 105 92 104 b 96 102 86 92 87 88 b 88 85 91 92 95 84 b 107 82 97 78 101 75 b 107 69 119 81 121 78 b 123 74 107 76 104 67 b 101 58 114 70 114 64 b 114 59 104 67 106 58 b 109 45 119 52 119 49 b 119 44 104 52 104 46 b 104 38 117 37 115 35 b 112 32 105 44 97 36 b 95 22 95 33 90 31 b 88 21 81 30 77 23 b 75 19 84 0 80 0 b 75 0 79 24 68 24 b 54 13 59 23 53 26 b 45 30 44 17 41 19 b 38 21 48 25 44 28 b 37 26 43 33 37 34 b 27 35 21 22 19 26 b 17 31 38 35 31 42 b 20 52 28 46 25 55 b 24 61 12 54 12 59 b 12 63 23 58 26 61 b 28 63 16 67 27 69 m 129 46 b 123 46 123 50 129 50 b 135 50 135 46 129 46 m 117 103 b 122 107 123 105 118 101 b 113 97 112 99 117 103 \"\n	}\n	local size, S, D, dx, dy\n	maxloop( R( 8, 24 ) )\n	if j == 1 then\n		if syl.i == 1 then\n			hue = R( 40, 300 )\n			saturation = R( 40, 70 )\n		end\n		size = R( 10, 18)*4*ratio\n		S = Shape[R( #Shape )]\n		D = 1\n		dx = syl.center\n		dy = syl.middle\n	else\n		size = (R( 12 ) == 1) and R( 10, 15 ) or R( 2, 5 )\n		S = shape.circle\n		D = R( 20, 40 )/10\n		dx = syl.center + R( -syl.width/2, syl.width/2 )\n		dy = syl.middle + R( -syl.height/2, syl.height/2 )\n	end\n	return format( \"{\\\\pos(%s,%s)\\\\fscx%s\\\\fscy%s\\\\1c%s\\\\p1}%s\", dx, dy, size, size, random.color( hue, saturation/D, 100 ), S )\nend","Automation Auto-4",false); table.insert(shape_fx_library, Paint_Stains); table.insert(shape_fx, "Paint Stains")
	Parametric_Curve_HL_I = table.duplicate(Shape_Box); table.inbox(Parametric_Curve_HL_I, "shape[fx]: Parametric Curve HL I","Syl",true,false,"#67D7FE","#8702AC","#000000","25","35","60","l.start_time + syl.start_time - 800*module^Accel","fx.start_time + 300","Sign_x * cos( 3*s )","Sign_y * (sin( 2*s ) + cos( s ))","pi/2","-pi/2","syl.center","syl.middle","R( 30, 50 )*ratio","R( 20, 40 )*ratio","5","2","fx.pos_x","fx.pos_y","","140*ratio","4*ratio","shape.circle","format( \"\\\\fad(20,200)\\\\bord0\\\\shad0\\\\blur1\\\\org(%s,%s)\\\\fr%s\\\\1c%s\", fx.center_x, fx.center_y, Angle, color.module( color1, color2 ) )","Angle = R( 36 )*10;\nSign_x = (-1)^R( 2 );\nSign_y = (-1)^R( 4 );\nAccel = R( 160, 260 )/100;\ncolor1 = random.color( );\ncolor2 = random.color( )","Lua",false); table.insert(shape_fx_library, Parametric_Curve_HL_I); table.insert(shape_fx, "Parametric Curve HL I")
	Parametric_Curve_Leadin_Line_I = table.duplicate(Shape_Box); table.inbox(Parametric_Curve_Leadin_Line_I, "shape[fx]: Parametric Curve Leadin Line I","Line",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time - 50*syl.n*(1 - module)","l.start_time - 50*syl.n*(1 - module) + delay*module + 800","cos( s/2 ) - s^0.6 + sin( s/3 ) - 1","sign*sin( 3*s/4 )/2","16","0","l.right + 50*ratio","l.middle","l.right/7","l.height","5","1","fx.pos_x, fx.pos_x + R( -50, 20 )*ratio","fx.pos_y, fx.pos_y + R( -20, 20 )*ratio","","R( 150, 200 )","R( 7, 12 )*ratio","shape.shine2t","format( \"\\\\bord0.5\\\\3c%s\\\\blur4\\\\t(\\\\fr%s)\\\\fad(50,300)\", color.module( colors[1], colors[2] ), R( -180, 180 ) ), tag.glitter( )","delay = 600;\ncolors = { random.color( ), random.color( ) };\nsign = (-1)^R( 2 )","Lua",false); table.insert(shape_fx_library, Parametric_Curve_Leadin_Line_I); table.insert(shape_fx, "Parametric Curve Leadin Line I")
	Parametric_Curve_Leadin_Line_II = table.duplicate(Shape_Box); table.inbox(Parametric_Curve_Leadin_Line_II, "shape[fx]: Parametric Curve Leadin Line II","Line",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time - 50*syl.n*(1 - module^1.5) + 1000","fx.start_time + delay*module + 1200","cos( 8*s + 3 ) + s^2 + 1","sign*sin( 2*s )*cos( 5*s )","0","2.84","50*ratio","l.middle","l.right/10","l.height","5","1","fx.pos_x, fx.pos_x + R( -50, 20 )*ratio","fx.pos_y, fx.pos_y + R( -20, 20 )*ratio","","R( 180, 220 )","R( 6, 12 )*ratio","shape.shine2t","format( \"\\\\bord0.5\\\\3c%s\\\\blur4\\\\t(\\\\fr%s)\\\\fad(50,400)\", color.module(colors[1], colors[2]), R( -180, 180 ) ), tag.glitter( )","delay = 1200;\ncolors = { random.color( ), random.color( ) };\nsign = (-1)^R( 2 )","Lua",false); table.insert(shape_fx_library, Parametric_Curve_Leadin_Line_II); table.insert(shape_fx, "Parametric Curve Leadin Line II")
	Parametric_Silkworm_preHL_I = table.duplicate(Shape_Box); table.inbox(Parametric_Silkworm_preHL_I, "shape[fx]: Parametric Silkworm preHL I","Syl",false,false,"#FFFFFF","#FDB901","#FFFFFF","0","0","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)*(1 - module)","fx.start_time + delay","cos( s )/2 - 1/2","-sin( s )/2","pi","0","syl.center","syl.middle - l.descent","(syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center","1.2*((syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center)","5","1","fx.pos_x","fx.pos_y","","0.8*loops","4*ratio","shape.circle","format( \"\\\\3c%s\\\\bord0.4\\\\shad0\\\\blur3\\\\fad(50,300)\", color.module1( colors[1], colors[2] ) )","delay = 600;\ncolors = { random.color( ), random.color( ) };\nloops = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center","Lua",false); table.insert(shape_fx_library, Parametric_Silkworm_preHL_I); table.insert(shape_fx, "Parametric Silkworm preHL I")
	Parametric_Silkworm_preHL_II = table.duplicate(Shape_Box); table.inbox(Parametric_Silkworm_preHL_II, "shape[fx]: Parametric Silkworm preHL II","Syl",false,false,"#FFFFFF","#FDB901","#FFFFFF","0","0","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)*(1 - module)","fx.start_time + var.syl.delay + R( 300 )","cos( s )/2 - 1/2","-sin( s )/2","pi","0","syl.center","syl.middle - l.descent","(syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center","1.2*((syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center)","5","1","fx.pos_x, fx.pos_x + R( -15, 15 )*ratio","fx.pos_y, fx.pos_y + R( -10, 10 )*ratio","fx.dur/6, fx.dur","0.5*loops","10*ratio","shape.shine1t","format( \"\\\\3c%s\\\\bord0.4\\\\shad0\\\\blur3\\\\fr%s\\\\t(\\\\fr%s)\\\\fad(50,300)\", color.module1( var.line.colors[1], var.line.colors[2] ), R( -180, 180 ), R( -180, 180 ) ), tag.glitter( )","delay = 700;\ncolors = { random.color( ), random.color( ) };\nloops = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center","Lua",false); table.insert(shape_fx_library, Parametric_Silkworm_preHL_II); table.insert(shape_fx, "Parametric Silkworm preHL II")
	Parametric_Silkworm_preHL_III = table.duplicate(Shape_Box); table.inbox(Parametric_Silkworm_preHL_III, "shape[fx]: Parametric Silkworm preHL III","Syl",false,false,"#FFFFFF","#FDB901","#FFFFFF","0","0","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)*(1 - module)","fx.start_time + delay + R( 300 )","cos( s )/2 - 1/2","((-1)^syl.i)*sin( s )/2","pi","0","syl.center","syl.middle","(syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center","1.2*((syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center)","5","1","fx.pos_x, fx.pos_x + R( -15, 15 )*ratio","fx.pos_y, fx.pos_y + R( -10, 10 )*ratio","fx.dur/6, fx.dur","0.5*loops","10*ratio","shape.shine1t","format( \"\\\\3c%s\\\\bord0.4\\\\shad0\\\\blur3\\\\fr%s\\\\t(\\\\fr%s)\\\\fad(50,300)\", color.module1( var.line.colors[1], var.line.colors[2] ), R( -180, 180 ), R( -180, 180 ) ), tag.glitter( )","delay = 700;\ncolors = { random.color( ), random.color( ) };\nloops = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center","Lua",false); table.insert(shape_fx_library, Parametric_Silkworm_preHL_III); table.insert(shape_fx, "Parametric Silkworm preHL III")
	Parametric_Silkworm_preHL_IV = table.duplicate(Shape_Box); table.inbox(Parametric_Silkworm_preHL_IV, "shape[fx]: Parametric Silkworm preHL IV","Syl",false,false,"#FFFFFF","#FDB901","#FFFFFF","0","0","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)*(1 - module)","fx.start_time + delay + R( 300 )","cos( s )/2 - 1/2","((-1)^j)*sin( s )/2","pi","0","syl.center","syl.middle + l.descent*(-1)^j","(syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center","1.2*((syl.i == 1) and syl.height or line.kara[syl.i].center-line.kara[syl.i-1].center)","5","1","fx.pos_x, fx.pos_x + R( -15, 15 )*ratio","fx.pos_y, fx.pos_y + R( -10, 10 )*ratio","fx.dur/6, fx.dur","loops","10*ratio","shape.shine1t","format( \"\\\\3c%s\\\\bord0.4\\\\shad0\\\\blur3\\\\fr%s\\\\t(\\\\fr%s)\\\\fad(50,300)\", color.module1( var.line.colors[1], var.line.colors[2] ), R( -180, 180 ), R( -180, 180 ) ), tag.glitter( )","delay = 700;\ncolors = { random.color( ), random.color( ) };\nloops = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center","Lua",false); table.insert(shape_fx_library, Parametric_Silkworm_preHL_IV); table.insert(shape_fx, "Parametric Silkworm preHL IV")
	Polet_Rocket_preline_I = table.duplicate(Shape_Box); table.inbox(Polet_Rocket_preline_I, "shape[fx]: Polet Rocket preline I","Line",true,false,"#FFFFFF","#3893D6","#6A8DD6","0","0","0","l.start_time","l.start_time + 200","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - 5*ratio + 10*ratio*(j - 1)","","2","","light( )","format( \"\\\\bord0.5\\\\blur3\\\\clip(%s,%s,%s,%s)\\\\t(\\\\frx%s\\\\clip(%s,%s,%s,%s))\", fx.pos_x, fx.pos_y - 25, fx.pos_x, fx.pos_y + 25, R( 180, 360 ), -150, fx.pos_y - 25, xres + 150, fx.pos_y + 25 )","light = function( )\n	local Maxy = 30*ratio\n	local Minx = 10*ratio\n	local Maxx = 80*ratio\n	local Long, shapefx1 = 0, \"m 0 0 l \"\n	while Long < 2 * xres do\n		Long = Long + tag.only( R( 10 ) == 1, R( Minx ), R( 0.7 * Maxx, Maxx ) )\n		shapefx1 = shapefx1 .. format( \"%s %s l \", Long, R( -0.5 * Maxy, 0.5 * Maxy ) )\n	end\n	shapefx1 = shapefx1:sub( 1, -3 )\n	shapefx1 = shape.origin( shapefx1 )\n	local shapefx2 = shape.displace( shape.reverse( shapefx1 ), 0, 1.4 ):gsub( \"m\", \"l\" )\n	return shapefx1 .. shapefx2\nend","Lua",false); table.insert(shape_fx_library, Polet_Rocket_preline_I); table.insert(shape_fx, "Polet Rocket preline I")
	Polet_Rocket_postline_I = table.duplicate(Shape_Box); table.inbox(Polet_Rocket_postline_I, "shape[fx]: Polet Rocket postline I","Line",true,false,"#FFFFFF","#3893D6","#6A8DD6","0","0","0","l.end_time - 200","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - 5*ratio + 10*ratio*(j - 1)","","2","","light( )","format( \"\\\\bord0.5\\\\blur3\\\\clip(%s,%s,%s,%s)\\\\t(\\\\frx%s\\\\clip(%s,%s,%s,%s))\", fx.pos_x, fx.pos_y - 25, fx.pos_x, fx.pos_y + 25, R( 180, 360 ), -150, fx.pos_y - 25, xres + 150, fx.pos_y + 25 )","light = function( )\n	local Maxy = 30*ratio\n	local Minx = 10*ratio\n	local Maxx = 80*ratio\n	local Long, shapefx1 = 0, \"m 0 0 l \"\n	while Long < 2 * xres do\n		Long = Long + tag.only( R( 10 ) == 1, R( Minx ), R( 0.7 * Maxx, Maxx ) )\n		shapefx1 = shapefx1 .. format( \"%s %s l \", Long, R( -0.5 * Maxy, 0.5 * Maxy ) )\n	end\n	shapefx1 = shapefx1:sub( 1, -3 )\n	shapefx1 = shape.origin( shapefx1 )\n	local shapefx2 = shape.displace( shape.reverse( shapefx1 ), 0, 1.4 ):gsub( \"m\", \"l\" )\n	return shapefx1 .. shapefx2\nend","Lua",false); table.insert(shape_fx_library, Polet_Rocket_postline_I); table.insert(shape_fx, "Polet Rocket postline I")
	Polet_Rocket_line_I = table.duplicate(Shape_Box); table.inbox(Polet_Rocket_line_I, "shape[fx]: Polet Rocket line I","Line",true,false,"#FFFFFF","#4558F6","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - 5*ratio + 10*ratio*(j - 1)","","2","","light( )","format( \"\\\\bord0.5\\\\blur3\\\\clip(%s,%s,%s,%s)\\\\t(0,200,\\\\clip(%s,%s,%s,%s))\\\\t(\\\\frx%s)\", fx.pos_x, fx.pos_y - 25, fx.pos_x, fx.pos_y + 25, -150, fx.pos_y - 25, xres + 150, fx.pos_y + 25, 2.2*fx.dur + R( -720, 720 ) )","light = function( )\n	local Maxy = 30*ratio\n	local Minx = 10*ratio\n	local Maxx = 80*ratio\n	local Long, shapefx1 = 0, \"m 0 0 l \"\n	while Long < 2 * xres do\n		Long = Long + tag.only( R( 10 ) == 1, R( Minx ), R( 0.7 * Maxx, Maxx ) )\n		shapefx1 = shapefx1 .. format( \"%s %s l \", Long, R( -0.5 * Maxy, 0.5 * Maxy ) )\n	end\n	shapefx1 = shapefx1:sub( 1, -3 )\n	shapefx1 = shape.origin( shapefx1 )\n	local shapefx2 = shape.displace( shape.reverse( shapefx1 ), 0, 1.4 ):gsub( \"m\", \"l\" )\n	return shapefx1 .. shapefx2\nend","Lua",false); table.insert(shape_fx_library, Polet_Rocket_line_I); table.insert(shape_fx, "Polet Rocket line I")
	Polet_Rocket_line_II = table.duplicate(Shape_Box); table.inbox(Polet_Rocket_line_II, "shape[fx]: Polet Rocket line II","Line",true,false,"#FFFFFF","#3893D6","#6A8DD6","0","0","0","l.start_time + R( line.dur - 200 )","fx.start_time + 200","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - 5*ratio + 10*ratio*(j - 1)","","2","","light( )","replay( line.dur/480 ), format( \"\\\\bord0.5\\\\blur3\\\\clip(%s,%s,%s,%s)\\\\t(\\\\frx%s\\\\clip(%s,%s,%s,%s))\", fx.pos_x, fx.pos_y - 25, fx.pos_x, fx.pos_y + 25, R( 180, 360 ), -150, fx.pos_y - 25, xres + 150, fx.pos_y + 25 )","light = function( )\n	local Maxy = 30*ratio\n	local Minx = 10*ratio\n	local Maxx = 80*ratio\n	local Long, shapefx1 = 0, \"m 0 0 l \"\n	while Long < 2 * xres do\n		Long = Long + tag.only( R( 10 ) == 1, R( Minx ), R( 0.7 * Maxx, Maxx ) )\n		shapefx1 = shapefx1 .. format( \"%s %s l \", Long, R( -0.5 * Maxy, 0.5 * Maxy ) )\n	end\n	shapefx1 = shapefx1:sub( 1, -3 )\n	shapefx1 = shape.origin( shapefx1 )\n	local shapefx2 = shape.displace( shape.reverse( shapefx1 ), 0, 1.4 ):gsub( \"m\", \"l\" )\n	return shapefx1 .. shapefx2\nend","Lua",false); table.insert(shape_fx_library, Polet_Rocket_line_II); table.insert(shape_fx, "Polet Rocket line II")
	Power_Ball = table.duplicate(Shape_Box); table.inbox(Power_Ball, "shape[fx]: Power Ball","Syl",false,false,"#3661AD","#3F3C3C","#FFFFFF","80","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.left","syl.middle","","","5","1","fx.pos_x - wth/2, fx.pos_x - wth/2 + syl.width + syl.postspacewidth","fx.pos_y","","12","(1 - 0.8*module)*l.scale_x","my_shape","format( \"\\\\bord0\\\\shad0\\\\blur2\\\\1c%s\", color.module( shape.color1, \"&HFFFFFF&\" ) )","my_shape = shape.size( shape.circle, 80*ratio );\nwth = shape.width( my_shape )","Lua",false); table.insert(shape_fx_library, Power_Ball); table.insert(shape_fx, "Power Ball")
	Power_Ball_Intro = table.duplicate(Shape_Box); table.inbox(Power_Ball_Intro, "shape[fx]: Power Ball Intro","Syl",false,false,"#3661AD","#3F3C3C","#FFFFFF","80","0","0","l.start_time + syl.start_time - 400","l.start_time + syl.start_time","","","","","syl.left","syl.middle","","","5","1","fx.pos_x - 1.5*wth, fx.pos_x - wth/2","fx.pos_y","","12","(1 - 0.8*module)*l.scale_x","(syl.i == 1) and my_shape or nil","format( \"\\\\bord0\\\\shad0\\\\blur2\\\\fad(200,0)\\\\1c%s\", color.module( shape.color1, \"&HFFFFFF&\" ) )","my_shape = shape.size( shape.circle, 80*ratio );\nwth = shape.width( my_shape )","Lua",false); table.insert(shape_fx_library, Power_Ball_Intro); table.insert(shape_fx, "Power Ball Intro")
	Power_Ball_Outro = table.duplicate(Shape_Box); table.inbox(Power_Ball_Outro, "shape[fx]: Power Ball Outro","Syl",false,false,"#3661AD","#3F3C3C","#FFFFFF","80","0","0","l.end_time","l.end_time + 400","","","","","syl.right","syl.middle","","","5","1","fx.pos_x - wth/2, fx.pos_x + wth/2","fx.pos_y","","12","(1 - 0.7*module)*l.scale_x","(syl.i == syl.n) and my_shape or nil","format( \"\\\\bord0\\\\shad0\\\\blur2\\\\fad(0,200)\\\\1c%s\", color.module( shape.color1c, \"&HFFFFFF&\" ) )","my_shape = shape.size( shape.circle, 80*ratio );\nwth = shape.width( my_shape )","Lua",false); table.insert(shape_fx_library, Power_Ball_Outro); table.insert(shape_fx, "Power Ball Outro")
	Quadrilateral_HL_I = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_I, "shape[fx]: Quadrilateral HL I","Syl",true,false,"#E2EAFD","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","0.7*math.distance( syl.width, syl.height )","shape.rectangle","format( \"\\\\1a&HFF&\\\\bord%s\\\\shad0\\\\fry90\\\\t(0,150,\\\\fry0)\\\\fad(0,300)\", Bord )","Bord = 2*ratio","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_I); table.insert(shape_fx, "Quadrilateral HL I")
	Quadrilateral_HL_II = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_II, "shape[fx]: Quadrilateral HL II","Syl",true,false,"#E2EAFD","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time + 300","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","1","0.7*math.distance( syl.width, syl.height )","shape.rectangle","format( \"\\\\1a&HFF&\\\\bord%s\\\\shad0\\\\fry90\\\\t(0,150,\\\\fry0)\\\\t(%s,%s,\\\\fr90\\\\fscx%s\\\\fscy%s)\\\\fad(0,300)\", Bord, fx.dur - 150, fx.dur, fx.sizex/2, fx.sizex/2 )","Bord = 2*ratio","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_II); table.insert(shape_fx, "Quadrilateral HL II")
	Quadrilateral_HL_III = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_III, "shape[fx]: Quadrilateral HL III","Syl",false,false,"#FFFFFF","#6CAFFD","#FFFFFF","255","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x - (fx.sizex + syl.width)/2, fx.pos_x - (fx.sizex - syl.width)/2","fx.pos_y","","1","60*ratio","shape.rectangle","\"\\\\bord2\\\\shad0\"","","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_III); table.insert(shape_fx, "Quadrilateral HL III")
	Quadrilateral_HL_IV = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_IV, "shape[fx]: Quadrilateral HL IV","Syl",false,false,"#FFFFFF","#6CAFFD","#FFFFFF","255","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x - (fx.sizex + syl.width)/2, fx.pos_x - (fx.sizex - syl.width)/2","fx.pos_y","","1","60*ratio","shape.rectangle","\"\\\\bord2\\\\shad0\\\\t(\\\\fr-90)\"","","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_IV); table.insert(shape_fx, "Quadrilateral HL IV")
	Quadrilateral_HL_V = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_V, "shape[fx]: Quadrilateral HL V","Syl",false,false,"#FFFFFF","#6CAFFD","#FFFFFF","255","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x - (fx.sizex + syl.width)/2, fx.pos_x - (fx.sizex - syl.width)/2","fx.pos_y","","1","60*ratio","shape.rectangle","format( \"\\\\bord3\\\\shad0\\\\fscx%s\\\\fscy%s\\\\t(\\\\fr-90\\\\fscx%s\\\\fscy%s)\", fx.sizex*(1 + 0.25*(-1)^syl.i), fx.sizex*(1 + 0.25*(-1)^syl.i), fx.sizex*(1 + 0.25*(-1)^(syl.i + 1)), fx.sizex*(1 + 0.25*(-1)^(syl.i + 1)) )","","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_V); table.insert(shape_fx, "Quadrilateral HL V")
	Quadrilateral_HL_3D = table.duplicate(Shape_Box); table.inbox(Quadrilateral_HL_3D, "shape[fx]: Quadrilateral HL 3D","Syl",false,false,"#FFFFFF","#4BB7FF","#FFFFFF","255","0","0","l.start_time + syl.start_time + fx_start","l.start_time + syl.end_time + fx_end","","","","","syl.left","syl.middle + 0.6*l.descent*(1 + 2*module)","","","5","0","fx.pos_x + fx_dxi, fx.pos_x + syl.widtht + fx_dxf","fx.pos_y + 5*ratio","","12","80*ratio","shape.diamond","format( \"\\\\bord2\\\\shad0\\\\frx75\\\\t(\\\\fr-90)\\\\blur%s\\\\3a%s%s\", 5*module, alpha.module( \"&H18&\", \"&HCF&\" ), fx_fad )","vars = function( )\n	replay( 3 )\n	fx_start, fx_end, fx_dxi, fx_dxf, fx_fad = 0, 0, 0, 0, \"\"\n	if J == 1 then\n		fxgroup = ( syl.i == 1 )\n		fx_start = -300\n		fx_end = -syl.dur\n		fx_dxi = -150*ratio\n		fx_dxf = -syl.widtht\n		fx_fad = \"\\\\fad(160,0)\"\n	elseif J == 3 then\n		fxgroup = ( syl.i == syl.n )\n		fx_start = syl.dur\n		fx_end = 300\n		fx_dxi = syl.widtht\n		fx_dxf = syl.widtht + 150*ratio\n		fx_fad = \"\\\\fad(0,160)\"\n	end\n	return \"\"\nend;\nmy_vars = vars( )","Lua",false); table.insert(shape_fx_library, Quadrilateral_HL_3D); table.insert(shape_fx, "Quadrilateral HL 3D")
	Rain_in_Line_I = table.duplicate(Shape_Box); table.inbox(Rain_in_Line_I, "shape[fx]: Rain in Line I","Line",true,false,"#63B6FF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + R( line.dur + 600 ) - 300","fx.start_time + 600 + R( 30 )*10","","","","","line.center","line.middle","","","5","0","fx.pos_x + var.loop.dx + math.polar( 70, R( 40, 90 ), \"x\" ), fx.pos_x + var.loop.dx","fx.pos_y + var.loop.dy + math.polar( 70, R( 40, 90 ), \"y\" ), fx.pos_y + var.loop.dy","","line.dur/6","15 + R( 50 )*ratio, ratio","shape.rectangle","\"\\\\fr70\\\\blur0.4\\\\bord0\\\\shad0\\\\fad(100,100)\"","dx = R( -0.55*line.width, 0.55*line.width );\ndy = R( -syl.height/2, syl.height/2 )","Lua",false); table.insert(shape_fx_library, Rain_in_Line_I); table.insert(shape_fx, "Rain in Line I")
	Rapsodia_I = table.duplicate(Shape_Box); table.inbox(Rapsodia_I, "shape[fx]: Rapsodia I","Syl",true,false,"#FAEB08","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 920 - R( 0, 300, 10 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + Rdrs( 4, 20 ), fx.pos_x + Rdr( -4, 4 )","fx.pos_y + Rdrs( 4, 20 ), fx.pos_y - Rdr( 55, 80 )","","syl.dur / 90","Rdr( 20, 28 )","my_shape","\"\\\\t(\\\\fscxy5)\\\\fad(120,120)\"","my_shape = \"{\\\\bord0\\\\shad0\\\\blur1}m 87 0 l 87 37 l 50 37 l 50 63 l 87 63 l 87 100 l 113 100 l 113 63 l 150 63 l 150 37 l 113 37 l 113 0 l 87 0 {\\\\blur6\\\\1a&H4F&\\\\1c&H0000FF&}m -50 0 m 50 100 m -50 0 m -24 50 b -24 85 24 85 24 50 b 24 15 -24 15 -24 50 \"","Lua",false); table.insert(shape_fx_library, Rapsodia_I); table.insert(shape_fx, "Rapsodia I")
	Rapsodia_II = table.duplicate(Shape_Box); table.inbox(Rapsodia_II, "shape[fx]: Rapsodia II","Syl",true,false,"#FAEB08","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 720 - R( 0, 300, 10 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + Rdrs( 4, 20 ), fx.pos_x + Rdr( -4, 4 )","fx.pos_y + Rdrs( 4, 20 ), fx.pos_y - Rdr( 55, 80 )","","syl.dur / 72","Rdr( 14, 20 )","shape.rectangle","\"\\\\1a255\\\\3cR( nil, 62 )\\\\blur1\\\\bord2.8r\\\\t(\\\\fscxy5\\\\frRs( 200, 360 ))\\\\fad(120,120)\"","","Lua",false); table.insert(shape_fx_library, Rapsodia_II); table.insert(shape_fx, "Rapsodia II")
	Rapsodia_III = table.duplicate(Shape_Box); table.inbox(Rapsodia_III, "shape[fx]: Rapsodia III","Syl",true,false,"#FAEB08","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 720 - R( 0, 300, 10 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + Rdrs( 4, 20 ), fx.pos_x + px( var.loop.Angle )d50r","fx.pos_y + Rdrs( 4, 20 ), fx.pos_y + py( var.loop.Angle )d50r","","syl.dur / 72","Rdr( 14, 20 )","shape.triangle","\"\\\\1a255\\\\3cR( nil, 62 )\\\\blur1\\\\bord2.8r\\\\t(\\\\fscxy5\\\\frRs( 200, 360 ))\\\\fad(120,120)\"","Angle = R( 360 )","Lua",false); table.insert(shape_fx_library, Rapsodia_III); table.insert(shape_fx, "Rapsodia III")
	raura_soyu_I = table.duplicate(Shape_Box); table.inbox(raura_soyu_I, "shape[fx]: raura soyu I","Syl",true,false,"#0C4EFE","#ADC4D6","#6A8DD6","0","0","0","l.start_time - 100","l.end_time + 100","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","var.loop.frecuencia( 200 )","\"\\\\fad(100,100)\\\\1a&HFF&\\\\3c\" .. shape.color1","frecuencia = function( offset )\n	local offset = offset or 0\n	local w\n	if syl.i ~= syl.n then\n		w = linefx[ii].syl[syl.i + 1].left - linefx[ii].syl[syl.i + 0].left\n	else\n		w = syl.width\n	end\n	maxloop( ceil( w/40 ) )\n	w = w/maxj\n	local Int = { { 10, 30 }, { 5, 35 }, { 12, 24 }, { 10, 80 }, { 40, 100 } }\n	local ri = R(5)\n	local T = table.rmake( \"number\", ceil( line.dur/6 ), Int[ri][1], Int[ri][2], \"\\\\fscy\" )\n	local O = tag.oscill( line.dur + offset, 80, T )\n	return format( \"{\\\\an1\\\\pos(%s,%s)\\\\fscx%s\\\\fscy%s%s\\\\p1}%s\",\n	syl.left + (j - 1)*w, syl.bottom, w, R( 5, 15 ), O, \"m 0 100 b 40 100 35 0 50 0 b 65 0 60 100 100 100 \" )\nend","Lua",false); table.insert(shape_fx_library, raura_soyu_I); table.insert(shape_fx, "raura soyu I")
	Reverberation = table.duplicate(Shape_Box); table.inbox(Reverberation, "shape[fx]: Reverberation","Syl",true,false,"#E2EAFD","#82957E","#FFFFFF","255","0","0","l.start_time + syl.start_time + syl.dur*module","l.start_time + syl.start_time + syl.dur*module + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","ceil( (syl.dur + delay)/90 )","0","shape.circle","format( \"\\\\shad0\\\\t(\\\\fscx%s\\\\fscy%s)\\\\3c%s\\\\fad(0,%s)\", sizexy, sizexy, table.make( \"color\", maxj, color1, color2 )[j], delay/2 )","delay = 300;\nsizexy = 96*ratio;\ncolor1 = random.color( );\ncolor2 = random.color( )","Lua",false); table.insert(shape_fx_library, Reverberation); table.insert(shape_fx, "Reverberation")
	Reverberation_Inverse = table.duplicate(Shape_Box); table.inbox(Reverberation_Inverse, "shape[fx]: Reverberation Inverse","Syl",true,false,"#E2EAFD","#82957E","#FFFFFF","255","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + delay","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","ceil( (syl.dur + delay)/200 )","sizexy","shape.circle","format( \"\\\\shad0\\\\t(\\\\fscx0\\\\fscy0)\\\\3c%s\\\\fad(100,%s)\", table.make( \"color\", maxj, color1, color2 )[j], delay/2 )","delay = 300;\nsizexy = 96*ratio;\ncolor1 = random.color( );\ncolor2 = random.color( )","Lua",false); table.insert(shape_fx_library, Reverberation_Inverse); table.insert(shape_fx, "Reverberation Inverse")
	Sakura_Flower_HL_I = table.duplicate(Shape_Box); table.inbox(Sakura_Flower_HL_I, "shape[fx]: Sakura Flower HL I","Syl",true,false,"#E043E9","#FFFFFF","#6A8DD6","0","0","0","l.start_time + syl.start_time - 200","l.start_time + syl.end_time + delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x, fx.pos_x - R( -80, 80 )*ratio","fx.pos_y, fx.pos_y - R( -80, 80 )*ratio","fx.dur - delay, fx.dur","10","24*ratio","(j < 6) and shape.displace( S1, 0, -0.7*shape.height( S1 ) ) or shape.displace( S2, 0, -0.7*shape.height( S2 ) )","format( \"\\\\1c%s\\\\blur1.2\\\\bord0\\\\shad0\\\\fr%s\\\\t(\\\\fr%s)\\\\t(%s,%s,0.85,\\\\frx%s\\\\fry%s\\\\fr%s\\\\fscx%s\\\\fscy%s\\\\blur2)\\\\fad(200,200)\", (j < 6) and shape.color1 or \"&HFFFFFF&\", 72*(j - 1), 72*(j - 1) - 0.16*fx.dur, fx.dur - delay, fx.dur, R( -1000, 1000 ), R( -1000, 1000 ), R( -1000, 1000 ), fx.sizex*0.35, fx.sizey*0.35 )","delay = 1280;\nS1 = shape.sakura;\nS2 = shape.size( shape.circle, 26*ratio )","Lua",false); table.insert(shape_fx_library, Sakura_Flower_HL_I); table.insert(shape_fx, "Sakura Flower HL I")
	Sakura_HL_Shinsekai_Ed_2 = table.duplicate(Shape_Box); table.inbox(Sakura_HL_Shinsekai_Ed_2, "shape[fx]: Sakura HL Shinsekai Ed 2","Syl",true,false,"#CB4DD2","#FFFFFF","#6A8DD6","0","0","0","l.start_time + syl.start_time - 200 + (syl.dur + 200)*module","fx.start_time + 1500 + R( 300 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x, fx.pos_x + R( 2*syl.height )","fx.pos_y - R( syl.height/2 ), fx.pos_y + R( syl.height, 2*syl.height )","","syl.dur/50","R( 6, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(200,200)\", color.interpolate( shape.color1, shape.color3, Rc( 0, 0.64 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","","Lua",false); table.insert(shape_fx_library, Sakura_HL_Shinsekai_Ed_2); table.insert(shape_fx, "Sakura HL Shinsekai Ed 2")
	Sakura_Simple_HL_I = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_HL_I, "shape[fx]: Sakura Simple HL I","Syl",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + syl.start_time - 200 + (syl.dur + 200)*module","fx.start_time + 1200","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x, fx.pos_x + R( -syl.width, syl.width )","fx.pos_y - R( syl.height/2, syl.height ), fx.pos_y + R(syl.height/2, syl.height)","","syl.dur/60","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(200,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","","Lua",false); table.insert(shape_fx_library, Sakura_Simple_HL_I); table.insert(shape_fx, "Sakura Simple HL I")
	Sakura_Simple_line_Bezier_I = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_line_Bezier_I, "shape[fx]: Sakura Simple line Bezier I","Line",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + line.dur*module^1.2","fx.start_time + 1220 + R( 660 )","math.bezier( \"x\", my_point )","math.bezier( \"y\", my_point )","","","0","0","","","5","R( 0, 2 )","fx.pos_x, fx.pos_x - R( 60, 200 )*ratio","fx.pos_y, fx.pos_y + R( -0.4*syl.height, 0.4*syl.height )","","0.3*l.width","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(80,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","my_point = {\n	[1] = l.left - R( 40, 100 )*ratio,\n	[2] = l.middle + R( -30, 30 )*ratio,\n	[3] = l.center + R( 0.3*l.width ),\n	[4] = l.middle + R( 0, 80 )*ratio,\n	[5] = l.center - R( 0.3*l.width ),\n	[6] = l.middle + R( -80, 0 )*ratio,\n	[7] = l.center + R( -0.4*l.width, 0.4*l.width ),\n	[8] = l.middle + R( -100, 100 )*ratio,\n	[9] = l.right + R( 40, 100 )*ratio,\n	[10] = l.middle + R( -30, 30 )*ratio\n}","Lua",false); table.insert(shape_fx_library, Sakura_Simple_line_Bezier_I); table.insert(shape_fx, "Sakura Simple line Bezier I")
	Sakura_Simple_line_Parametric_I = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_line_Parametric_I, "shape[fx]: Sakura Simple line Parametric I","Line",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + line.dur*module^1.2","fx.start_time + 1220 + R( 660 )","s","sin( s )","-0.5*Cn*pi","0.5*Cn*pi","line.center","line.middle + 4*ratio","l.width/(Cn*pi)","0.32*syl.height","5","R( 0, 2 )","fx.pos_x, fx.pos_x - R( 60, 200 )*ratio","fx.pos_y, fx.pos_y + R( -0.4*syl.height, 0.4*syl.height )","","0.25*l.width","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(80,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","Cn = l.width/(125*ratio)","Lua",false); table.insert(shape_fx_library, Sakura_Simple_line_Parametric_I); table.insert(shape_fx, "Sakura Simple line Parametric I")
	Sakura_Simple_preline_I = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_preline_I, "shape[fx]: Sakura Simple preline I","Syl",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + time_li( 40 ) + 40*module","fx.start_time + 800 + R( 400 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -10, 50 )*ratio, fx.pos_x - R( 60, 200 )*ratio","fx.pos_y + R( -6, 6 )*ratio, fx.pos_y + R( -0.8*syl.height, 0.8*syl.height )","","R( 7, 12 )","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(80,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","","Lua",false); table.insert(shape_fx_library, Sakura_Simple_preline_I); table.insert(shape_fx, "Sakura Simple preline I")
	Sakura_Simple_preline_II = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_preline_II, "shape[fx]: Sakura Simple preline II","Line",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + 45*syl.n*(module^0.8 - 1)","fx.start_time + 920 + R( 460 )","math.bezier( \"x\", my_point )","math.bezier( \"y\", my_point )","","","0","0","","","5","R( 0, 2 )","fx.pos_x, fx.pos_x - R( 60, 200 )*ratio","fx.pos_y, fx.pos_y + R( -0.4*syl.height, 0.4*syl.height )","","0.3*l.width","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(80,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","my_point = {\n	[1] = l.left - R( 40, 100 )*ratio,\n	[2] = l.middle + R( -30, 30 )*ratio,\n	[3] = l.center + R( 0.3*l.width ),\n	[4] = l.middle + R( 0, 80 )*ratio,\n	[5] = l.center - R( 0.3*l.width ),\n	[6] = l.middle + R( -80, 0 )*ratio,\n	[7] = l.center + R( -0.4*l.width, 0.4*l.width ),\n	[8] = l.middle + R( -100, 100 )*ratio,\n	[9] = l.right + R( 40, 100 )*ratio,\n	[10] = l.middle + R( -30, 30 )*ratio\n}","Lua",false); table.insert(shape_fx_library, Sakura_Simple_preline_II); table.insert(shape_fx, "Sakura Simple preline II")
	Sakura_Simple_preline_III = table.duplicate(Shape_Box); table.inbox(Sakura_Simple_preline_III, "shape[fx]: Sakura Simple preline III","Line",true,false,"#F6F3F3","#CB4DD2","#6A8DD6","0","0","0","l.start_time + 60*syl.n*(module^1.2 - 1)","fx.start_time + 1020 + R( 660 )","s","sin( s )","-0.5*Cn*pi","0.5*Cn*pi","line.center","line.middle + 4*ratio","l.width/(Cn*pi)","0.28*syl.height","5","R( 0, 2 )","fx.pos_x, fx.pos_x - R( 60, 200 )*ratio","fx.pos_y, fx.pos_y + R( -0.4*syl.height, 0.4*syl.height )","","0.21*l.width","R( 8, 12 )*ratio","shape.sakura","format( \"\\\\bord0\\\\shad0\\\\blur1\\\\1c%s\\\\t(\\\\frx%s\\\\fry%s\\\\fr%s)\\\\fad(80,200)\", color.interpolate( shape.color3c, \"&HFFFFFF&\", Rc( 0, 0.5 ) ), R( -900, 900 ), R( -900, 900 ), R( -900, 900 ) )","Cn = l.width/(200*ratio)","Lua",false); table.insert(shape_fx_library, Sakura_Simple_preline_III); table.insert(shape_fx, "Sakura Simple preline III")
	Shapes_Inlines_I = table.duplicate(Shape_Box); table.inbox(Shapes_Inlines_I, "shape[fx]: Shapes Inlines I","Line",true,false,"#E05D06","#FD0A03","#6A8DD6","20","20","0","l.start_time + R( 600 )","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x + R( l.width/2 )","fx.pos_y + R( -10, 10 )*ratio","","l.width/35","","shape.size( shape.circle, R( 5, 12 )*ratio )","shape.Rmove( 20*ratio, 20*ratio, 0, fx.dur, 1, { 480 + R( 100 ) } ), \"\\\\bord3\\\\blur3\", tag.oscill( fx.dur, { { 500, 300 } }, \"\\\\alpha255\\\\blur3\", \"\\\\alpha0\\\\blur6\" )","","Lua",false); table.insert(shape_fx_library, Shapes_Inlines_I); table.insert(shape_fx, "Shapes Inlines I")
	Shine_Circle_Shape = table.duplicate(Shape_Box); table.inbox(Shine_Circle_Shape, "shape[fx]: Shine Circle Shape","Syl",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","math.distance( syl.width, syl.height )","shape.circle","format( \"\\\\bord0\\\\shad0\\\\blur%s\\\\1c%s\\\\fad(100,100)\", blurfx, random.color( ) )","blurfx = math.round( (syl.width < l.fontsize/2) and 15 or syl.width/3, 2 )","Lua",false); table.insert(shape_fx_library, Shine_Circle_Shape); table.insert(shape_fx, "Shine Circle Shape")
	Shine_Shape_Multi = table.duplicate(Shape_Box); table.inbox(Shine_Shape_Multi, "shape[fx]: Shine Shape Multi","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","loopfx","30*ratio","shape.shine2t","format( \"\\\\bord0.4\\\\blur4\\\\shad0\\\\frz%s\\\\t(\\\\frz%s)\\\\3c%s\", 360*j/maxj, 360*j/maxj + 0.1*fx.dur, random.color( ) ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. random.color( ) )","loopfx = math.distance( syl.width, syl.height )/6","Lua",false); table.insert(shape_fx_library, Shine_Shape_Multi); table.insert(shape_fx, "Shine Shape Multi")
	Shine_Fake_I = table.duplicate(Shape_Box); table.inbox(Shine_Fake_I, "shape[fx]: Shine Fake I","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","2","0","fx.pos_l + fx.sizex/2 + (j - 1)*fx.sizex","fx.pos_b - l.descent","","floor( syl.width/Pixel )","Pixel, 0","shape.rectangle","shine_shape( fx.dur, 40, 100 ), \"\\\\bord0\\\\shad0\\\\blur1.6\"","Pixel = 3*ratio;\nshine_shape = function( dur, min_y, max_y )\n	return format( \"\\\\t(0,1,\\\\blur1\\\\fscy%s)\\\\t(1,%d,\\\\blur0\\\\fscy%s)\", R( min_y, max_y )*ratio, dur, R( min_y )*ratio )\nend","Lua",false); table.insert(shape_fx_library, Shine_Fake_I); table.insert(shape_fx, "Shine Fake I")
	Shine_in_Line_I = table.duplicate(Shape_Box); table.inbox(Shine_in_Line_I, "shape[fx]: Shine in Line I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle + 0.35*l.descent","","","5","2","fx.pos_x + var.loop.Rec( syl.width, syl.height - 2.8*l.descent, \"x\" )","fx.pos_y + var.loop.Rec( syl.width, syl.height - 2.8*l.descent, \"y\" )","","R( 2, 4 )","R( 10, 15 )","shape.shine1t","format( \"\\\\bord0.2\\\\blur4\\\\t(\\\\fr%s)\\\\3c%s\", R(-600,-300), random.color( ) ), tag.glitter( )","Rec = function( W, H, Return )\n	n = R( 86 )\n	if (2*ceil( n/2 ))%n == 0 then\n		x = R( -80*W, 80*W )/200\n		y = 0.5*H*(-1)^R( 2 )\n	else\n		x = 0.5*W*(-1)^R( 2 )\n		y = R( -80*H, 80*H )/200\n	end\n	if Return == \"x\" then\n		return x\n	end\n	return y\nend","Lua",false); table.insert(shape_fx_library, Shine_in_Line_I); table.insert(shape_fx, "Shine in Line I")
	Smoke_HL = table.duplicate(Shape_Box); table.inbox(Smoke_HL, "shape[fx]: Smoke HL","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","72","0","0","l.start_time + syl.start_time + syl.dur*module + R( -160, 200 )","fx.start_time + 460 + R( 400 )","s","0","-syl.width/2","syl.width/2","syl.center","syl.middle","","","5","0","fx.pos_x + R( -5, 5 )*ratio, fx.pos_x - R( 45, 105 )*ratio","fx.pos_y+ R( -10, 10 )*ratio, fx.pos_y+ R( -10, 00 )*ratio","","syl.dur/50","R( 10, 35 )*ratio","shape.circle","\\bord0\\blur!R( 6, 16 )!\\fad(100,200)","","Automation Auto-4",false); table.insert(shape_fx_library, Smoke_HL); table.insert(shape_fx, "Smoke HL")
	Smoke_in_Translation = table.duplicate(Shape_Box); table.inbox(Smoke_in_Translation, "shape[fx]: Smoke in Translation","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","72","0","0","l.start_time + line.dur*module + R( -160, 200 )","fx.start_time + 460 + R( 400 )","s","0","-l.width/2","l.width/2","line.center","line.middle","","","5","0","fx.pos_x + R( -5, 5 )*ratio, fx.pos_x - R( 35, 95 )*ratio","fx.pos_y+ R( -10, 10 )*ratio, fx.pos_y+ R( -20, 20 )*ratio","","line.dur/50","R( 10, 35 )*ratio","shape.circle","\\bord0\\blur!R( 6, 16 )!\\fad(100,200)","","Automation Auto-4"); table.insert(shape_fx_library, Smoke_in_Translation); table.insert(shape_fx, "Smoke in Translation")
	Snake_in_Line_Duration = table.duplicate(Shape_Box); table.inbox(Snake_in_Line_Duration, "shape[fx]: Snake in Line Duration","Line",true,false,"#FFFFFF","#FB3EFC","#000000","0","0","0","l.start_time + line.duration*module","fx.start_time + line.duration/3.6","s","sin( s )","-D*pi","D*pi","line.center","line.middle","(0.5*l.height + l.width)/(2*var.syl.D*pi)","l.height/2","5","0","fx.pos_x","fx.pos_y","","0.55*l.width","3*ratio","shape.circle","\"\\\\bord0.2\\\\blur4\\\\fad(50,200)\"","D = ceil( l.width/(520*ratio) )","Lua",false); table.insert(shape_fx_library, Snake_in_Line_Duration); table.insert(shape_fx, "Snake in Line Duration")
	Snake_Star_HL = table.duplicate(Shape_Box); table.inbox(Snake_Star_HL, "shape[fx]: Snake Star HL","Syl",true,false,"#FFFFFF","#FF6A69","#000000","0","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 20 )*50 + 600","","","","","syl.center","syl.middle","","","5","R( 2 )","fx.pos_l + syl.width*module, fx.pos_l - R( 20, 70 ) - 45*module","fx.pos_y + var.loop.Dy1, fx.pos_y + var.loop.Dy2","","syl.dur/20","12*ratio","my_shape[R( 2 )]","tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. shape.color3 ), \"\\\\bord0.4\\\\blur4\\\\fad(0,200)\"","Dy1 = R( -0.3*l.fontsize, 0.3*l.fontsize );\nDy2 = R( -0.3*l.fontsize, 0.3*l.fontsize );\nmy_shape = { shape.shine1t, shape.size( shape.circle, 10 ) }","Lua",false); table.insert(shape_fx_library, Snake_Star_HL); table.insert(shape_fx, "Snake Star HL")
	Snake_Star_Shigatsu_IS = table.duplicate(Shape_Box); table.inbox(Snake_Star_Shigatsu_IS, "shape[fx]: Snake Star Shigatsu IS","Syl",false,false,"#FFFFFF","#FEB70D","#FFFFFF","12","20","0","l.start_time + syl.start_time + ((syl.i == 1) and -500 or -line.kara[syl.i-1].duration)*(1 - module)","fx.start_time + var.syl.delay + R( 300 ) + tag.only( syl.i == syl.n, R( 360, 520 ) )","cos( s )/2 - 1/2","-sin( s )/2","pi","0","syl.center","syl.middle - l.descent","(syl.i == 1) and 60 or line.kara[syl.i].center-line.kara[syl.i-1].center","1.2*((syl.i == 1) and 60 or line.kara[syl.i].center-line.kara[syl.i-1].center)","5","1","fx.pos_x, fx.pos_x + R( -15, 15 )*ratio","fx.pos_y, fx.pos_y + R( -10, 10 )*ratio","fx.dur/6, fx.dur","0.25*loops","R( 8, 12 )*ratio","shape.shine1t","format( \"\\\\bord0.2\\\\shad0\\\\blur2\\\\fr%s\\\\t(\\\\fr%s)\\\\fad(50,300)\", R( -180, 180 ), R( -180, 180 ) ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. shape.color3 )","delay = 760;\nloops = (syl.i == 1) and syl.height or line.kara[syl.i].center - line.kara[syl.i-1].center","Lua",false); table.insert(shape_fx_library, Snake_Star_Shigatsu_IS); table.insert(shape_fx, "Snake Star Shigatsu IS")
	Snow_Line_Noragami_ED_1 = table.duplicate(Shape_Box); table.inbox(Snow_Line_Noragami_ED_1, "shape[fx]: Snow Line Noragami ED 1","Char",true,false,"#F8F9FB","#ADC4D6","#6A8DD6","25","255","0","l.start_time + time_li( 20 )","l.start_time + syl.start_time + delay + R( 400 )","","","","","char.center","char.middle","","","5","0","fx.pos_x + R( -0.3*char.width, 0.5*char.width ), fx.pos_x + R( -0.5*char.width, 0.5*char.width )","fx.pos_y - Oy + R( -2, 2 )*ratio, fx.pos_y - Oy + R( 40, 70 )*ratio","syl.syl_start, fx.dur","R( 2, 4 )","R( 5, 10 )*ratio","shape.circle","\"\\\\blur1.2\\\\fad(150,150)\", format( \"\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\blur1)\", syl.syl_start, fx.dur, fx.sizex/2, fx.sizey/2 )","delay = 800;\nOy = 5.8*ratio","Lua",false); table.insert(shape_fx_library, Snow_Line_Noragami_ED_1); table.insert(shape_fx, "Snow Line Noragami ED 1")
	Snow_preline_line = table.duplicate(Shape_Box); table.inbox(Snow_preline_line, "shape[fx]: Snow preline line","Syl",true,false,"#FFFFFF","#FFFFFF","#000000","0","0","0","l.start_time + time_li( 50 )","l.end_time + time_lo( 50 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + R( -20, 20 )*ratio, fx.pos_x + R( -10, 10 )*ratio","fx.pos_t + R( -5, 5 )*ratio, fx.pos_t + R( 15, 55 )*ratio","","R( 2, 4 )","R( 4, 8 )*ratio","shape.circle","\"\\\\bord3\\\\shad0\\\\blur3\\\\fad(300,300)\"","","Lua",false); table.insert(shape_fx_library, Snow_preline_line); table.insert(shape_fx, "Snow preline line")
	Solar_HL_I = table.duplicate(Shape_Box); table.inbox(Solar_HL_I, "shape[fx]: Solar HL I","Syl",true,false,"#FFFFFF","#F79E1E","#6A8DD6","40","40","0","l.start_time + syl.start_time","l.start_time + syl.end_time","","","","","syl.center","syl.middle","","","5","2","fx.pos_x, linefx[ii].syl[syl.i + 1].center","fx.pos_y","","1","80","shape.array( shp, 16, \"radial\", 42*ratio )","format( \"\\\\blur3\\\\t(\\\\fr%s)\\\\bord3\\\\shad0\", 0.4*fx.dur ), tag.oscill( fx.dur, 3*frame_dur, \"\\\\fscxy120\", \"\\\\fscxy80\" )","shp = {\n	[1] = shape.size( shape.rectangle, 22*ratio, 3*ratio ),\n	[2] = shape.size( shape.rectangle, 10*ratio, 3*ratio )\n}","Lua",false); table.insert(shape_fx_library, Solar_HL_I); table.insert(shape_fx, "Solar HL I")
	Solar_HL_II = table.duplicate(Shape_Box); table.inbox(Solar_HL_II, "shape[fx]: Solar HL II","Syl",true,false,"#FFFFFF","#C60CEC","#6A8DD6","60","60","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 220","","","","","syl.center","syl.middle","","","5","2","fx.pos_x","fx.pos_y","","syl.dur/120","30","shape.array( shp, 16, \"radial\", 42*ratio )","\"\\\\blur3\\\\t(\\\\fscxy120)\\\\bord3\\\\shad0\\\\fad(40,100)\"","shp = {\n	[1] = shape.size( shape.rectangle, 22*ratio, 3*ratio ),\n	[2] = shape.size( shape.rectangle, 10*ratio, 3*ratio )\n}","Lua",false); table.insert(shape_fx_library, Solar_HL_II); table.insert(shape_fx, "Solar HL II")
	Space_Line_LI_Ryuugajou_OP_1 = table.duplicate(Shape_Box); table.inbox(Space_Line_LI_Ryuugajou_OP_1, "shape[fx]: Space Line LI Ryuugajou OP 1","Line",true,false,"#F6F3F3","#FF4E24","#6A8DD6","0","0","0","l.start_time - 25*(maxj/2) + 25*(j - 1)","fx.start_time + 280","","","","","line.center","line.middle","","","5","2","fx.pos_x - maxj*(Size + Space)/2 + Size/2 + (Size + Space)*(j - 1)","fx.pos_y","","l.width/(Size + Space) + 1","Size","\"m 15 0 b 8 0 0 8 0 15 l 0 85 b 0 92 8 100 15 100 l 85 100 b 92 100 100 92 100 85 l 100 15 b 100 8 92 0 85 0 \"","\\bord1.5\\blur0.5\\fad(60,60)","Size = 40*ratio;\nSpace = 8*ratio","Automation Auto-4",false); table.insert(shape_fx_library, Space_Line_LI_Ryuugajou_OP_1); table.insert(shape_fx, "Space Line LI Ryuugajou OP 1")
	Splash_HL_I = table.duplicate(Shape_Box); table.inbox(Splash_HL_I, "shape[fx]: Splash HL I","Syl",true,false,"#1A92FC","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time","l.start_time + syl.start_time + 600 + 10*R( 25 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x + math.polar( var.loop.A, R( 25, 40 )*ratio, \"x\" )","fx.pos_y, fx.pos_y + math.polar( var.loop.A, R( 25, 40 )*ratio, \"y\" )","","R( 7, 12 )","28*ratio","\"m 0 19 l 23 28 b 49 38 49 0 23 10 l 0 19 \"","format( \"\\\\bord0\\\\shad0\\\\fad(0,300)\\\\fr%s\", var.loop.A )","A = R( 90 )*4","Lua",false); table.insert(shape_fx_library, Splash_HL_I); table.insert(shape_fx, "Splash HL I")
	Star_HNsW_ED_4_HL = table.duplicate(Shape_Box); table.inbox(Star_HNsW_ED_4_HL, "shape[fx]: Star HNsW ED 4 HL","Syl",false,false,"#FEF862","#FF2C15","#5789A8","0","0","0","l.start_time + fx_start","l.start_time + fx_end","","","","","syl.center","syl.middle","","","5","0","fx.pos_l + fx_dxi, fx.pos_l + fx_dxf","fx.pos_y","","1","Size","\"m 34 30 l 0 36 l 23 62 l 20 95 l 50 80 l 81 94 l 77 62 l 100 36 l 66 30 l 50 0 l 34 30 \"","format( \"\\\\bord%s\\\\blur1.2\\\\fr%s\\\\t(\\\\fr%s)\", 6*ratio, -0.32*syl.start_time, -0.32*syl.end_time ), fx_fad","Size = 72*ratio;\nvars = function( )\n	replay( 3 )\n	fx_start = syl.start_time\n	fx_end = syl.end_time\n	fx_dxi = -Size/2\n	fx_dxf = -Size/2 + syl.widtht\n	fx_fad = \"\"\n	if J == 1 then\n		fxgroup = ( syl.i == 1 )\n		fx_start = -300\n		fx_end = 0\n		fx_dxi = -160*ratio\n		fx_dxf = -Size/2\n		fx_fad = \"\\\\fad(160,0)\"\n	elseif J == 3 then\n		fxgroup = ( syl.i == syl.n )\n		fx_start = syl.end_time\n		fx_end = syl.end_time + 300\n		fx_dxi = -Size/2 + syl.widtht\n		fx_dxf = -Size/2 + syl.widtht + 160*ratio\n		fx_fad = \"\\\\fad(0,160)\"\n	end\n	return \"\"\nend;\nmy_vars = vars( )","Lua",false); table.insert(shape_fx_library, Star_HNsW_ED_4_HL); table.insert(shape_fx, "Star HNsW ED 4 HL")
	Star_Soul_HL_I = table.duplicate(Shape_Box); table.inbox(Star_Soul_HL_I, "shape[fx]: Star Soul HL I","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 300, 700 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y - var.loop.Dy2","","syl.dur/22","R( 6,10 )*ratio","shape.shine2t","format( \"\\\\bord0.4\\\\shad0\\\\blur4\\\\3c%s\\\\fad(20,200)\", var.loop.Color ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. var.loop.Color )","Dx1 = R( -0.6*syl.width, 0.6*syl.width ); Dx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 10 )*ratio; Dy2 = R( 30, 120 )*ratio;\nColor = random.color( )","Lua",false); table.insert(shape_fx_library, Star_Soul_HL_I); table.insert(shape_fx, "Star Soul HL I")
	Star_Soul_HL_II = table.duplicate(Shape_Box); table.inbox(Star_Soul_HL_II, "shape[fx]: Star Soul HL II","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 300, 700 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y + var.loop.Dy2","","syl.dur/22","R( 6,10 )*ratio","shape.shine2t","format( \"\\\\bord0.4\\\\shad0\\\\blur4\\\\3c%s\\\\fad(20,200)\", var.loop.Color ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. var.loop.Color )","Dx1 = R( -0.6*syl.width, 0.6*syl.width ); Dx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 10 )*ratio; Dy2 = R( 30, 120 )*ratio;\nColor = random.color( )","Lua",false); table.insert(shape_fx_library, Star_Soul_HL_II); table.insert(shape_fx, "Star Soul HL II")
	Star_Soul_HL_III = table.duplicate(Shape_Box); table.inbox(Star_Soul_HL_III, "shape[fx]: Star Soul HL III","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + R( 300, 700 )","","","","","syl.center","syl.middle","","","5","R( 0 ,2 )","fx.pos_x + var.loop.Dx1, fx.pos_x + var.loop.Dx2","fx.pos_y + var.loop.Dy1, fx.pos_y + var.loop.Dy2*(-1)^R( 2 )","","syl.dur/10","R( 6,10 )*ratio","shape.shine2t","format( \"\\\\bord0.4\\\\shad0\\\\blur4\\\\3c%s\\\\fad(20,200)\", var.loop.Color ), tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. var.loop.Color )","Dx1 = R( -0.4*syl.width, 0.4*syl.width ); Dx2 = R( -10, 10 )*ratio;\nDy1 = R( -10, 10 )*ratio; Dy2 = R( 30, 120 )*ratio;\nColor = random.color( )","Lua",false); table.insert(shape_fx_library, Star_Soul_HL_III); table.insert(shape_fx, "Star Soul HL III")
	Stars_Rain_postline = table.duplicate(Shape_Box); table.inbox(Stars_Rain_postline, "shape[fx]: Stars Rain postline","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.end_time + time_lo( 50 ) + R( -200 )","l.end_time + time_lo( 50 ) + R( 800, 1600 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.dx1, fx.pos_x - var.loop.dx2","fx.pos_y + var.loop.dy1, fx.pos_y - var.loop.dy1","","R( 8, 16 )","R( 10, 15 )","shape.shine2t","\"\\\\bord0.4\\\\shad0\\\\blur4\\\\fad(20,200)\", tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. shape.color3 )","dx1 = R( -syl.width/2, syl.width/2 );\ndx2 = R( 60, 500 )*ratio;\ndy1 = R( -0.36*syl.height, 0.4*syl.height )","Lua",false); table.insert(shape_fx_library, Stars_Rain_postline); table.insert(shape_fx, "Stars Rain postline")
	Stars_Rain_preline = table.duplicate(Shape_Box); table.inbox(Stars_Rain_preline, "shape[fx]: Stars Rain preline","Syl",true,false,"#FFFFFF","#008DFF","#FFFFFF","20","40","0","l.start_time + time_li( 50 ) + R( -200 ) + 200*module","fx.start_time + R( 600, 800 )","","","","","syl.center","syl.middle","","","5","R( 0, 2 )","fx.pos_x + var.loop.dx1, fx.pos_x - var.loop.dx2","fx.pos_y, fx.pos_y + R( -40, 40 )*ratio","","R( 8, 16 )","R( 10, 15 )","shape.shine2t","\"\\\\bord0.4\\\\shad0\\\\blur4\\\\fad(20,200)\", tag.glitter( fx.dur, \"\\\\3c&HFFFFFF&\", \"\\\\3c\" .. shape.color3 )","dx1 = R( -syl.width/2, syl.width/2 );\ndx2 = R( 100, 200 )*ratio;\ndy1 = R( -0.4*syl.height, 0.4*syl.height )","Lua",false); table.insert(shape_fx_library, Stars_Rain_preline); table.insert(shape_fx, "Stars Rain preline")
	Steam_HL_I = table.duplicate(Shape_Box); table.inbox(Steam_HL_I, "shape[fx]: Steam HL I","Syl",true,false,"#41FF95","#3F3C3C","#FFFFFF","80","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time + 800 + R( 400 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x + var.loop.dx1, fx.pos_x + var.loop.dx2","fx.pos_y + var.loop.dy1, fx.pos_y - var.loop.dy2","","syl.dur/15","Size, 2*Size","shape.diamond","\"\\\\bord0\\\\shad0\\\\fad(0,200)\\\\blur2\"","Size = 5*ratio;\ndx1 = R( -syl.width/2, syl.width/2 );\ndy1 = R( -0.2*syl.height, 0.2*syl.height );\ndx2 = R( -syl.width/2, syl.width/2 );\ndy2 = R( 0.5*syl.height, 1.5*syl.height )","Lua",false); table.insert(shape_fx_library, Steam_HL_I); table.insert(shape_fx, "Steam HL I")
	Steam_HL_II = table.duplicate(Shape_Box); table.inbox(Steam_HL_II, "shape[fx]: Steam HL II","Syl",true,false,"#0365FD","#3F3C3C","#FFFFFF","90","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + 800 + R( 200 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_l + syl.width*module + R(-10, 10)*ratio, fx.pos_l + syl.width*module + var.loop.dx1","fx.pos_b - l.descent - R( -3, 12 )*ratio, fx.pos_b - l.descent - var.loop.dy1","","syl.dur/10","Size, 2*Size","shape.diamond","\"\\\\bord0\\\\shad0\\\\fad(80,200)\\\\blur3\"","Size = 8*ratio;\ndx1 = R( -syl.width/4, 40 );\ndy1 = R( syl.height/2, syl.height )","Lua",false); table.insert(shape_fx_library, Steam_HL_II); table.insert(shape_fx, "Steam HL II")
	Stick_TopBottom_HL = table.duplicate(Shape_Box); table.inbox(Stick_TopBottom_HL, "shape[fx]: Stick TopBottom HL","Syl",true,false,"#01B1FF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + syl.start_time - delay","l.start_time + syl.end_time + delay","","","","","syl.center","syl.top","","","5","2","fx.pos_x, fx.pos_x","fx.pos_y, fx.pos_y + syl.height","delay, fx.dur - delay","1","0, 4*ratio","shape.rectangle","format( \"\\\\bord0\\\\shad0\\\\blur0.5\\\\t(0,%s,\\\\fscx%s)\\\\t(%s,%s,\\\\fscx0)\", delay, syl.width, fx.dur - 200, fx.dur )","delay = 200","Lua",false); table.insert(shape_fx_library, Stick_TopBottom_HL); table.insert(shape_fx, "Stick TopBottom HL")
	Text_to_Pixels_Shine_HL_I = table.duplicate(Shape_Box); table.inbox(Text_to_Pixels_Shine_HL_I, "shape[fx]: Text to Pixels Shine HL I","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( -100, 100 )","fx.start_time + syl.dur + R( delay )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","7*ratio","text.to_pixels( syl.text, 1, shape.shine2t, 2 )","tag.glitter( ), format( \"\\\\fad(0,%s)\", delay )","delay = 200","Lua",false); table.insert(shape_fx_library, Text_to_Pixels_Shine_HL_I); table.insert(shape_fx, "Text to Pixels Shine HL I")
	Text_to_Pixels_Shine_HL_II = table.duplicate(Shape_Box); table.inbox(Text_to_Pixels_Shine_HL_II, "shape[fx]: Text to Pixels Shine HL II","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( -100, 100 )","fx.start_time + 860 + R( 540 )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x","fx.pos_y","","1","7*ratio","text.to_pixels( syl.text, 5, shape.shine2t, 2 )","tag.glitter( ), \"\\\\fad(0,120)\"","","Lua",false); table.insert(shape_fx_library, Text_to_Pixels_Shine_HL_II); table.insert(shape_fx, "Text to Pixels Shine HL II")
	Text_to_Pixels_Shine_HL_III = table.duplicate(Shape_Box); table.inbox(Text_to_Pixels_Shine_HL_III, "shape[fx]: Text to Pixels Shine HL III","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( -100, 100 )","fx.start_time + syl.dur + R( delay )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, syl.center + math.polar( var.loop.Angle, var.loop.Radius, \"x\" )","fx.pos_y, syl.middle + math.polar( var.loop.Angle, var.loop.Radius, \"y\" )","","1","7*ratio","text.to_pixels( syl.text, 1, shape.shine2t, 1 )","tag.glitter( ), format( \"\\\\fad(0,%s)\", delay )","delay = 200;\nAngle = R( 360 );\nRadius = ( 20 )*ratio","Lua",false); table.insert(shape_fx_library, Text_to_Pixels_Shine_HL_III); table.insert(shape_fx, "Text to Pixels Shine HL III")
	Text_to_Pixels_Shine_HL_IV = table.duplicate(Shape_Box); table.inbox(Text_to_Pixels_Shine_HL_IV, "shape[fx]: Text to Pixels Shine HL IV","Syl",true,false,"#FFFFFF","#3F3C3C","#FFFFFF","0","0","0","l.start_time + syl.start_time + R( syl.dur )","fx.start_time +860 + R( delay )","","","","","syl.center","syl.middle","","","5","1","fx.pos_x, fx.pos_x - R( -4, 4 )*ratio","fx.pos_y, fx.pos_y - R( 20, 40 )*ratio","","1","7*ratio","text.to_pixels( syl.text, 1, shape.shine2t, 2)","tag.glitter( ), format( \"\\\\fad(0,%s)\", delay )","delay = 200","Lua",false); table.insert(shape_fx_library, Text_to_Pixels_Shine_HL_IV); table.insert(shape_fx, "Text to Pixels Shine HL IV")
	Thunder_Line = table.duplicate(Shape_Box); table.inbox(Thunder_Line, "shape[fx]: Thunder Line","Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","shape.origin( var.loop.thunder( 20, 15, l.width ) )","format( \"\\\\3c%s\\\\blur3\\\\t(\\\\frx%s)\", shape.color3, R( 1.5*fx.dur, 2*fx.dur )*(-1)^R( 2 ) )","thunder = function( max_x, max_y, max_x2 )\n	local i, X, Y = 1, { }, { }\n	local DX, Tag = 0, \"m 0 0 l \"\n	local dx, dy\n	while DX < max_x2 do\n		dx = R( 8, max_x )*ratio\n		dy = R( -max_y, max_y )*ratio\n		X[i] = DX + dx\n		Y[i] = dy\n		Tag = Tag .. format( \"%s %s l \", X[i], Y[i] )\n		DX = DX + dx\n		i = i + 1\n	end\n	Tag = Tag:sub( 1, -3 )\n	for i = 1, #X do\n		Tag = Tag .. format( \"%s %s l \", X[#X - i + 1], Y[#Y - i + 1] + R( 0, 2 ) )\n	end\n	Tag = Tag:sub( 1, -3 )\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Thunder_Line); table.insert(shape_fx, "Thunder Line")
	Thunder_Syl_HL_I = table.duplicate(Shape_Box); table.inbox(Thunder_Syl_HL_I, "shape[fx]: Thunder Syl HL I","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time - 100 + syl.dur*module","fx.start_time + 400","","","","","syl.center","syl.middle","","","2","0","fx.pos_l, fx.pos_l + 1.25*syl.width*module","fx.pos_t + l.descent, fx.pos_t + l.descent","","ceil( syl.dur/56 )","","shape.origin( shape.rotate( var.loop.thunder( 20, 15, 80 ), R( 80, 100 ) ) )","format( \"\\\\3c%s\\\\fr%s\\\\blur3\\\\t(\\\\fry%s)\\\\fad(200,200)\", shape.color3, R( -20, 20 ), R( 1.5*fx.dur, 2*fx.dur )*(-1)^R( 2 ) )","thunder = function( max_x, max_y, max_x2 )\n	local i, X, Y = 1, { }, { }\n	local DX, Tag = 0, \"m 0 0 l \"\n	local dx, dy\n	while DX < max_x2 do\n		dx = R( 8, max_x )*ratio\n		dy = R( -max_y, max_y )*ratio\n		X[i] = DX + dx\n		Y[i] = dy\n		Tag = Tag .. format( \"%s %s l \", X[i], Y[i] )\n		DX = DX + dx\n		i = i + 1\n	end\n	Tag = Tag:sub( 1, -3 )\n	for i = 1, #X do\n		Tag = Tag .. format( \"%s %s l \", X[#X - i + 1], Y[#Y - i + 1] + R( 0, 2 ) )\n	end\n	Tag = Tag:sub( 1, -3 )\n	return Tag\nend","Lua",false); table.insert(shape_fx_library, Thunder_Syl_HL_I); table.insert(shape_fx, "Thunder Syl HL I")
	Thunder_Syl_HL_II = table.duplicate(Shape_Box); table.inbox(Thunder_Syl_HL_II, "shape[fx]: Thunder Syl HL II","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + syl.start_time + (j - 1)*syl.dur/maxj - 100","l.start_time + syl.start_time + j*syl.dur/maxj + 100","","","","","syl.center","syl.middle","","","4","0","fx.pos_l, fx.pos_r","fx.pos_t + 1.2*l.descent","","syl.dur/80","","shape.origin( var.loop.thunder( 15*ratio, 15*ratio, ceil( fx.pos_y/sin( rad( var.syl.A1 ) ) ) ) )","format( \"\\\\blur4\\\\fr%s\\\\t(\\\\fr%s)\", A1, A2 )","thunder = function( max_x, max_y, max_x2 )\n	local i, DX, X, Y, Tag = 1, 0, { }, { }, \"m 0 0 l \"\n	local dx, dy\n	while DX < max_x2 do\n		dx = R( 8, max_x )\n		dy = R( -max_y, max_y )\n		X[i] = DX + dx\n		Y[i] = dy Tag = Tag .. format( \"%s %s l \", X[i], Y[i] )\n		DX = DX + dx\n		i = i + 1\n	end\n	Tag = Tag:sub( 1, -3 )\n	for i = 1, #X do\n		Tag = Tag .. format( \"%s %s l \", X[#X - i + 1], Y[#Y - i + 1] + R( 0, 2 ) )\n	end\n	Tag = Tag:sub( 1, -3 )\n	return Tag\nend;\nA1 = math.angle( syl.left, syl.top, xres/2, -yres/3 );\nA2 = math.angle( syl.right, syl.top, xres/2, -yres/3 )","Lua",false); table.insert(shape_fx_library, Thunder_Syl_HL_II); table.insert(shape_fx, "Thunder Syl HL II")
	Thunder_Syl_preline = table.duplicate(Shape_Box); table.inbox(Thunder_Syl_preline, "shape[fx]: Thunder Syl preline","Syl",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) + 50*module","fx.start_time + 50*module + 80","","","","","syl.center","syl.middle","","","4","2","fx.pos_l, fx.pos_r","fx.pos_t + 1.4*l.descent","","R( 2, 3 )","","shape.origin( var.loop.thunder( 15*ratio, 15*ratio, ceil( fx.pos_y/sin( rad( A1 ) ) ) ) )","format( \"\\\\blur4\\\\fr%s\\\\t(\\\\fr%s)\", A1, A2 )","thunder = function( max_x, max_y, max_x2 )\n	local i, DX, X, Y, Tag = 1, 0, { }, { }, \"m 0 0 l \"\n	local dx, dy\n	while DX < max_x2 do\n		dx = R( 8, max_x )\n		dy = R( -max_y, max_y )\n		X[i] = DX + dx\n		Y[i] = dy Tag = Tag .. format( \"%s %s l \", X[i], Y[i] )\n		DX = DX + dx\n		i = i + 1\n	end\n	Tag = Tag:sub( 1, -3 )\n	for i = 1, #X do\n		Tag = Tag .. format( \"%s %s l \", X[#X - i + 1], Y[#Y - i + 1] + R( 0, 2 ) )\n	end\n	Tag = Tag:sub( 1, -3 )\n	return Tag\nend;\nA1 = math.angle( syl.left, syl.top, xres/2, -yres/3 );\nA2 = math.angle( syl.right, syl.top, xres/2, -yres/3 )","Lua",false); table.insert(shape_fx_library, Thunder_Syl_preline); table.insert(shape_fx, "Thunder Syl preline")
	Water_Waves = table.duplicate(Shape_Box); table.inbox(Water_Waves, "shape[fx]: Water Waves","Syl",true,false,"#FFFFFF","#FFFFFF","#FFFFFF","0","0","0","l.start_time + syl.start_time + syl.dur*module","fx.start_time + delay","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_b - 0.8*l.descent","","ceil( (syl.dur + var.syl.delay)/400 )","0","shape.circle","format( \"\\\\shad0\\\\bord2\\\\1a&HFF&\\\\t(\\\\fscx%s\\\\fscy%s)\\\\fad(60,%s)\", 1.2*sizexy, sizexy/4, delay )","delay = 500;\nsizexy = 100*ratio","Lua",false); table.insert(shape_fx_library, Water_Waves); table.insert(shape_fx, "Water Waves")
	
	--translation FX List
	Agitation_Char = table.duplicate(Trans_Box); table.inbox(Agitation_Char, "translation[fx]: Agitation Char","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + 50*(char.i - char.n/2 + 8) - 360","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x - l.height, fx.pos_x","fx.pos_y","0, 400","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + dy, fx.pos_x, fx.pos_y - dy, fx.pos_x, fx.pos_y }, nil, 450 ), \"\\\\fad(150,300)\"","dy = 8*ratio","Lua"); table.insert(transla_fx_library, Agitation_Char); table.insert(transla_fx, "Agitation Char")
	Agitation_Char_II = table.duplicate(Trans_Box); table.inbox(Agitation_Char_II, "translation[fx]: Agitation Char II","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 ) + 100","l.end_time + time_lo( 30 ) - 100","","","","","char.center","char.middle","","","5","0","fx.pos_x - char.height, fx.pos_x","fx.pos_y","0, 400","1","","char.text","format( \"\\\\org(%s,%s)\\\\fad(200,200)\", fx.move_x1 - 10000*ratio, fx.move_y1 ), tag.oscill( 450, 150, \"\\\\fr\" .. angle, \"\\\\fr\" .. -angle, \"\\\\fr0\" )","angle = 0.04*ratio","Lua"); table.insert(transla_fx_library, Agitation_Char_II); table.insert(transla_fx, "Agitation Char II")
	Animated_Clips_I_Center_I = table.duplicate(Trans_Box); table.inbox(Animated_Clips_I_Center_I, "translation[fx]: Animated Clips I Center I","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","line.text_stripped","clips[ j ]","clips = {\n	[ 1 ] = \"\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.center, l.bottom ))\\\\t(fx.dur-200,fx.dur,\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom ))\",\n	[ 2 ] = \"\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.center, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom ))\",\n}","Lua",false); table.insert(transla_fx_library, Animated_Clips_I_Center_I); table.insert(transla_fx, "Animated Clips I Center I")
	Animated_Clips_II_Center_II = table.duplicate(Trans_Box); table.inbox(Animated_Clips_II_Center_II, "translation[fx]: Animated Clips II Center II","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.center, l.top, l.center, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.center, l.top, l.center, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_II_Center_II); table.insert(transla_fx, "Animated Clips II Center II")
	Animated_Clips_II_Center_II_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_II_Center_II_Mark, "translation[fx]: Animated Clips II Center II Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.center, l.top, l.center, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.center, l.top, l.center, l.bottom ))\", \"\\\\1a255\\\\fscx0\\\\t(0,220,\\\\fscx100)\\\\t(fx.dur - 220,fx.dur,\\\\fscx0)\" )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_II_Center_II_Mark); table.insert(transla_fx, "Animated Clips II Center II Mark")
	Animated_Clips_III_LL = table.duplicate(Trans_Box); table.inbox(Animated_Clips_III_LL, "translation[fx]: Animated Clips III LL","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_III_LL); table.insert(transla_fx, "Animated Clips III LL")
	Animated_Clips_III_LL_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_III_LL_Mark, "translation[fx]: Animated Clips III LL Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom ))\", \"\\\\an4\\\\pos(fx.pos_l - 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(0,220,\\\\fscx100)\\\\t(fx.dur - 220,fx.dur,\\\\fscx0)\" )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_III_LL_Mark); table.insert(transla_fx, "Animated Clips III LL Mark")
	Animated_Clips_IV_LR = table.duplicate(Trans_Box); table.inbox(Animated_Clips_IV_LR, "translation[fx]: Animated Clips IV LR","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_IV_LR); table.insert(transla_fx, "Animated Clips IV LR")
	Animated_Clips_IV_LR_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_IV_LR_Mark, "translation[fx]: Animated Clips IV LR Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom ))\", tag.only( j == 2, \"\\\\an4\\\\pos(fx.pos_l - 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(0,220,\\\\fscx100)\\\\t(220,220,\\\\fscx0)\", \"\\\\an6\\\\pos(fx.pos_r + 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(220,220,\\\\fscx100)\\\\t(fx.dur - 220,fx.dur,\\\\fscx0)\" ) )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_IV_LR_Mark); table.insert(transla_fx, "Animated Clips IV LR Mark")
	Animated_Clips_V_RR = table.duplicate(Trans_Box); table.inbox(Animated_Clips_V_RR, "translation[fx]: Animated Clips V RR","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_V_RR); table.insert(transla_fx, "Animated Clips V RR")
	Animated_Clips_V_RR_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_V_RR_Mark, "translation[fx]: Animated Clips V RR Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom ))\", \"\\\\an6\\\\pos(fx.pos_r + 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(0,220,\\\\fscx100)\\\\t(fx.dur - 220,fx.dur,\\\\fscx0)\" )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_V_RR_Mark); table.insert(transla_fx, "Animated Clips V RR Mark")
	Animated_Clips_VI_RL = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VI_RL, "translation[fx]: Animated Clips VI RL","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VI_RL); table.insert(transla_fx, "Animated Clips VI RL")
	Animated_Clips_VI_RL_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VI_RL_Mark, "translation[fx]: Animated Clips VI RL Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.right + 10r, l.top, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.left - 10r, l.bottom ))\", tag.only( j == 2, \"\\\\an6\\\\pos(fx.pos_r + 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(0,220,\\\\fscx100)\\\\t(220,220,\\\\fscx0)\", \"\\\\an4\\\\pos(fx.pos_l - 10r,fx.pos_y)\\\\1a255\\\\fscx0\\\\t(220,220,\\\\fscx100)\\\\t(fx.dur - 220,fx.dur,\\\\fscx0)\" ) )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VI_RL_Mark); table.insert(transla_fx, "Animated Clips VI RL Mark")
	Animated_Clips_VII_TT = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VII_TT, "translation[fx]: Animated Clips VII TT","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VII_TT); table.insert(transla_fx, "Animated Clips VII TT")
	Animated_Clips_VII_TT_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VII_TT_Mark, "translation[fx]: Animated Clips VII TT Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur-200,fx.dur,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top ))\", \"\\\\an8\\\\pos(fx.pos_x,fx.pos_t)\\\\1a255\\\\fscy0\\\\t(0,220,\\\\fscy100)\\\\t(fx.dur - 220,fx.dur,\\\\fscy0)\" )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VII_TT_Mark); table.insert(transla_fx, "Animated Clips VII TT Mark")
	Animated_Clips_VIII_TB = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VIII_TB, "translation[fx]: Animated Clips VIII TB","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VIII_TB); table.insert(transla_fx, "Animated Clips VIII TB")
	Animated_Clips_VIII_TB_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_VIII_TB_Mark, "translation[fx]: Animated Clips VIII TB Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur-200,fx.dur,\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom ))\", tag.only( j == 2, \"\\\\an8\\\\pos(fx.pos_x,fx.pos_t)\\\\1a255\\\\fscy0\\\\t(0,220,\\\\fscy100)\\\\t(220,220,\\\\fscy0)\", \"\\\\an2\\\\pos(fx.pos_x,fx.pos_b)\\\\1a255\\\\fscy0\\\\t(220,220,\\\\fscy100)\\\\t(fx.dur - 220,fx.dur,\\\\fscy0)\" ) )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_VIII_TB_Mark); table.insert(transla_fx, "Animated Clips VIII TB Mark")
	Animated_Clips_IX_BB = table.duplicate(Trans_Box); table.inbox(Animated_Clips_IX_BB, "translation[fx]: Animated Clips IX BB","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_IX_BB); table.insert(transla_fx, "Animated Clips IX BB")
	Animated_Clips_IX_BB_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_IX_BB_Mark, "translation[fx]: Animated Clips IX BB Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom ))\", \"\\\\an2\\\\pos(fx.pos_x,fx.pos_b)\\\\1a255\\\\fscy0\\\\t(0,220,\\\\fscy100)\\\\t(fx.dur - 220,fx.dur,\\\\fscy0)\" )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_IX_BB_Mark); table.insert(transla_fx, "Animated Clips IX BB Mark")
	Animated_Clips_X_BT = table.duplicate(Trans_Box); table.inbox(Animated_Clips_X_BT, "translation[fx]: Animated Clips X BT","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top ))\"","","Lua",false); table.insert(transla_fx_library, Animated_Clips_X_BT); table.insert(transla_fx, "Animated Clips X BT")
	Animated_Clips_X_BT_Mark = table.duplicate(Trans_Box); table.inbox(Animated_Clips_X_BT_Mark, "translation[fx]: Animated Clips X BT Mark","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, l.width + 20r, l.height ) )","tag.only( j == 1, \"\\\\clip( l.left - 10r, l.bottom, l.right + 10r, l.bottom )\\\\t(0,220,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.bottom ))\\\\t(fx.dur - 220,fx.dur,\\\\clip( l.left - 10r, l.top, l.right + 10r, l.top ))\", tag.only( j == 2, \"\\\\an2\\\\pos(fx.pos_x,fx.pos_b)\\\\1a255\\\\fscy0\\\\t(0,220,\\\\fscy100)\\\\t(220,220,\\\\fscy0)\", \"\\\\an8\\\\pos(fx.pos_x,fx.pos_t)\\\\1a255\\\\fscy0\\\\t(220,220,\\\\fscy100)\\\\t(fx.dur - 220,fx.dur,\\\\fscy0)\" ) )","","Lua",false); table.insert(transla_fx_library, Animated_Clips_X_BT_Mark); table.insert(transla_fx, "Animated Clips X BT Mark")
	Asault = table.duplicate(Trans_Box); table.inbox(Asault, "translation[fx]: Asault","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y - 100*ratio, fx.pos_y","200, 400","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\fscx%s\\\\fscy%s\\\\blur3\\\\t(0,400,0.5,\\\\frx0\\\\fscx%s\\\\blur0)\\\\t(0,400,\\\\fscy%s)\\\\fad(150,300)\", fx.pos_x, fx.pos_y, 0.3*l.scale_x, 3*l.scale_y, l.scale_x, l.scale_y )","delay = R( 400, 800 )","Lua"); table.insert(transla_fx_library, Asault); table.insert(transla_fx, "Asault")
	Asault_Sequence = table.duplicate(Trans_Box); table.inbox(Asault_Sequence, "translation[fx]: Asault Sequence","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 60 ) - delay","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y - 100*ratio, fx.pos_y","200, 400","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx180\\\\fscx%s\\\\fscy%s\\\\blur3\\\\t(0,400,0.5,\\\\frx0\\\\fscx%s\\\\blur0)\\\\t(0,400,\\\\fscy%s)\\\\fad(150,200)\", fx.pos_x, fx.pos_y, 0.3*l.scale_x, 3*l.scale_y, l.scale_x, l.scale_y )","delay = R( 400, 800 )","Lua"); table.insert(transla_fx_library, Asault_Sequence); table.insert(transla_fx, "Asault Sequence")
	Asault_Line_I = table.duplicate(Trans_Box); table.inbox(Asault_Line_I, "translation[fx]: Asault Line I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x - d1, fx.pos_x","fx.pos_y","0, delay","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx-180\\\\fscx%s\\\\t(0,%s,\\\\frx0\\\\fscx%s)\\\\fad(200,200)\", fx.pos_x - d3, fx.pos_y + d2/2, 1.42*l.scale_x, delay, l.scale_x )","delay = 400;\nd1 = 150*ratio*(1 - 2*(char.i - 1)/(char.n - 2));\nd2 = 100*ratio;\nd3 = d2*(1 - 2*(char.i - 1)/(char.n - 2))","Lua"); table.insert(transla_fx_library, Asault_Line_I); table.insert(transla_fx, "Asault Line I")
	Asault_Line_II = table.duplicate(Trans_Box); table.inbox(Asault_Line_II, "translation[fx]: Asault Line II","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 0.85*delay","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x - d1, fx.pos_x","fx.pos_y","0, delay","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx-180\\\\fscx%s\\\\t(0,%s,\\\\frx0\\\\fscx%s)\\\\fad(200,200)\", fx.pos_x - d3, fx.pos_y + d2/2, 1.42*l.scale_x, delay, l.scale_x )","delay = 420;\nd1 = 150*ratio*(1 - 2*(char.i - 1)/(char.n - 2));\nd2 = 100*ratio;\nd3 = d2*(1 - 2*(char.i - 1)/(char.n - 2))","Lua"); table.insert(transla_fx_library, Asault_Line_II); table.insert(transla_fx, "Asault Line II")
	Auxiliar_Bord_Shine_I = table.duplicate(Trans_Box); table.inbox(Auxiliar_Bord_Shine_I, "translation[fx]: Auxiliar Bord Shine I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 20 )","fx.start_time + delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\shad0\\\\bord2\\\\blur2\\\\1a&HFF&\\\\3c&HFFFFFF&\\\\t(0,%s,\\\\fscx%s\\\\fscy%s\\\\blur5)\\\\t(%s,%s,\\\\fscx%s\\\\fscy%s\\\\blur2)\\\\fad(200,200)\", fx.dur/2, 1.25*l.scale_x, 1.25*l.scale_y, fx.dur/2, fx.dur, l.scale_x, l.scale_y )","delay = 640 + 15*char.i","Lua"); table.insert(transla_fx_library, Auxiliar_Bord_Shine_I); table.insert(transla_fx, "Auxiliar Bord Shine I")
	Auxiliar_Multiclip_H = table.duplicate(Trans_Box); table.inbox(Auxiliar_Multiclip_H, "translation[fx]: Auxiliar Multiclip H","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 20 ) - 300","l.start_time + time_li( 20 )","","","","","char.center","char.middle","","","5","0","fx.pos_x + 0.28*l.height*(-1)^j, fx.pos_x","fx.pos_y","0, 300 - frame_dur","8","","char.text","tag.clip( fx.pos_l - l.height, fx.pos_t, char.width + 2*l.height, char.height ), \"\\\\fad(120,0)\"","","Lua"); table.insert(transla_fx_library, Auxiliar_Multiclip_H); table.insert(transla_fx, "Auxiliar Multiclip H")
	Auxiliar_Spark_Shine_I = table.duplicate(Trans_Box); table.inbox(Auxiliar_Spark_Shine_I, "translation[fx]: Auxiliar Spark Shine I","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 24 )","fx.start_time + delay + 10*j","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","12","","char.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 ), fx.dur )","delay = 640 + 30*char.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua"); table.insert(transla_fx_library, Auxiliar_Spark_Shine_I); table.insert(transla_fx, "Auxiliar Spark Shine I")
	Auxiliar_Spark_Shine_II = table.duplicate(Trans_Box); table.inbox(Auxiliar_Spark_Shine_II, "translation[fx]: Auxiliar Spark Shine II","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 24 )","fx.start_time + delay + 10*j","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","12","","char.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 )*(-1)^char.i, fx.dur )","delay = 640 + 30*char.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua"); table.insert(transla_fx_library, Auxiliar_Spark_Shine_II); table.insert(transla_fx, "Auxiliar Spark Shine II")
	Auxiliar_Spark_Shine_III = table.duplicate(Trans_Box); table.inbox(Auxiliar_Spark_Shine_III, "translation[fx]: Auxiliar Spark Shine III","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 24 )","fx.start_time + delay + 10*j","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","18","","char.text","format( \"\\\\1c&HFFFFFF&\\\\shad0\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\1a%s\\\\t(0,80,\\\\fr%s)\\\\t(80,%s,\\\\fr0)\\\\fad(200,200)\", -10000*ratio, fx.pos_y, alpha.interpolate( A1, A2, module ), math.round( angle*module, 3 )*(-1)^j, fx.dur )","delay = 640 + 30*char.i;\nangle = 0.32;\nA1 = 100;\nA2 = 245","Lua"); table.insert(transla_fx_library, Auxiliar_Spark_Shine_III); table.insert(transla_fx, "Auxiliar Spark Shine III")
	bikutoru_no_fx_I = table.duplicate(Trans_Box); table.inbox(bikutoru_no_fx_I, "translation[fx]: bikutoru no fx I","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","2","tag.only( j == 1, 300, l.scale_x ), tag.only( j == 1, 80, l.scale_y )","tag.only( j == 1, mi_shape, line.text_stripped )","tag.only( j == 1, \"\\\\bord0\\\\shad0\\\\1c&HFFFFFF&\\\\blur1\" .. tag.oscill( { 0, 5*delay }, { { delay, 1} }, \"\\\\alpha&HFF&\", \"\\\\alpha&H00&\" ), \"\\\\alpha&HFF&\\\\fad(0,200)\" .. tag.oscill( { delay, 7*delay }, { { delay, 1} }, \"\\\\alpha&HFF&\", text.alpha ) )","delay = frame_dur*2;\nmi_shape = shape.array( shape.array( \"m 100 0 b 0 0 0 2 100 6 b 42 3 54 2 100 0 m 28 13 b 48 16 73 14 96 13 b 67 11 47 12 28 13 m 0 8 b 20 11 45 9 68 8 b 39 6 19 7 0 8 \", ceil( l.width/220 ), \"array\", -30 ), 2, 270, 12 )","Lua"); table.insert(transla_fx_library, bikutoru_no_fx_I); table.insert(transla_fx, "bikutoru no fx I")
	Blur_Line = table.duplicate(Trans_Box); table.inbox(Blur_Line, "translation[fx]: Blur Line","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","l.center","l.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","format( \"\\\\bord0\\\\fscy%s\\\\blur12\\\\t(0,300,\\\\fscy%s\\\\blur0)\\\\t(299,300,\\\\bord%s)\\\\t(%s,%s,\\\\bord0)\\\\t(%s,%s,\\\\fscy%s\\\\blur12)\", 2.6*l.scale_y, l.scale_y, l.outline, fx.dur - 301, fx.dur - 300, fx.dur - 300, fx.dur, 2.6*l.scale_y )","","Lua"); table.insert(transla_fx_library, Blur_Line); table.insert(transla_fx, "Blur Line")
	Char_Dancing_I = table.duplicate(Trans_Box); table.inbox(Char_Dancing_I, "translation[fx]: Char Dancing I","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 25 )","l.end_time + time_lo( 25 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","tag.oscill( fx.dur, 360, format( \"\\\\fr%s\", -Angle*(-1)^char.i ), format( \"\\\\fr%s\", Angle*(-1)^char.i ) ), \"\\\\fad(200,200)\"","Angle = 8","Lua"); table.insert(transla_fx_library, Char_Dancing_I); table.insert(transla_fx, "Char Dancing I")
	Char_Dancing_II = table.duplicate(Trans_Box); table.inbox(Char_Dancing_II, "translation[fx]: Char Dancing II","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 25 )","l.end_time + time_lo( 25 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\fad(200,200)\", fx.move_x1 - 10000, fx.move_y1 ), tag.oscill( fx.dur, 360, format( \"\\\\fr%s\", -Angle*(-1)^char.i ), format( \"\\\\fr%s\", Angle*(-1)^char.i ) )","Angle = 0.02","Lua"); table.insert(transla_fx_library, Char_Dancing_II); table.insert(transla_fx, "Char Dancing II")
	Char_Gradient_MultiColor = table.duplicate(Trans_Box); table.inbox(Char_Gradient_MultiColor, "translation[fx]: Char Gradient MultiColor","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","gradient( ), \"\\\\fad(200,200)\"","gradient = function( )\n	local colors = { }\n	for i = 1, char.n do\n		colors[i] = ass_color( HSV_to_RGB( 8*i, 0.8, 1 ) )\n	end\n	return format( \"\\\\1c%s\", colors[char.i] )\nend","Lua"); table.insert(transla_fx_library, Char_Gradient_MultiColor); table.insert(transla_fx, "Char Gradient MultiColor")
	Char_Move_Wind = table.duplicate(Trans_Box); table.inbox(Char_Move_Wind, "translation[fx]: Char Move Wind","Translation Char",true,false,"#CE04D9","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 20 )","l.end_time + time_lo( 20 ) - 200","","","","","char.center","char.middle","","","5","","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\fad(200,200)\", shape.Smove( var.line.random_move )","random_move = shape.ratio( shape.trajectory( ), 0.25 )","Lua"); table.insert(transla_fx_library, Char_Move_Wind); table.insert(transla_fx, "Char Move Wind")
	Char_Random_I = table.duplicate(Trans_Box); table.inbox(Char_Random_I, "translation[fx]: Char Random I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + 600*module + time_li( 12 )","tag.only( j == maxj, l.end_time, fx.start_time + 100 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","char.text","{\\fad(50,0)} !tag.only( j == maxj, char.text, string.char( R( 97, 122 ) ) )!","","Automation Auto-4"); table.insert(transla_fx_library, Char_Random_I); table.insert(transla_fx, "Char Random I")
	Char_Random_II = table.duplicate(Trans_Box); table.inbox(Char_Random_II, "translation[fx]: Char Random II","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 30 ) + delay*(j - 1)","tag.only( j == maxj, l.end_time + time_lo( 30 ), fx.start_time + delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","4","","tag.only( j == maxj, char.text, string.char( R( 97, 122 ) ) )","tag.only( j ~= maxj, format( \"\\\\alpha%s\\\\t(\\\\alpha%s)\", alpha.interpolate( \"&HEE&\", \"&H00&\", (j - 1)/maxj ), alpha.interpolate( \"&HFF&\", \"&H00&\", j/maxj ) ), \"\\\\fad(0,200)\" )","delay = 80","Lua"); table.insert(transla_fx_library, Char_Random_II); table.insert(transla_fx, "Char Random II")
	Char_Random_III = table.duplicate(Trans_Box); table.inbox(Char_Random_III, "translation[fx]: Char Random III","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + delay*(j - 1) + R( -200, 200 )","tag.only( j == maxj, l.end_time - 160, fx.start_time + delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","5","","tag.only( j == maxj, char.text, string.char( R( 97, 122 ) ) )","tag.only( j ~= maxj, format(\"\\\\alpha%s\\\\t(\\\\alpha%s)\", alpha.interpolate( \"&HEE&\", \"&H00&\", (j - 1)/maxj), alpha.interpolate( \"&HEE&\", \"&H00&\", j/maxj ) ), \"\\\\fad(0,200)\" )","delay = 2*frame_dur","Lua"); table.insert(transla_fx_library, Char_Random_III); table.insert(transla_fx, "Char Random III")
	Char_Rmove_Line = table.duplicate(Trans_Box); table.inbox(Char_Rmove_Line, "translation[fx]: Char Rmove Line","Translation Char",true,false,"#FFFFFF","#76B447","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 8*ratio ), \"\\\\1c{ shape.color1, shape.color3, shape.color4 }\\\\fad(200,200)\"","random_mode = \"line\"","Lua"); table.insert(transla_fx_library, Char_Rmove_Line); table.insert(transla_fx, "Char Rmove Line")
	Char_Twister_I = table.duplicate(Trans_Box); table.inbox(Char_Twister_I, "translation[fx]: Char Twister I","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + char.i*20 -1250","l.end_time + time_lo( 30 )","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dxy, fx.pos_x","fx.pos_y - Dxy, fx.pos_y","800, 1000","1","","char.text","format( \"\\\\org(%s,%s)\\\\frz180\\\\fscx%s\\\\fscy%s\\\\t(0,800,0.6,\\\\frz720\\\\fscx%s\\\\fscy%s)\\\\fad(400,200)\", fx.pos_x, fx.pos_y, 0.6*l.scale_x, 0.6*l.scale_y, l.scale_x, l.scale_y )","Dxy = 16*ratio","Lua"); table.insert(transla_fx_library, Char_Twister_I); table.insert(transla_fx, "Char Twister I")
	Char_Twister_II_Double = table.duplicate(Trans_Box); table.inbox(Char_Twister_II_Double, "translation[fx]: Char Twister II Double","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + char.i*20 -1250","l.end_time + time_lo( 30 )","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dxy*(-1)^j, fx.pos_x","fx.pos_y - Dxy*(-1)^j, fx.pos_y","800, 1000","2","","char.text","format( \"\\\\org(%s,%s)\\\\frz180\\\\fscx%s\\\\fscy%s\\\\t(0,800,0.6,\\\\frz720\\\\fscx%s\\\\fscy%s)\\\\fad(400,200)\", fx.pos_x, fx.pos_y, 0.6*l.scale_x, 0.6*l.scale_y, l.scale_x, l.scale_y ), tag.only( j == 1, \"\\\\t(1000,1001,\\\\alpha&HFF&)\" )","Dxy = 16*ratio","Lua"); table.insert(transla_fx_library, Char_Twister_II_Double); table.insert(transla_fx, "Char Twister II Double")
	Char_Under_Sea = table.duplicate(Trans_Box); table.inbox(Char_Under_Sea, "translation[fx]: Char Under Sea","Translation Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( delay )","l.end_time + time_lo( delay )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Omove( mi_shape, 0, fx.dur, 880, 0.8 ), \"\\\\fad(200,200)\"","delay = 12;\nmi_shape = \"m -18 -16 l 18 16 l 36 0 l 18 -16 l -18 16 l -36 0 \"","Lua",false); table.insert(transla_fx_library, Char_Under_Sea); table.insert(transla_fx, "Char Under Sea")
	Clasic_Fade = table.duplicate(Trans_Box); table.inbox(Clasic_Fade, "translation[fx]: Clasic Fade","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","\"\\\\fad(200,200)\"","","Lua"); table.insert(transla_fx_library, Clasic_Fade); table.insert(transla_fx, "Clasic Fade")
	Clip_Curves_LI = table.duplicate(Trans_Box); table.inbox(Clip_Curves_LI, "translation[fx]: Clip Curves LI","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","curves( )","curves = function( )\n	local function curves2( )\n		local Shape, Shapes, mod = format( \"m 0 %s \", l.height ), { }, { }\n		mod[ 1 ] = format( \"b %s %s %s 0 %s 0 \", l.height / 2, l.height, l.height / 2, l.height )\n		mod[ 2 ] = format( \"b %s 0 %s %s %s %s \", l.height / 2, l.height / 2, l.height, l.height, l.height )\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. shape.displace( mod[ i%2 + 1 ], i * l.height, 0 )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n		Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = curves2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.45 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Curves_LI); table.insert(transla_fx, "Clip Curves LI")
	Clip_Curves_LI_and_LO = table.duplicate(Trans_Box); table.inbox(Clip_Curves_LI_and_LO, "translation[fx]: Clip Curves LI and LO","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","curves( )","curves = function( )\n	local function curves2( )\n		local Shape, Shapes, mod = format( \"m 0 %s \", l.height ), { }, { }\n		mod[ 1 ] = format( \"b %s %s %s 0 %s 0 \", l.height / 2, l.height, l.height / 2, l.height )\n		mod[ 2 ] = format( \"b %s 0 %s %s %s %s \", l.height / 2, l.height / 2, l.height, l.height, l.height )\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. shape.displace( mod[ i%2 + 1 ], i * l.height, 0 )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n		Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	local shape_1, shape_2 = curves2( )\n	replay( 3 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.45 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	elseif J == 2 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Curves_LI_and_LO); table.insert(transla_fx, "Clip Curves LI and LO")
	Clip_Curves_LO = table.duplicate(Trans_Box); table.inbox(Clip_Curves_LO, "translation[fx]: Clip Curves LO","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","curves( )","curves = function( )\n	local function curves2( )\n		local Shape, Shapes, mod = format( \"m 0 %s \", l.height ), { }, { }\n		mod[ 1 ] = format( \"b %s %s %s 0 %s 0 \", l.height / 2, l.height, l.height / 2, l.height )\n		mod[ 2 ] = format( \"b %s 0 %s %s %s %s \", l.height / 2, l.height / 2, l.height, l.height, l.height )\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. shape.displace( mod[ i%2 + 1 ], i * l.height, 0 )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n		Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local shape_1, shape_2 = curves2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.45 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", 0, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Curves_LO); table.insert(transla_fx, "Clip Curves LO")
	Clip_Randoms_LI = table.duplicate(Trans_Box); table.inbox(Clip_Randoms_LI, "translation[fx]: Clip Randoms LI","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","randoms( )","randoms = function( )\n	local function randoms2( )\n		local Shape = format( \"m 0 %s \", R( l.height ) )\n		local Shape_width = 0\n		local i, widthx = 0, 0\n		local Shapes\n		if j == 1 then\n			Shapes = remember( \"shps\", { } )\n			while Shape_width < l.width + l.height do\n				widthx = R( l.height )\n				Shape = Shape .. format( \"l %s %s \", Shape_width + widthx, R( l.height ) )\n				Shape_width = Shape_width + widthx\n				i = i + 1\n			end\n			Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n			Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		else\n			Shapes = recall.shps\n		end\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = randoms2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Randoms_LI); table.insert(transla_fx, "Clip Randoms LI")
	Clip_Randoms_LI_and_LO = table.duplicate(Trans_Box); table.inbox(Clip_Randoms_LI_and_LO, "translation[fx]: Clip Randoms LI and LO","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","randoms( )","randoms = function( )\n	local function randoms2( )\n		local Shape = format( \"m 0 %s \", R( l.height ) )\n		local Shape_width = 0\n		local i, widthx = 0, 0\n		local Shapes\n		if j == 1 then\n			Shapes = remember( \"shps\", { } )\n			while Shape_width < l.width + l.height do\n				widthx = R( l.height )\n				Shape = Shape .. format( \"l %s %s \", Shape_width + widthx, R( l.height ) )\n				Shape_width = Shape_width + widthx\n				i = i + 1\n			end\n			Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n			Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		else\n			Shapes = recall.shps\n		end\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	local shape_1, shape_2 = randoms2( )\n	replay( 3 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	elseif J == 2 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Randoms_LI_and_LO); table.insert(transla_fx, "Clip Randoms LI and LO")
	Clip_Randoms_LO = table.duplicate(Trans_Box); table.inbox(Clip_Randoms_LO, "translation[fx]: Clip Randoms LO","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","randoms( )","randoms = function( )\n	local function randoms2( )\n		local Shape = format( \"m 0 %s \", R( l.height ) )\n		local Shape_width = 0\n		local i, widthx = 0, 0\n		local Shapes\n		if j == 1 then\n			Shapes = remember( \"shps\", { } )\n			while Shape_width < l.width + l.height do\n				widthx = R( l.height )\n				Shape = Shape .. format( \"l %s %s \", Shape_width + widthx, R( l.height ) )\n				Shape_width = Shape_width + widthx\n				i = i + 1\n			end\n			Shapes[ 1 ] = Shape .. format( \"l %s 0 l 0 0 l 0 %s \", shape.width( Shape ), l.height )\n			Shapes[ 2 ] = Shape .. format( \"l %s %s l 0 %s \", shape.width( Shape ), l.height, l.height )\n		else\n			Shapes = recall.shps\n		end\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local shape_1, shape_2 = randoms2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", 0, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Randoms_LO); table.insert(transla_fx, "Clip Randoms LO")
	Clip_Triangles_LI = table.duplicate(Trans_Box); table.inbox(Clip_Triangles_LI, "translation[fx]: Clip Triangles LI","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","triangles( )","triangles = function( )\n	local function triangles2( )\n		local Shape, Shapes = \"m \", { }\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. format( \"%s %s l \", i * l.height, l.height * math.i( i )[ \"1,0\" ] )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"%s 0 l 0 0 l 0 %s \", (i - 1) * l.height, l.height )\n		Shapes[ 2 ] = Shape .. format( \"%s %s l 0 %s \", (i - 1) * l.height, l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local shape_1, shape_2 = triangles2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Triangles_LI); table.insert(transla_fx, "Clip Triangles LI")
	Clip_Triangles_LI_and_LO = table.duplicate(Trans_Box); table.inbox(Clip_Triangles_LI_and_LO, "translation[fx]: Clip Triangles LI and LO","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","triangles( )","triangles = function( )\n	local function triangles2( )\n		local Shape, Shapes = \"m \", { }\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. format( \"%s %s l \", i * l.height, l.height * math.i( i )[ \"1,0\" ] )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"%s 0 l 0 0 l 0 %s \", (i - 1) * l.height, l.height )\n		Shapes[ 2 ] = Shape .. format( \"%s %s l 0 %s \", (i - 1) * l.height, l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	local shape_1, shape_2 = triangles2( )\n	replay( 3 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * (1 - module) )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	elseif J == 2 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", delay, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Triangles_LI_and_LO); table.insert(transla_fx, "Clip Triangles LI and LO")
	Clip_Triangles_LO = table.duplicate(Trans_Box); table.inbox(Clip_Triangles_LO, "translation[fx]: Clip Triangles LO","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","triangles( )","triangles = function( )\n	local function triangles2( )\n		local Shape, Shapes = \"m \", { }\n		local Shape_width = 0\n		local i = 0\n		while Shape_width < l.width + l.height do\n			Shape = Shape .. format( \"%s %s l \", i * l.height, l.height * math.i( i )[ \"1,0\" ] )\n			Shape_width = Shape_width + l.height\n			i = i + 1\n		end\n		Shapes[ 1 ] = Shape .. format( \"%s 0 l 0 0 l 0 %s \", (i - 1) * l.height, l.height )\n		Shapes[ 2 ] = Shape .. format( \"%s %s l 0 %s \", (i - 1) * l.height, l.height, l.height )\n		return Shapes[ 1 ], Shapes[ 2 ]\n	end\n	local delay = 8 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( 8 )\n		retime( \"postline\", - delay + delay * (j - 1) / maxj, - delay + delay * j / maxj )\n		local shape_1, shape_2 = triangles2( )\n		local Shape = shape_1 .. shape.displace( shape_2, 0, 1.2 * l.height * module )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shape, l.center, l.middle ) )\n	end\n	retime( \"line\", 0, -delay )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Triangles_LO); table.insert(transla_fx, "Clip Triangles LO")
	Clip_Circles_LI = table.duplicate(Trans_Box); table.inbox(Clip_Circles_LI, "translation[fx]: Clip Circles LI","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","circles( )","circles = function( )\n	local coor_x, coor_y, radius, Shapes\n	local max_loop = 8\n	if j == 1 then\n		coor_x = remember( \"coorx\", { [ 0 ] = 0 } )\n		coor_y = remember( \"coory\", { } )\n		radius = remember( \"Radius\", { } )\n		Shapes = remember( \"Shps\", { } )\n		local i, k = 0, 1\n		while coor_x[ i ] < l.width + l.height do\n			coor_x[ i + 1 ] = coor_x[ i ] + R( 0.6 * l.height, 1.0 * l.height )\n			i = i + 1\n		end\n		for i, v in pairs( coor_x ) do\n			coor_y[ i ] = Rs( 0, 0.4 * l.height )\n		end\n		while coor_x[ k ] do\n			radius[ k ] = math.distance( coor_x[ k - 1 ], coor_y[ k - 1 ], coor_x[ k ], coor_y[ k ] )\n			k = k + 1\n		end\n		for i = 1, max_loop do\n			Shapes[ i ] = \"\"\n			for k = 1, #radius do\n				Shapes[ i ] = Shapes[ i ] .. shape.centerpos(\n					shape.size( shape.circle, 8 + (2 * radius[ k ] - 8) * (i - 1) / (max_loop - 1) ),\n					coor_x[ k - 1 ], coor_y[ k - 1 ]\n				)\n			end\n		end\n	else\n		coor_x = recall.coorx\n		coor_y = recall.coory\n		radius = recall.Radius\n		Shapes = recall.Shps\n	end\n	local delay = max_loop * 2 * frame_dur\n	replay( 2 )\n	if J == 1 then\n		maxloop( max_loop )\n		retime( \"preline\", delay * (j - 1) / maxj, delay * j / maxj )\n		return format( \"\\\\clip(%s)\", shape.centerpos( Shapes[ j ], l.center, l.middle ) )\n	end\n	retime( \"line\", delay, 0 )\n	return \"\"\nend","Lua",false); table.insert(transla_fx_library, Clip_Circles_LI); table.insert(transla_fx, "Clip Circles LI")
	Crazy_Dancing_Char = table.duplicate(Trans_Box); table.inbox(Crazy_Dancing_Char, "translation[fx]: Crazy Dancing Char","Translation Char",true,false,"#CE04D9","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 5*ratio, 5*ratio, 0, fx.dur, 1, { 200 } ), \"\\\\fad(200,200)\"","","Lua"); table.insert(transla_fx_library, Crazy_Dancing_Char); table.insert(transla_fx, "Crazy Dancing Char")
	Curve_3_Lines = table.duplicate(Trans_Box); table.inbox(Curve_3_Lines, "translation[fx]: Curve 3 Lines","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.bottom","","","2","maxj - j + 1","fx.pos_x + 2*Dxy*(j - 1) - 4*Dxy*(j - 1)*module1, fx.pos_x","fx.pos_y - Dxy*sin( pi*module1 ) - Dxy*(j - 1), fx.pos_y","2*frame_dur, 300","3","","char.text","format( \"\\\\fscy%s\\\\t(0,300,\\\\fscy%s)\\\\fad(60,200)\", 10 - 4*(j - 1) + (90 - 35*(j - 1))*sin( pi*module1 ), l.scale_y ), tag.only( j ~= 1, \"\\\\t(300,301,\\\\alpha&HFF&)\" )","Dxy = 50*ratio","Lua"); table.insert(transla_fx_library, Curve_3_Lines); table.insert(transla_fx, "Curve 3 Lines")
	Curve_Line_I = table.duplicate(Trans_Box); table.inbox(Curve_Line_I, "translation[fx]: Curve Line I","Translation Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","text.bezier( mi_shape, 1 ), \"\\\\fad(200,200)\"","mi_shape = shape.displace( \"m 0 0 b 100 -42 220 42 320 0 b 420 -42 540 42 640 0 b 740 -42 860 42 960 0 b 1060 -42 1180 42 1280 0 \", 0, l.middle )","Lua"); table.insert(transla_fx_library, Curve_Line_I); table.insert(transla_fx, "Curve Line I")
	Displace_Char_preline_postline = table.duplicate(Trans_Box); table.inbox(Displace_Char_preline_postline, "translation[fx]: Displace Char preline postline","Translation Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Lmove2( { fx.pos_x + Dx*( 2*module1 - 1), fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x + Dx*( 2*module1 - 1), fx.pos_y }, { 0, 300, fx.dur - 300, fx.dur} ), format( \"\\\\fscx%s\\\\fscy%s\\\\t(0,300,1.5,\\\\fscx%s\\\\fscy%s)\\\\t(%s,%s,1.5,\\\\fscx%s\\\\fscy%s)\\\\fad(150,150)\", 0.4*l.scale_x, 0.4*l.scale_y, l.scale_x, l.scale_y, fx.dur - 300, fx.dur, 0.4*l.scale_x, 0.4*l.scale_y )","Dx = 200*ratio","Lua"); table.insert(transla_fx_library, Displace_Char_preline_postline); table.insert(transla_fx, "Displace Char preline postline")
	Distort_Clip_in_Line = table.duplicate(Trans_Box); table.inbox(Distort_Clip_in_Line, "translation[fx]: Distort Clip in Line","Translation Line",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - delay1 - delay2*j + 200","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x +Dx, fx.pos_x","fx.pos_y","0, delay1","4","","line.text_stripped","format( \"%s\\\\t(0,%s,0.7,\\\\frx-360)\\\\fad(200,200)\", tag.clip( fx.pos_l, fx.pos_t, xres, line.height ), delay1 )","delay1 = 400;\ndelay2 = 100;\nDx = 220*ratio","Lua"); table.insert(transla_fx_library, Distort_Clip_in_Line); table.insert(transla_fx, "Distort Clip in Line")
	Double_Screw_Multicolor_Border = table.duplicate(Trans_Box); table.inbox(Double_Screw_Multicolor_Border, "translation[fx]: Double Screw Multicolor Border","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 )","l.end_time + time_lo( 30 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\frx180\\\\t(0,360,0.8,\\\\frx0)\\\\t(%s,%s,\\\\frx180)\\\\bord0.8\\\\blur6\\\\3c%s\\\\fad(200,200)\", fx.dur - 360, fx.dur, random.color( module1*220 ) )","","Lua"); table.insert(transla_fx_library, Double_Screw_Multicolor_Border); table.insert(transla_fx, "Double Screw Multicolor Border")
	Double_Screw_template_line_char_I = table.duplicate(Trans_Box); table.inbox(Double_Screw_template_line_char_I, "translation[fx]: Double Screw template line char I","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\frx180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\frx0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\frx-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220;\ndelay_char = 20;\ndelay_fad = 160","Automation Auto-4",false); table.insert(transla_fx_library, Double_Screw_template_line_char_I); table.insert(transla_fx, "Double Screw template line char I")
	Double_Screw_template_line_char_II = table.duplicate(Trans_Box); table.inbox(Double_Screw_template_line_char_II, "translation[fx]: Double Screw template line char II","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\fry180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\fry0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\fry-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220;\ndelay_char = 20;\ndelay_fad = 160","Automation Auto-4",false); table.insert(transla_fx_library, Double_Screw_template_line_char_II); table.insert(transla_fx, "Double Screw template line char II")
	Double_Screw_template_line_char_III = table.duplicate(Trans_Box); table.inbox(Double_Screw_template_line_char_III, "translation[fx]: Double Screw template line char III","Template Line [Char]",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time - delay_line - delay_fad","l.end_time + delay_line + delay_fad","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","!text.alpha0!\\fr180\\t(!delay_char*($i - 1)!,!delay_char*$i + delay_fad - delay_char!,!text.alpha!)\\t(!delay_char*($i - 1)!,!delay_char*$i + 2*delay_fad - delay_char!,\\fr0)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - 2*delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,\\fr-180)\\t(!fx.dur - delay_char*$n + delay_char*($i - 1) - delay_fad + delay_char!,!fx.dur - delay_char*$n + delay_char*$i!,!text.alpha0!)","delay_line = 220;\ndelay_char = 20;\ndelay_fad = 160","Automation Auto-4",false); table.insert(transla_fx_library, Double_Screw_template_line_char_III); table.insert(transla_fx, "Double Screw template line char III")
	Emerge_Clip_Grip_I = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_I, "translation[fx]: Emerge Clip Grip I","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 20 ) - 200","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ), \"\\\\fad(200,200)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_I); table.insert(transla_fx, "Emerge Clip Grip I")
	Emerge_Clip_Grip_I_buttLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_I_buttLine, "translation[fx]: Emerge Clip Grip I buttLine","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 35 ) + 200","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ), \"\\\\fad(200,200)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_I_buttLine); table.insert(transla_fx, "Emerge Clip Grip I buttLine")
	Emerge_Clip_Grip_I_Inverse = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_I_Inverse, "translation[fx]: Emerge Clip Grip I Inverse","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 20*(char.i - 1)","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ), \"\\\\fad(200,200)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_I_Inverse); table.insert(transla_fx, "Emerge Clip Grip I Inverse")
	Emerge_Clip_Grip_I_midLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_I_midLine, "translation[fx]: Emerge Clip Grip I midLine","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 35 ) - 120","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ), \"\\\\fad(200,200)\"","dx = R( -30, 30 )*ratio;\ndy = R( -30, 30 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_I_midLine); table.insert(transla_fx, "Emerge Clip Grip I midLine")
	Emerge_Clip_Grip_II = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_II, "translation[fx]: Emerge Clip Grip II","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 30 ) - R( 30, 50 )*10","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,260)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, char.width, char.height ), tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_II); table.insert(transla_fx, "Emerge Clip Grip II")
	Emerge_Clip_Grip_II_buttLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_II_buttLine, "translation[fx]: Emerge Clip Grip II buttLine","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 35 ) + 420 - R( 30, 50 )*10","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,220)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, char.width, char.height ), tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_II_buttLine); table.insert(transla_fx, "Emerge Clip Grip II buttLine")
	Emerge_Clip_Grip_II_Inverse = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_II_Inverse, "translation[fx]: Emerge Clip Grip II Inverse","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 20*(char.i - 1) - R( 30, 50 )*10 + 200","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,220)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, char.width, char.height ), tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_II_Inverse); table.insert(transla_fx, "Emerge Clip Grip II Inverse")
	Emerge_Clip_Grip_II_midLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_II_midLine, "translation[fx]: Emerge Clip Grip II midLine","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 35 ) - R( 30, 50 )*10","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","5, loop_h","","char.text","format( \"%s\\\\t(0,450,%s)\\\\fad(120,220)\", tag.clip( fx.pos_l + var.loop.dx, fx.pos_t + var.loop.dy, char.width, char.height ), tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ) )","dx = R( -50, 50 )*ratio;\ndy = R( -50, 50 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_II_midLine); table.insert(transla_fx, "Emerge Clip Grip II midLine")
	Emerge_Clip_Grip_III = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Grip_III, "translation[fx]: Emerge Clip Grip III","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 30 ) - R( var.loop.d1 - var.loop.d2 )","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","5, loop_h","","char.text","tag.clip( fx.pos_l, fx.pos_t, char.width, char.height ), \"\\\\fad(200,220)\"","d1 = 1000;\nd2 = 300","Lua"); table.insert(transla_fx_library, Emerge_Clip_Grip_III); table.insert(transla_fx, "Emerge Clip Grip III")
	Emerge_CLip_Horizontal = table.duplicate(Trans_Box); table.inbox(Emerge_CLip_Horizontal, "translation[fx]: Emerge CLip Horizontal","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 50 ) - 200","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R(-50, 50)*ratio;\ndy = R(-40, 40)*ratio","Lua"); table.insert(transla_fx_library, Emerge_CLip_Horizontal); table.insert(transla_fx, "Emerge CLip Horizontal")
	Emergr_Clip_Horizontal_buttLine = table.duplicate(Trans_Box); table.inbox(Emergr_Clip_Horizontal_buttLine, "translation[fx]: Emergr Clip Horizontal buttLine","Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 ) + 120","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emergr_Clip_Horizontal_buttLine); table.insert(transla_fx, "Emergr Clip Horizontal buttLine")
	Emerge_Clip_Horizontal_Inverse = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Horizontal_Inverse, "translation[fx]: Emerge Clip Horizontal Inverse","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(word.i - 1) - 300","l.end_time - 200","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Horizontal_Inverse); table.insert(transla_fx, "Emerge Clip Horizontal Inverse")
	Emerge_Clip_Horizontal_midLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Horizontal_midLine, "translation[fx]: Emerge Clip Horizontal midLine","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 60 ) - 120","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","8","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Horizontal_midLine); table.insert(transla_fx, "Emerge Clip Horizontal midLine")
	Emerge_Clip_Vertical = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Vertical, "translation[fx]: Emerge Clip Vertical","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 60 ) - 200","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( word.width/10 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Vertical); table.insert(transla_fx, "Emerge Clip Vertical")
	Emerge_Clip_Vertical_buttLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Vertical_buttLine, "translation[fx]: Emerge Clip Vertical buttLine","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid2( 70 )","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( word.width/10 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Vertical_buttLine); table.insert(transla_fx, "Emerge Clip Vertical buttLine")
	Emerge_Clip_Vertical_Inverse = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Vertical_Inverse, "translation[fx]: Emerge Clip Vertical Inverse","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 50*(word.i - 1) - 200","l.end_time - 200","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( word.width/10 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Vertical_Inverse); table.insert(transla_fx, "Emerge Clip Vertical Inverse")
	Emerge_Clip_Vertical_midLine = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Vertical_midLine, "translation[fx]: Emerge Clip Vertical midLine","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_mid1( 60 ) - 220","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + var.loop.dx, fx.pos_x","fx.pos_y + var.loop.dy, fx.pos_y","0, 450","1, ceil( word.width/10 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(200,220)\"","dx = R( -50, 50 )*ratio;\ndy = R( -40, 40 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Vertical_midLine); table.insert(transla_fx, "Emerge Clip Vertical midLine")
	Emerge_Clip_Sequence_HV = table.duplicate(Trans_Box); table.inbox(Emerge_Clip_Sequence_HV, "translation[fx]: Emerge Clip Sequence HV","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 50 ) - 300","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + ((word.i%2 == 0) and var.loop.dx or 0), fx.pos_x","fx.pos_y + ((word.i%2 == 1) and var.loop.dy or 0), fx.pos_y","0, 450","(word.i%2 == 0) and 8 or 1, (word.i%2 == 1) and 8 or 1","","word.text","tag.clip( fx.pos_l - 20, fx.pos_t - 20, word.width + 40, word.height + 40 ), \"\\\\fad(200,220)\"","dx = R( -80, 80 )*ratio;\ndy = R( -80, 80 )*ratio","Lua"); table.insert(transla_fx_library, Emerge_Clip_Sequence_HV); table.insert(transla_fx, "Emerge Clip Sequence HV")
	Flashing_Intro_Aux = table.duplicate(Trans_Box); table.inbox(Flashing_Intro_Aux, "translation[fx]: Flashing Intro Aux","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay","l.start_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","15","","line.text_stripped","format( \"\\\\bord0\\\\blur3\\\\org(%s,%s)\\\\fr%s\\\\1a&HDD&\\\\3a&HEE&\\\\4a&HEE&s\\\\t(0,%s,0.8,\\\\fr0\\\\blur0%s)\", fx.pos_x - 10000*ratio, fx.pos_y, Angle*(2*module - 1), delay, tag.only( (j == maxj/2), format( \"\\\\1a%s\\\\3a%s\\\\4a%s\", text.alpha1, text.alpha3, text.alpha4 ) ) )","delay = 400;\nAngle = 0.2*ratio","Lua"); table.insert(transla_fx_library, Flashing_Intro_Aux); table.insert(transla_fx, "Flashing Intro Aux")
	Function_math_i_Mode_21_LI_and_LO = table.duplicate(Trans_Box); table.inbox(Function_math_i_Mode_21_LI_and_LO, "translation[fx]: Function math i Mode 21 LI and LO","Translation Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time + delay","l.end_time + delay","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\fad(120,120)\"","delay = 60 * math.i( char.i, 0, 6 )[ \"A-->B-->A\" ] - 80;\nhint = \"math.i( char.i, 0, 6 )[ 'A-->B-->A' ] = 0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 5, 4, ...; A = 0, B = 6\"","Lua",false); table.insert(transla_fx_library, Function_math_i_Mode_21_LI_and_LO); table.insert(transla_fx, "Function math i Mode 21 LI and LO")
	Ghost_Line_line_Aux = table.duplicate(Trans_Box); table.inbox(Ghost_Line_line_Aux, "translation[fx]: Ghost Line line Aux","Translation Line",true,false,"#6E6E6E","#ADC4D6","#6A8DD6","0","0","0","l.start_time + R( line.dur - 600 )","fx.start_time + 600","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","(line.dur - 600)/920","","line.text_stripped","shape.Rmove( 15*ratio, 15*ratio ), format( \"\\\\bord0\\\\shad0\\\\blur0.4\\\\t(\\\\blur4)\\\\1c%s\", color1 )","color1 = shape.color1","Lua"); table.insert(transla_fx_library, Ghost_Line_line_Aux); table.insert(transla_fx, "Ghost Line line Aux")
	Ghost_Line_Multicolor = table.duplicate(Trans_Box); table.inbox(Ghost_Line_Multicolor, "translation[fx]: Ghost Line Multicolor","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + R( line.dur - 120 )","fx.start_time + 360","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","line.dur/320","","line.text_stripped","shape.Rmove( 20*ratio, 16*ratio, 0, fx.dur, 0.75 ), \"\\\\3c\" .. random.color( ),\"\\\\alpha&H86&\\\\blur3\\\\fad(0,120)\"","","Lua"); table.insert(transla_fx_library, Ghost_Line_Multicolor); table.insert(transla_fx, "Ghost Line Multicolor")
	Ghost_Shake_Simple = table.duplicate(Trans_Box); table.inbox(Ghost_Shake_Simple, "translation[fx]: Ghost Shake Simple","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + time_li( 25 ) - delay","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","shape.Rmove( 20*ratio, 20*ratio, 0, delay, 1, { 200 } ), \"\\\\fad(800,200)\"","delay = 300","Lua"); table.insert(transla_fx_library, Ghost_Shake_Simple); table.insert(transla_fx, "Ghost Shake Simple")
	Gradient_H_vsfilter = table.duplicate(Trans_Box); table.inbox(Gradient_H_vsfilter, "translation[fx]: Gradient H vsfilter","Translation Line",true,false,"#FF0030","#FFF000","#23DF02","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","gradienth( shape.color1, shape.color3, shape.color4 )","","gradienth = function( ... )\n	local HC = 2\n	local colors, Shape = { }, \"\"\n	if type( ... ) == \"table\" then\n		colors = ...\n	else\n		colors = { ... }\n	end\n	if #colors < 2 then\n		table.insert( colors, shape.color1 )\n		table.insert( colors, shape.color3 )\n	end\n	local n, cn, gradv = #colors - 1, ceil( val_width/HC ), { }\n	for i = 1, cn do\n		N = ceil( i/((cn + 1)/n) )\n		gradv[i] = color.interpolate( colors[N], colors[N + 1], (i - (N - 1)*(cn + 1)/n - 1)/((cn + 1)/n) )\n	end\n	for i = 1, cn do\n		Shape = Shape .. format( \"{\\\\1c%s\\\\p1}%s\", gradv[i], shape.size( shape.rectangle, HC, val_height ) )\n	end\n	return format( \"{%s\\\\bord0\\\\shad0}%s\", text.to_clip( ), Shape )\nend","Lua"); table.insert(transla_fx_library, Gradient_H_vsfilter); table.insert(transla_fx, "Gradient H vsfilter")
	Gradient_V_vsfilter = table.duplicate(Trans_Box); table.inbox(Gradient_V_vsfilter, "translation[fx]: Gradient V vsfilter","Translation Line",true,false,"#F6F3F3","#FF000C","#FFDE00","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","gradientv( shape.color1, shape.color1, shape.color3, shape.color4 )","","gradientv = function( ... )\n	local HC = 2\n	local colors, Shape = { }, \"\"\n	if type( ... ) == \"table\" then\n		colors = ...\n	else\n		colors = { ... }\n	end\n	if #colors < 2 then\n		table.insert( colors, shape.color1 )\n		table.insert( colors, shape.color3 )\n	end\n	local n, cn, gradv = #colors - 1, ceil( (l.height - l.descent)/HC ), { }\n	for i = 1, cn do\n		N = ceil( i/((cn + 1)/n) )\n		gradv[i] = color.interpolate( colors[N], colors[N + 1], (i - (N - 1)*(cn + 1)/n - 1)/((cn + 1)/n) )\n	end\n	for i = 1, cn do\n		Shape = Shape .. format( \"{\\\\1c%s\\\\p1}%s{\\\\p0}\\\\N\", gradv[i], shape.size( shape.rectangle, 1.2*val_width, HC ) )\n	end\n	return format( \"{%s\\\\bord0\\\\shad0}%s\", text.to_clip( ), Shape )\nend","Lua"); table.insert(transla_fx_library, Gradient_V_vsfilter); table.insert(transla_fx, "Gradient V vsfilter")
	Keane_Again_and_Again = table.duplicate(Trans_Box); table.inbox(Keane_Again_and_Again, "translation[fx]: Keane Again and Again","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr40)\\\\t(160,420,0.8,\\\\fr0)\\\\t(%s,%s,0.8,\\\\fr40)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(200,200)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, fx.dur - 260, fx.dur )","","Lua"); table.insert(transla_fx_library, Keane_Again_and_Again); table.insert(transla_fx, "Keane Again and Again")
	Keane_Better_Than_This = table.duplicate(Trans_Box); table.inbox(Keane_Better_Than_This, "translation[fx]: Keane Better Than This","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr-40)\\\\t(160,420,0.8,\\\\fr0)\\\\t(%s,%s,0.8,\\\\fr-40)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(200,200)\", fx.move_l1, fx.move_b1 - l.descent, fx.dur - 420, fx.dur - 260, fx.dur - 260, fx.dur )","","Lua"); table.insert(transla_fx_library, Keane_Better_Than_This); table.insert(transla_fx, "Keane Better Than This")
	Keane_Black_Burning_Heart = table.duplicate(Trans_Box); table.inbox(Keane_Black_Burning_Heart, "translation[fx]: Keane Black Burning Heart","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fr%s)\\\\t(160,420,0.8,\\\\fr0)\\\\t(%s,%s,0.8,\\\\fr%s)\\\\t(%s,%s,0.8,\\\\fr0)\\\\fad(200,200)\", fx.move_l1, fx.move_b1 - l.descent, 40*(-1)^(char.i + ii), fx.dur - 420, fx.dur - 260, 40*(-1)^(char.i + ii), fx.dur - 260, fx.dur )","","Lua"); table.insert(transla_fx_library, Keane_Black_Burning_Heart); table.insert(transla_fx, "Keane Black Burning Heart")
	Keane_Loves_Is_The_End = table.duplicate(Trans_Box); table.inbox(Keane_Loves_Is_The_End, "translation[fx]: Keane Loves Is The End","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fscx%s\\\\fscy%s\\\\fr%s\\\\frx80)\\\\t(160,420,0.8,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\frx0)\\\\t(%s,%s,0.8,\\\\fscx%s\\\\fscy%s\\\\fr%s\\\\frx80)\\\\t(%s,%s,0.8,\\\\fscx%s\\\\fscy%s\\\\fr0\\\\frx0)\\\\fad(200,200)\", fx.move_l1 + tag.only( (char.i + ii)%2 == 1, char.width ), fx.move_b1 - l.descent, 1.25*l.scale_x, 1.25*l.scale_y, 40*(-1)^(char.i + ii), l.scale_x, l.scale_y, fx.dur - 420, fx.dur - 260, 1.25*l.scale_x, 1.25*l.scale_y, 40*(-1)^(char.i + ii), fx.dur - 260, fx.dur, l.scale_x, l.scale_y )","","Lua"); table.insert(transla_fx_library, Keane_Loves_Is_The_End); table.insert(transla_fx, "Keane Loves Is The End")
	Keane_Lovers_Are_Losing = table.duplicate(Trans_Box); table.inbox(Keane_Lovers_Are_Losing, "translation[fx]: Keane Lovers Are Losing","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\t(0,160,0.8,\\\\fscy%s\\\\fr%s\\\\fry40\\\\frx80)\\\\t(160,420,0.8,\\\\fscy%s\\\\fr0\\\\fry0\\\\frx0)\\\\t(%s,%s,0.8,\\\\fscy%s\\\\fr%s\\\\fry40\\\\frx80)\\\\t(%s,%s,0.8,\\\\fscy%s\\\\fr0\\\\fry0\\\\frx0)\\\\fad(200,200)\", fx.move_l1 + tag.only( (char.i + ii)%2 == 1, char.width ), fx.move_b1 - l.descent - tag.only( ceil( (char.i + ii)/2 )%2 == 1, char.height - 2*l.descent ), 1.6*l.scale_y, 40*(-1)^(char.i + ii), l.scale_y, fx.dur - 420, fx.dur - 260, 1.6*l.scale_y, 40*(-1)^(char.i + ii), fx.dur - 260, fx.dur, l.scale_y )","","Lua"); table.insert(transla_fx_library, Keane_Lovers_Are_Losing); table.insert(transla_fx, "Keane Lovers Are Losing")
	Keane_Perfect_Symmetry = table.duplicate(Trans_Box); table.inbox(Keane_Perfect_Symmetry, "translation[fx]: Keane Perfect Symmetry","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","char.text","tag.only( j == 1, format( \"\\\\an6\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(200,200)\", fx.move_r1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ), format( \"\\\\an4\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(200,200)\", fx.move_l1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80, l.scale_x ) )","","Lua"); table.insert(transla_fx_library, Keane_Perfect_Symmetry); table.insert(transla_fx, "Keane Perfect Symmetry")
	Keane_Playing_Along = table.duplicate(Trans_Box); table.inbox(Keane_Playing_Along, "translation[fx]: Keane Playing Along","Translation Char",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 30 ) - 100","l.end_time + time_lo( 30 ) + 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","2","","char.text","tag.only( j == 1, format( \"\\\\an4\\\\pos(%s,%s)\\\\fscx0\\\\t(80,420,0.8,\\\\fscx%s)\\\\t(%s,%s,0.8,\\\\fscx0)\\\\fad(200,200)\", fx.move_l1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80 ), format( \"\\\\an6\\\\pos(%s,%s)\\\\1c&H0000FF&\\\\fscx%s\\\\t(80,420,0.8,\\\\fscx0)\\\\t(%s,%s,0.8,\\\\fscx%s)\\\\fad(200,200)\", fx.move_r1, fx.move_y1, l.scale_x, fx.dur - 420, fx.dur - 80, l.scale_x ) )","","Lua"); table.insert(transla_fx_library, Keane_Playing_Along); table.insert(transla_fx, "Keane Playing Along")
	Mark_I = table.duplicate(Trans_Box); table.inbox(Mark_I, "translation[fx]: Mark I","Translation Line",true,false,"#000000","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y + tag.only( j == 1, 4*ratio )","","2","","tag.only( j == 1, shape.size( shape.rectangle, l.width + 16*ratio, l.height ), line.text_stripped )","tag.only( j == 1, \"\\\\1a&HFF&\\\\bord3\" )","","Lua"); table.insert(transla_fx_library, Mark_I); table.insert(transla_fx, "Mark I")
	Mark_II = table.duplicate(Trans_Box); table.inbox(Mark_II, "translation[fx]: Mark II","Translation Line",true,false,"#000000","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y + tag.only( j == 1, 4*ratio )","","2","","tag.only( j == 1, inBox( ), line.text_stripped )","tag.only( j == 1, \"\\\\1a&HFF&\\\\bord3\" )","inBox = function( )	\n	local h_, w_ = 0.94*l.height, l.width\n	Box = format('m %s 0 b %s 0 0 %s 0 %s b 0 %s %s %s %s %s l %s %s b %s %s %s %s %s %d b %s %s %s 0 %s 0',\n		0.5*h_, 0.22*h_, 0.22*h_, 0.5*h_, 0.78*h_, 0.22*h_, h_, 0.5*h_, h_,\n		0.5*h_ + w_, h_, 0.78*h_ + w_, h_, h_ + w_, 0.78*h_, h_ + w_, 0.5*h_, h_ + w_, 0.22*h_, 0.78*h_ + w_, 0.5*h_ + w_)\n	return shape.ASSDraw3( Box )\nend","Lua"); table.insert(transla_fx_library, Mark_II); table.insert(transla_fx, "Mark II")
	Mark_III = table.duplicate(Trans_Box); table.inbox(Mark_III, "translation[fx]: Mark III","Translation Line",true,false,"#000000","#FFFFFF","#000000","0","0","0","l.start_time","l.end_time","","","","","l.center","l.middle","","","5","0","fx.pos_x","fx.pos_y + tag.only( j == 1, 4*ratio )","","2","","tag.only( j == 1, mark_IS( ), line.text_stripped )","tag.only( j == 1, \"\\\\1a&HFF&\\\\bord3\" )","mark_IS = function( )\n	local H = l.height\n	local dx = H / 4\n	local W = l.width\n	local P = { dx, 0, 0, H/2, dx, H, 2*dx, H, dx, H/2, 2*dx, 0, 3*dx, 0, 2*dx, H/2, 3*dx, H, 4*dx, H,\n		3*dx, H/2, 4*dx, 0, 5*dx, 0, 4*dx, H/2, 5*dx, H, 7*dx + W, H, 8*dx + W, H/2, 7*dx + W, 0,\n		8*dx + W, 0, 9*dx + W, H/2, 8*dx + W, H, 9*dx + W, H, 10*dx + W, H/2, 9*dx + W, 0,\n		10*dx + W, 0, 11*dx + W, H/2, 10*dx + W, H, 11*dx + W, H, 12*dx + W, H/2, 11*dx + W, 0\n	}\n	local Shape_fx = format( \"m %s %s l %s %s l %s %s l %s %s l %s %s l %s %s m %s %s l %s %s l %s %s l %s %s l %s %s l %s %s m %s %s l %s %s l %s %s l %s %s l %s %s l %s %s m %s %s l %s %s l %s %s l %s %s l %s %s l %s %s m %s %s l %s %s l %s %s l %s %s l %s %s l %s %s \", unpack( P ) )\n	return Shape_fx\nend","Lua"); table.insert(transla_fx_library, Mark_III); table.insert(transla_fx, "Mark III")
	Mark_IV = table.duplicate(Trans_Box); table.inbox(Mark_IV, "translation[fx]: Mark IV","Translation Line",true,false,"#000000","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","l.center","l.middle","","","5","0","fx.pos_x + tag.only( j == 1, 28*ratio )","fx.pos_y + tag.only( j == 1, 3*ratio )","","2","","tag.only( j == 1, mark_IS2( ), line.text_stripped )","tag.only( j == 1, \"\\\\1a&HFF&\\\\bord3\" )","mark_IS2 = function( )\n	local H = l.height - 3*l.descent\n	local o1 = 15\n	local o2 = 5\n	local W = l.width + 4*o1 + 4*o2\n	local P = { 0, 0, 0, H + o1 + 2*o2, o1, H + 2*o1 + 2*o2, W, H + 2*o1 + 2*o2, W, H + o1 + o2, W - 15,\n		H + o1 + o2, W - 15, o1 + o2, W, o1 + o2, W, o1, W - o1, 0, 0, 0, W - 2*o1 - o2, H + o1 + o2,\n		W - 2*o1 - o2, o1 + o2, W - o1 - o2, o1 + o2, W - o1 - o2, H + o1 + o2, W - 3*o1 - 2*o2,\n		H + o1 + o2, W - 3*o1 - 2*o2, o1 + o2, W - 2*o1 - 2*o2, o1 + o2, W - 2*o1 - 2*o2, H + o1 + o2\n	}\n	local Shapefx = format( \"m %d %d l %d %d l %d %d l %d %d l %d %d l %d %d l %d %d l %d %d l %d %d l %d %d l %d %d m %d %d l %d %d l %d %d l %d %d m %d %d l %d %d l %d %d l %d %d \", unpack( P ) )\n	return Shapefx\nend","Lua"); table.insert(transla_fx_library, Mark_IV); table.insert(transla_fx, "Mark IV")
	Mark_V = table.duplicate(Trans_Box); table.inbox(Mark_V, "translation[fx]: Mark V","Translation Line",true,false,"#FFFFFF","#ADC4D6","#A1BFF9","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y + tag.only( j ~= 3, 34*ratio )","","3","","mark_SAO( )[j]","tag.only( j ~= 3, \"\\\\bord0\\\\blur0.1\" ), tag.only( j == 2, \"\\\\1c&HF9BFA1&\" )","mark_SAO = function( )	\n	local shapex = { }\n	local wdth = 24 * ceil( math.round( l.width + 100 )/24 )\n	local shp1 = \"m 9 7 l 0 16 l 16 16 l 25 7 l 9 7 \"\n	local shp2 = format( \"m 51 0 l 44 7 l 32 7 l 24 16 l 41 16 l 54 2 l %s 2 l %s 0 \", wdth, wdth )\n	local shp3 = \"\"\n	local mark = format( \"m 0 0 l %s 0 m 0 16 l %s 16 \", wdth, wdth )\n	local n = ceil( l.width / 24 ) - 1\n	for i = 1, n do\n		shp3 = shp3 .. shape.displace( shp1, 24 + 24*i)\n	end\n	shapex[1] = mark .. shp1 .. shp2 .. shp3\n	local shp4 = shape.displace( \"m 9 7 l 0 16 l 15 16 l 15 7 l 9 7 \", wdth - 15 )\n	local shp5 = \"\"\n	for i = 1, 5 do\n		shp5 = shp5 .. shape.displace( \"m 9 7 l 0 16 l 6 16 l 15 7 l 9 7\", wdth - 27 - 12*(i - 1) )\n	end\n	shapex[2] = mark .. shp4 .. shp5\n	shapex[3] = line.text_stripped\n	return shapex\nend\n","Lua"); table.insert(transla_fx_library, Mark_V); table.insert(transla_fx, "Mark V")
	Mark_Iclip = table.duplicate(Trans_Box); table.inbox(Mark_Iclip, "translation[fx]: Mark Iclip","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y + 4*ratio","","1","","shape.size( shape.rectangle, l.width + 20*ratio, l.height - 0.5*l.descent)","text.to_clip( line.text_stripped, true, true ), \"\\\\bord0\"","","Lua"); table.insert(transla_fx_library, Mark_Iclip); table.insert(transla_fx, "Mark Iclip")
	Mark_Text_to_Shape = table.duplicate(Trans_Box); table.inbox(Mark_Text_to_Shape, "translation[fx]: Mark Text to Shape","Translation Line",true,false,"#79B3CA","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.size( shape.rectangle, l.width + offset_x, l.height ) .. shape.displace( text.to_shape( line.text_stripped ), offset_x/2 )","\"\\\\bord0\"","offset_x = 16*ratio","Lua"); table.insert(transla_fx_library, Mark_Text_to_Shape); table.insert(transla_fx, "Mark Text to Shape")
	Meave_Light_I = table.duplicate(Trans_Box); table.inbox(Meave_Light_I, "translation[fx]: Meave Light I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - factor( 15 )","l.end_time - factor( 15 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord%s\\\\blur3\\\\t(120,200,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\\\\fad(150,150)\", 2*l.outline, text.color1, text.color3, l.outline )","factor = function( delay )\n	local ind\n	if char.i <= (char.n + 1)/2 then\n		ind = delay*char.i\n	else\n		ind = delay*(char.n - char.i + 1)\n	end\n	return ind\nend","Lua"); table.insert(transla_fx_library, Meave_Light_I); table.insert(transla_fx, "Meave Light I")
	Meave_Light_II = table.duplicate(Trans_Box); table.inbox(Meave_Light_II, "translation[fx]: Meave Light II","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - factor( 15 )","l.end_time - factor( 15 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y, fx.pos_y + 50*ratio*(-1)^char.i","fx.dur - 150, fx.dur","1","","char.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord%s\\\\blur3\\\\t(120,200,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\\\\fad(150,150)\", 2*l.outline, text.color1, text.color3, l.outline )","factor = function( delay )\n	local ind\n	if char.i <= (char.n + 1)/2 then\n		ind = delay*char.i\n	else\n		ind = delay*(char.n - char.i + 1)\n	end\n	return ind\nend","Lua"); table.insert(transla_fx_library, Meave_Light_II); table.insert(transla_fx, "Meave Light II")
	Meave_Light_III = table.duplicate(Trans_Box); table.inbox(Meave_Light_III, "translation[fx]: Meave Light III","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - factor( 15 )","l.end_time - factor( 15 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y, fx.pos_y + 24*ratio*(-1)^char.i","fx.dur - 150, fx.dur","1","","char.text","format( \"\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\bord%s\\\\blur3\\\\t(120,200,\\\\1c%s\\\\3c%s\\\\bord%s\\\\blur0)\\\\t(%s,%s,\\\\frx100)\\\\fad(150,150)\", 2*l.outline, text.color1, text.color3, l.outline, fx.dur - 360, fx.dur )","factor = function( delay )\n	local ind\n	if char.i <= (char.n + 1)/2 then\n		ind = delay*char.i\n	else\n		ind = delay*(char.n - char.i + 1)\n	end\n	return ind\nend","Lua"); table.insert(transla_fx_library, Meave_Light_III); table.insert(transla_fx, "Meave Light III")
	Monenote_I_L = table.duplicate(Trans_Box); table.inbox(Monenote_I_L, "translation[fx]: Monenote I L","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x - tag.only( j > 1, l.width / 2 + 18r )","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, 5r, l.height ) )","tag.only( j == 1, shape.Lmove2( { fx.pos_x - l.width - 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x - l.width - 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( 0, l.top, l.left - 10r, l.bottom )\", \"\\\\blur2\\\\fryt(0.2 * fx.dur)\" )","","Lua",false); table.insert(transla_fx_library, Monenote_I_L); table.insert(transla_fx, "Monenote I L")
	Monenote_II_R = table.duplicate(Trans_Box); table.inbox(Monenote_II_R, "translation[fx]: Monenote II R","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x + tag.only( j > 1, l.width / 2 + 18r )","fx.pos_y","","2","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, 5r, l.height ) )","tag.only( j == 1, shape.Lmove2( { fx.pos_x + l.width + 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x + l.width + 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( l.right + 10r, l.top, xres, l.bottom )\", \"\\\\blur2\\\\fryt(0.2 * fx.dur)\" )","","Lua",false); table.insert(transla_fx_library, Monenote_II_R); table.insert(transla_fx, "Monenote II R")
	Monenote_III_LR = table.duplicate(Trans_Box); table.inbox(Monenote_III_LR, "translation[fx]: Monenote III LR","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x - tag.only( j > 1, l.width / 2 + 18r ) * (-1) ^ j","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, 5r, l.height ) )","tag.only( j == 1, shape.Lmove2( { fx.pos_x - l.width - 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x + l.width + 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( 0, l.top, l.left - 10r, l.bottom )\\\\t(200,200,\\\\iclip( l.right + 10r, l.top, xres, l.bottom ))\", \"\\\\blur2\\\\fryt(0.2 * fx.dur)\" )","","Lua",false); table.insert(transla_fx_library, Monenote_III_LR); table.insert(transla_fx, "Monenote III LR")
	Monenote_IV_RL = table.duplicate(Trans_Box); table.inbox(Monenote_IV_RL, "translation[fx]: Monenote IV RL","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x - tag.only( j > 1, l.width / 2 + 18r ) * (-1) ^ j","fx.pos_y","","3","","tag.only( j == 1, line.text_stripped, shape.size( shape.rectangle, 5r, l.height ) )","tag.only( j == 1, shape.Lmove2( { fx.pos_x + l.width + 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x - l.width - 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( l.right + 10r, l.top, xres, l.bottom )\\\\t(200,200,\\\\iclip( 0, l.top, l.left - 10r, l.bottom ))\", \"\\\\blur2\\\\fryt(0.2 * fx.dur)\" )","","Lua",false); table.insert(transla_fx_library, Monenote_IV_RL); table.insert(transla_fx, "Monenote IV RL")
	Monenote_V_Center = table.duplicate(Trans_Box); table.inbox(Monenote_V_Center, "translation[fx]: Monenote V Center","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","3","","tag.only( j == 1, shape.size( shape.rectangle, 5r, l.height ), line.text_stripped )","tag.only( j > 1, moves[ j % 2 + 1 ], \"\\\\blur2\\\\fryt(0.2 * fx.dur)\" )","moves = {\n	[ 1 ] = shape.Lmove2( { fx.pos_x - l.width/2 - 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x - l.width/2 - 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( 0, l.top, l.center, l.bottom )\",\n	[ 2 ] = shape.Lmove2( { fx.pos_x + l.width/2 + 20r, fx.pos_y, fx.pos_x, fx.pos_y, fx.pos_x + l.width/2 + 20r, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ) .. \"\\\\iclip( l.center, l.top, xres, l.bottom )\",\n}","Lua",false); table.insert(transla_fx_library, Monenote_V_Center); table.insert(transla_fx, "Monenote V Center")
	Move_Char_from_Center_Line = table.duplicate(Trans_Box); table.inbox(Move_Char_from_Center_Line, "translation[fx]: Move Char from Center Line","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 25 ) - 200","l.end_time - 200","","","","","char.center","char.middle","","","5","0","l.center, fx.pos_x","fx.pos_y","0, delay","1","","char.text","\"\\\\fad(200,200)\"","delay = 460","Lua"); table.insert(transla_fx_library, Move_Char_from_Center_Line); table.insert(transla_fx, "Move Char from Center Line")
	Move_Char_I = table.duplicate(Trans_Box); table.inbox(Move_Char_I, "translation[fx]: Move Char I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 )","l.end_time + time_lo( 30 )","","","","","char.center","char.middle","","","5","0","fx.pos_x + R( -25, 25 )*ratio, fx.pos_x","fx.pos_y + R( -25, 25 )*ratio, fx.pos_y","0, 360","1","","char.text","\"\\\\fad(200,200)\"","","Lua"); table.insert(transla_fx_library, Move_Char_I); table.insert(transla_fx, "Move Char I")
	Move_Char_II = table.duplicate(Trans_Box); table.inbox(Move_Char_II, "translation[fx]: Move Char II","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + R( -25, 25 )*ratio, fx.pos_x","fx.pos_y + R( -25, 25 )*ratio, fx.pos_y","0, 360","1","","char.text","\"\\\\fad(200,200)\"","","Lua"); table.insert(transla_fx_library, Move_Char_II); table.insert(transla_fx, "Move Char II")
	Move_Char_III_postline = table.duplicate(Trans_Box); table.inbox(Move_Char_III_postline, "translation[fx]: Move Char III postline","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x, fx.pos_x + R( -10, 10 )*ratio","fx.pos_y, fx.pos_y + R( 20, 30 )*ratio","fx.dur - 400, fx.dur","1","","char.text","format( \"\\\\t(%s,%s,\\\\frx%s\\\\fry%s\\\\frz%s)\\\\fad(300,300)\", fx.dur - 400, fx.dur, R( -360, 360 ), R( -360, 360 ), R( -360, 360 ) )","","Lua"); table.insert(transla_fx_library, Move_Char_III_postline); table.insert(transla_fx, "Move Char III postline")
	Move_Char_IV_preline = table.duplicate(Trans_Box); table.inbox(Move_Char_IV_preline, "translation[fx]: Move Char IV preline","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x + R( -10, 10 )*ratio, fx.pos_x","fx.pos_y - R( 20, 30 )*ratio, fx.pos_y","0, 400","1","","char.text","format( \"\\\\frx%s\\\\fry%s\\\\frz%s\\\\t(0,400,\\\\frx0\\\\fry0\\\\frz0)\\\\fad(300,300)\", R( -360, 360 ), R( -360, 360 ), R( -360, 360 ) )","","Lua"); table.insert(transla_fx_library, Move_Char_IV_preline); table.insert(transla_fx, "Move Char IV preline")
	Move_Clip_xyvsfilter_I = table.duplicate(Trans_Box); table.inbox(Move_Clip_xyvsfilter_I, "translation[fx]: Move Clip xyvsfilter I","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","replay( 2 ), tag.only( J == 1, format( \"\\\\iclip(%s)\", clipfx( ) ), format( \"\\\\clip(%s)\\\\3c&HD58313&\\\\bord6\\\\blur15\\\\fscy%s\", clipfx( ), 1.32*l.scale_y ) )","clipfx = function( )\n	maxloop( line.dur / (1*frame_dur ) )\n	retime( \"preline\", line.dur*( j - 1 )/maxj, line.dur*j/maxj )\n	return shape.displace( shape.circle, l.left + l.width*module, l.middle - 50 )\nend","Lua"); table.insert(transla_fx_library, Move_Clip_xyvsfilter_I); table.insert(transla_fx, "Move Clip xyvsfilter I")
	Move_Clip_xyvsfilter_II = table.duplicate(Trans_Box); table.inbox(Move_Clip_xyvsfilter_II, "translation[fx]: Move Clip xyvsfilter II","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x + tag.only( J == 2, Dx*( 1 - 2*module ) )","fx.pos_y","","1","","line.text_stripped","replay( 2 ), tag.only( J == 1, format( \"\\\\iclip(%s)\", clipfx( ) ), format( \"\\\\clip(%s)\\\\3c&HD58313&\\\\bord6\\\\blur15\\\\fscx%s\\\\fscy%s\\\\q2\", clipfx( ), Zoom*l.scale_x, Zoom*l.scale_y ) )","clipfx = function( )\n	maxloop( line.dur / frame_dur )\n	retime( \"preline\", line.dur*( j - 1 )/maxj, line.dur*j/maxj )\n	return shape.displace( shape.circle, l.left + l.width*module, l.middle - 50 )\nend;\nZoom = 1.32;\nDx = ( Zoom - 1 )*l.width/2","Lua"); table.insert(transla_fx_library, Move_Clip_xyvsfilter_II); table.insert(transla_fx, "Move Clip xyvsfilter II")
	Move_Clip_xyvsfilter_III = table.duplicate(Trans_Box); table.inbox(Move_Clip_xyvsfilter_III, "translation[fx]: Move Clip xyvsfilter III","Translation Line",true,false,"#FFFFFF","#61BCFF","#CB4DD2","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x + tag.only( J ~= 1, Dx*( 1 - 2*module ) )","fx.pos_y","","1","","line.text_stripped","replay( 3 ), tag.only( J == 1, format( \"\\\\iclip(%s)\", clipfx( ) ) ), tag.only( J == 2,format( \"\\\\clip(%s)\\\\3c%s\\\\bord9\\\\blur15\\\\fscx%s\\\\fscy%s\\\\q2\", clipfx( ), shape.color3, Zoom*l.scale_x, Zoom*l.scale_y ) ), tag.only( J == 3,format( \"\\\\clip(%s)\\\\3c%s\\\\bord4\\\\blur8\\\\fscx%s\\\\fscy%s\\\\q2\", clipfx( ), shape.color4, Zoom*l.scale_x, Zoom*l.scale_y ) )","clipfx = function( )\n	maxloop( line.dur / frame_dur )\n	retime( \"preline\", line.dur*( j - 1 )/maxj, line.dur*j/maxj )\n	return shape.displace( shape.circle, l.left + l.width*module, l.middle - 50 )\nend;\nZoom = 1.32;\nDx = ( Zoom - 1 )*l.width/2","Lua"); table.insert(transla_fx_library, Move_Clip_xyvsfilter_III); table.insert(transla_fx, "Move Clip xyvsfilter III")
	Move_Line_Center_Clip_I = table.duplicate(Trans_Box); table.inbox(Move_Line_Center_Clip_I, "translation[fx]: Move Line Center Clip I","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 200","l.end_time - 200","","","","","line.center","line.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^(j + 1), fx.pos_x","fx.pos_y","0, delay","1, 2","","line.text_stripped","tag.clip( l.left, l.top, l.width, l.height ), \"\\\\fad(0,200)\"","delay = 450","Lua"); table.insert(transla_fx_library, Move_Line_Center_Clip_I); table.insert(transla_fx, "Move Line Center Clip I")
	Move_Line_Center_Clip_II = table.duplicate(Trans_Box); table.inbox(Move_Line_Center_Clip_II, "translation[fx]: Move Line Center Clip II","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 200","l.end_time - 200","","","","","line.center","line.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^j, fx.pos_x","fx.pos_y","0, delay","1, 2","","line.text_stripped","tag.clip( l.left, l.top, l.width, l.height ), \"\\\\fad(0,200)\"","delay = 450","Lua"); table.insert(transla_fx_library, Move_Line_Center_Clip_II); table.insert(transla_fx, "Move Line Center Clip II")
	Move_Line_Center_Clip_Sequence = table.duplicate(Trans_Box); table.inbox(Move_Line_Center_Clip_Sequence, "translation[fx]: Move Line Center Clip Sequence","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 200","l.end_time - 200","","","","","line.center","line.middle","","","5","0","fx.pos_x + 0.5*l.width*(-1)^(j + line.i), fx.pos_x","fx.pos_y","0, delay","1, 2","","line.text_stripped","tag.clip( l.left, l.top, l.width, l.height ), \"\\\\fad(0,200)\"","delay = 450","Lua"); table.insert(transla_fx_library, Move_Line_Center_Clip_Sequence); table.insert(transla_fx, "Move Line Center Clip Sequence")
	Move_Line_I_Bottom = table.duplicate(Trans_Box); table.inbox(Move_Line_I_Bottom, "translation[fx]: Move Line I Bottom","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y + Dy, fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua"); table.insert(transla_fx_library, Move_Line_I_Bottom); table.insert(transla_fx, "Move Line I Bottom")
	Move_Line_II_Top = table.duplicate(Trans_Box); table.inbox(Move_Line_II_Top, "translation[fx]: Move Line II Top","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - Dy, fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua"); table.insert(transla_fx_library, Move_Line_II_Top); table.insert(transla_fx, "Move Line II Top")
	Move_Line_III_Left = table.duplicate(Trans_Box); table.inbox(Move_Line_III_Left, "translation[fx]: Move Line III Left","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x - Dx, fx.pos_x","fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua"); table.insert(transla_fx_library, Move_Line_III_Left); table.insert(transla_fx, "Move Line III Left")
	Move_Line_IV_Right = table.duplicate(Trans_Box); table.inbox(Move_Line_IV_Right, "translation[fx]: Move Line IV Right","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua"); table.insert(transla_fx_library, Move_Line_IV_Right); table.insert(transla_fx, "Move Line IV Right")
	Move_Line_V_Left_Right = table.duplicate(Trans_Box); table.inbox(Move_Line_V_Left_Right, "translation[fx]: Move Line V Left Right","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x + Dx*(-1)^line.i, fx.pos_x","fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDx = 300*ratio","Lua"); table.insert(transla_fx_library, Move_Line_V_Left_Right); table.insert(transla_fx, "Move Line V Left Right")
	Move_Line_VI_Bottom_Top = table.duplicate(Trans_Box); table.inbox(Move_Line_VI_Bottom_Top, "translation[fx]: Move Line VI Bottom Top","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - delay + 100","l.end_time - 100","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y - Dy*(-1)^line.i, fx.pos_y","0, delay","1","","line.text_stripped","format( \"\\\\shad0\\\\bord2\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\blur3\\\\t(%s,%s,\\\\shad%s\\\\bord%s\\\\1c%s\\\\3c%s\\\\blur0)\\\\fad(0,200)\", 3*delay/4, delay, l.shadow, l.outline, text.color1, text.color3 )","delay = 240;\nDy = l.height","Lua"); table.insert(transla_fx_library, Move_Line_VI_Bottom_Top); table.insert(transla_fx, "Move Line VI Bottom Top")
	Move_ShineLine_Left_Right = table.duplicate(Trans_Box); table.inbox(Move_ShineLine_Left_Right, "translation[fx]: Move ShineLine Left Right","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Lmove2( { -l.width/2, fx.pos_y, fx.pos_x, fx.pos_y, xres + l.width/2, fx.pos_y }, { 0, delay, fx.dur - delay, fx.dur } ), format( \"\\\\bord5\\\\blur4\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\t(%s,%s,\\\\bord%s\\\\blur0\\\\1c%s\\\\3c%s)\\\\t(%s,%s,\\\\bord5\\\\blur4\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&)\", delay, delay + 1, l.outline, text.color1, text.color3, fx.dur - delay, fx.dur - delay + 1 )","delay = 260","Lua"); table.insert(transla_fx_library, Move_ShineLine_Left_Right); table.insert(transla_fx, "Move ShineLine Left Right")
	Move_ShineLine_Right_Left = table.duplicate(Trans_Box); table.inbox(Move_ShineLine_Right_Left, "translation[fx]: Move ShineLine Right Left","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Lmove2( { xres + l.width/2, fx.pos_y, fx.pos_x, fx.pos_y, -l.width/2, fx.pos_y }, { 0, delay, fx.dur - delay, fx.dur } ), format( \"\\\\bord5\\\\blur4\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&\\\\t(%s,%s,\\\\bord%s\\\\blur0\\\\1c%s\\\\3c%s)\\\\t(%s,%s,\\\\bord5\\\\blur4\\\\1c&HFFFFFF&\\\\3c&HFFFFFF&)\", delay, delay + 1, l.outline, text.color1, text.color3, fx.dur - delay, fx.dur - delay + 1 )","delay = 260","Lua"); table.insert(transla_fx_library, Move_ShineLine_Right_Left); table.insert(transla_fx, "Move ShineLine Right Left")
	Move_the_Word_I = table.duplicate(Trans_Box); table.inbox(Move_the_Word_I, "translation[fx]: Move the Word I","Translation Word",true,false,"#90ADF1","#3F3C3C","#FFFFFF","0","0","0","l.start_time + time_li( 50 )","l.end_time + time_lo( 50 )","","","","","word.center","word.middle","","","5","1","fx.pos_x","fx.pos_y","","1","","word.text","wordfx( ), \"\\\\fad(200,200)\"","wordfx = function( Color )\n	local Color = Color or \"&HF1AD90&\"\n	if R( ceil( word.n/2 ) ) == 1 then\n		maxloop( 2 )\n		if j == 1 then\n			return format( \"%s\\\\bord0\\\\blur2.4\\\\1c%s\", shape.Rmove2( 15*ratio, 15*ratio ), Color )\n		end\n		return \"\"\n	end\n	return \"\"\nend","Lua"); table.insert(transla_fx_library, Move_the_Word_I); table.insert(transla_fx, "Move the Word I")
	Palpitations_Char = table.duplicate(Trans_Box); table.inbox(Palpitations_Char, "translation[fx]: Palpitations Char","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 30 ) - 200","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\fad(200,200)\\\\fscx0\\\\fscy0\\\\t(0,250,\\\\fscx%s\\\\fscy%s)\\\\t(250,350,\\\\fscx%s\\\\fscy%s)\\\\t(350,550,\\\\fscx%s\\\\fscy%s)\\\\t(550,650,\\\\fscx%s\\\\fscy%s)\\\\t(650,750,\\\\fscx%s\\\\fscy%s)\\\\t(750,850,\\\\fscx%s\\\\fscy%s)\", 1.8*l.scale_x, 1.8*l.scale_y, 0.8*l.scale_x, 0.8*l.scale_y, 1.2*l.scale_x, 1.2*l.scale_y, 1.5*l.scale_x, 1.5*l.scale_y, 1.2*l.scale_x, 1.2*l.scale_y, l.scale_x, l.scale_y )","","Lua"); table.insert(transla_fx_library, Palpitations_Char); table.insert(transla_fx, "Palpitations Char")
	Psycho_Translation_Deformed = table.duplicate(Trans_Box); table.inbox(Psycho_Translation_Deformed, "translation[fx]: Psycho Translation Deformed","Translation Line",true,false,"#FFFFFF","#3E4447","#000000","15","50","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Psycho( )","","Psycho = function( )\n	local Px1 = 60\n	local Px2 = 200\n	local trim = 4\n	local text_shape = { \n		[1] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px1*(1 + sin( 2*pi*Mx )) return x, y end );\n		[2] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px1*(sin( 2*pi*Mx ) - 1) return x, y end );\n		[3] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x + Px2*(1 + sin( 2*pi*Mx )) return x, y end );\n		[4] = shape.filter3( text.to_shape( ), trim,\n			function( x, y ) x = x - Px2*(sin( 2*pi*Mx ) - 1) return x, y end )\n	}\n	replay( 3 )\n	if J == 1 then\n		retime( \"preline\", -8*frame_dur, 0 )\n		return \"{\\\\bord0.5\\\\fad(160,0)}\" .. shape.animated2( 8*frame_dur, 2*frame_dur, text_shape )\n	elseif J == 2 then\n		retime( \"line\", 0, -8*frame_dur )\n		return line.text_stripped\n	end\n	retime( \"postline\", -8*frame_dur, 0 )\n	return \"{\\\\bord0.5\\\\fad(0,160)}\" .. shape.animated2( 8*frame_dur, 2*frame_dur, text_shape )\nend","Lua"); table.insert(transla_fx_library, Psycho_Translation_Deformed); table.insert(transla_fx, "Psycho Translation Deformed")
	Re_Hamatora_TL_I = table.duplicate(Trans_Box); table.inbox(Re_Hamatora_TL_I, "translation[fx]: Re Hamatora TL I","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 100","l.end_time - 100","","","","","line.center","line.middle","","","6 - j","0","fx.pos_x - Dx1 - (j == 2 and l.width/2 or 0), fx.pos_x - (j == 2 and l.width/2 or 0)","fx.pos_y","0, 200","2","","j == 1 and line.text_stripped or shape.rectangle","tag.only( j == 2, format( \"\\\\bord0\\\\shad0\\\\fscx%s\\\\fscy%s\\\\t(260,420,\\\\fscx0)\", l.width, l.height - l.descent/2 ) ), \"\\\\fad(0,200)\"","Dx1 = l.right;","Lua"); table.insert(transla_fx_library, Re_Hamatora_TL_I); table.insert(transla_fx, "Re Hamatora TL I")
	Re_Hamatora_TL_II = table.duplicate(Trans_Box); table.inbox(Re_Hamatora_TL_II, "translation[fx]: Re Hamatora TL II","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 100","l.end_time - 100","","","","","line.center","line.middle","","","4 + j","0","fx.pos_x + Dx1 + (j == 2 and l.width/2 or 0), fx.pos_x + (j == 2 and l.width/2 or 0)","fx.pos_y","0, 200","2","","j == 1 and line.text_stripped or shape.rectangle","tag.only( j == 2, format( \"\\\\bord0\\\\shad0\\\\fscx%s\\\\fscy%s\\\\t(260,420,\\\\fscx0)\", l.width, l.height - l.descent/2 ) ), \"\\\\fad(0,200)\"","Dx1 = xres - l.left;","Lua"); table.insert(transla_fx_library, Re_Hamatora_TL_II); table.insert(transla_fx, "Re Hamatora TL II")
	Re_Hamatora_TL_III = table.duplicate(Trans_Box); table.inbox(Re_Hamatora_TL_III, "translation[fx]: Re Hamatora TL III","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 100","l.end_time - 100","","","","","line.center","line.middle","","","line.i%2 == 1 and 6 - j or 4 + j","0","fx.pos_x + Dx1 + (j == 2 and l.width/2 or 0)*(-1)^line.i, fx.pos_x + (j == 2 and l.width/2 or 0)*(-1)^line.i","fx.pos_y","0, 200","2","","j == 1 and line.text_stripped or shape.rectangle","tag.only( j == 2, format( \"\\\\bord0\\\\shad0\\\\fscx%s\\\\fscy%s\\\\t(260,420,\\\\fscx0)\", l.width, l.height - l.descent/2 ) ), \"\\\\fad(0,200)\"","Dx1 = ( line.i%2 == 1 and -l.right or xres - l.left )","Lua"); table.insert(transla_fx_library, Re_Hamatora_TL_III); table.insert(transla_fx, "Re Hamatora TL III")
	Rmove_Char_retime_line = table.duplicate(Trans_Box); table.inbox(Rmove_Char_retime_line, "translation[fx]: Rmove Char retime line","Translation Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","retime( \"line\", -fad, fad ), shape.Rmove( var.line.mi_shape, nil, 0, fx.dur, 0.9, { 220 } ), format( \"\\\\alpha&HFF&\\\\t(%s,%s,%s)\\\\t(%s,%s,\\\\alpha&HFF&)\", (syl.i - 1)*delay, (syl.i - 1)*delay + fad, text.alpha, fx.dur - delay*(syl.n - syl.i) - fad, fx.dur - delay*(syl.n - syl.i) )","delay = 40;\nfad = 200;\nmi_shape = shape.Rtrajectory( 20, 4, 15 )","Lua"); table.insert(transla_fx_library, Rmove_Char_retime_line); table.insert(transla_fx, "Rmove Char retime line")
	Screw_Char = table.duplicate(Trans_Box); table.inbox(Screw_Char, "translation[fx]: Screw Char","Translation Char",true,false,"#DBF5FF","#415462","#000000","0","0","0","l.start_time + time_li( 30 ) + 100","l.end_time + time_lo( 30 ) - 100","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\frx-180\\\\t(0,400,0.8,\\\\frx0)\\\\t(%s,%s,0.8,\\\\frx180)\\\\fad(220,220)\", fx.dur - 400, fx.dur )",""); table.insert(transla_fx_library, Screw_Char); table.insert(transla_fx, "Screw Char")
	Shigatsu_leadin_and_leadout = table.duplicate(Trans_Box); table.inbox(Shigatsu_leadin_and_leadout, "translation[fx]: Shigatsu leadin and leadout","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","Shigatsu( 0.88, 400 )","Shigatsu = function( Offset, delay )\n	local Of = Offset or 1\n	local Dl = delay or 0\n	local Df = frame_dur\n	local Tgi = format( \"\\\\bord1\\\\move(%s,%s,%s,%s,0,%s)\",\n	unpack( math.round( { val_center, val_middle + 70*(-1)^val_i, val_center, val_middle + 8*(-1)^val_i, 10*Df }, 2 ) ) )\n	local Tsi, Tso = { }, { }\n	Tsi = {\n		[01] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry88\\\\fscy%s\\\\1c&H828282&\\\\3c&HB6B6B6&)\", 0, 1, 6.4*l.scale_y ),\n		[02] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry84\\\\fscy%s\\\\1c&HB0D6E2&\\\\3c&H848488&)\", Df, Df + 1, 5.9*l.scale_y ),\n		[03] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry82\\\\fscy%s\\\\1c&HC2D8E0&\\\\3c&H83838B&)\", 2*Df, 2*Df + 1, 5.2*l.scale_y ),\n		[04] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry87\\\\fscy%s\\\\1c&HBDBDBD&\\\\3c&H5E5E5E&)\", 3*Df, 3*Df + 1, 4.0*l.scale_y ),\n		[05] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry87\\\\fscy%s\\\\1c&H000000&\\\\3c&H3F3F3F&)\", 4*Df, 4*Df + 1, 3.0*l.scale_y ),\n		[06] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry67\\\\fscy%s\\\\3c&H626263&)\", 5*Df, 5*Df + 1, 1.8*l.scale_y ),\n		[07] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry55\\\\fscy%s\\\\3c&H626263&)\", 6*Df, 6*Df + 1, 1.5*l.scale_y ),\n		[08] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry42\\\\fscy%s\\\\1c%s\\\\3c%s)\", 7*Df, 7*Df + 1, 1.3*l.scale_y, text.color1, text.color3 ),\n		[09] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry22\\\\fscy%s)\", 8*Df, 8*Df + 1, 1.1*l.scale_y ),\n		[10] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry00\\\\fscy%s)\", 9*Df, 9*Df + 1, 1.0*l.scale_y )\n	}\n	local dur = linefx[ii].duration + 10*Df\n	local Tgo = format( \"\\\\bord1\\\\move(%s,%s,%s,%s,%s,%s)\\\\t(\\\\alpha&HEE&)\", \n	unpack( math.round( { val_center, val_middle - 8*(-1)^val_i, val_center, val_middle - 70*(-1)^val_i, dur - 10*Df, dur }, 2 ) ) )\n	Tso = {\n		[01] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry00\\\\fscy%s)\", 0*Df, 1*Df, 1.0*l.scale_y ),\n		[02] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry22\\\\fscy%s)\", 1*Df, 2*Df, 1.1*l.scale_y ),\n		[03] = format( \"\\\\t(%s,%s,\\\\blur3.0\\\\fry42\\\\fscy%s)\", 2*Df, 3*Df, 1.3*l.scale_y ),\n		[04] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry55\\\\fscy%s\\\\3c&H626263&)\", 3*Df, 4*Df, 1.5*l.scale_y ),\n		[05] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry67\\\\fscy%s\\\\3c&H626263&)\", 4*Df, 5*Df, 1.8*l.scale_y ),\n		[06] = format( \"\\\\t(%s,%s,\\\\blur1.2\\\\fry87\\\\fscy%s\\\\1c&H000000&\\\\3c&H3F3F3F&)\", 5*Df, 6*Df, 3.0*l.scale_y ),\n		[07] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry87\\\\fscy%s\\\\1c&HBDBDBD&\\\\3c&H5E5E5E&)\", 6*Df, 7*Df, 4.0*l.scale_y ),\n		[08] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry82\\\\fscy%s\\\\1c&HC2D8E0&\\\\3c&H83838B&)\", 7*Df, 8*Df, 5.2*l.scale_y ),\n		[09] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry84\\\\fscy%s\\\\1c&HB0D6E2&\\\\3c&H848488&)\", 8*Df, 9*Df, 5.9*l.scale_y ),\n		[10] = format( \"\\\\t(%s,%s,\\\\blur2.0\\\\fry88\\\\fscy%s\\\\1c&H828282&\\\\3c&HB6B6B6&)\", 9*Df, 10*Df, 6.4*l.scale_y )\n	}\n	local tagfxi = Tgi .. table.op( Tsi, \"concat\" )\n	local tagfxo = Tgo .. table.op( Tso, \"concat\" )\n	maxloop( 4 )\n	if j == 1 then\n		retime( \"preline\", -20*Df + Dl, -10*Df + Dl )\n		return tagfxi\n	elseif j == 2 then\n		retime( \"preline\", -10*Df + Dl, line.dur/2 )\n		return format( \"\\\\blur3\\\\t(0,%s,\\\\bord%s)\\\\fry0\\\\fscy%s\\\\move(%s,%s,%s,%s,0,%s)\", \n		10*Df, l.outline, l.scale_y, val_center, val_middle + 8*(-1)^val_i, val_center, val_middle, 10*Df )\n	elseif j == 3 then\n		retime( \"line\", line.dur/2, 10*Df - Dl - 180 )\n		return format( \"\\\\blur3\\\\t(%s,%s,\\\\bord%s)\\\\fry0\\\\fscy%s\\\\move(%s,%s,%s,%s,%s,%s)\", \n		dur - 10*Df, dur, l.outline, l.scale_y, val_center, val_middle, val_center, val_middle - 8*(-1)^val_i, dur - 10*Df, dur )\n	elseif j == 4 then\n		retime( \"postline\", 10*Df - Dl - 180, 20*Df - Dl - 180 )\n		return tagfxo\n	end\nend","Lua"); table.insert(transla_fx_library, Shigatsu_leadin_and_leadout); table.insert(transla_fx, "Shigatsu leadin and leadout")
	Shine_Line_Perspective_preline = table.duplicate(Trans_Box); table.inbox(Shine_Line_Perspective_preline, "translation[fx]: Shine Line Perspective preline","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 320","l.start_time","","","","","line.center","line.middle","","","5","maxj - j + 1","fx.pos_x, fx.pos_x","fx.pos_y + height*(3 + 1.2*module), fx.pos_y","","10","l.scale_x*(0.8 - 0.05*module), l.scale_y","line.text_stripped","format( \"\\\\3c&HFFFFFF&\\\\blur%s\\\\alpha%s\\\\t(\\\\fscx%s)\\\\fad(60,0)%s\", 6*module, ass_alpha(240*module), l.scale_x, tag.only( j == 1, format( \"\\\\t(\\\\3c%s)\", text.color3 ) ) )","height = 17*ratio","Lua"); table.insert(transla_fx_library, Shine_Line_Perspective_preline); table.insert(transla_fx, "Shine Line Perspective preline")
	Snake_Char_I = table.duplicate(Trans_Box); table.inbox(Snake_Char_I, "translation[fx]: Snake Char I","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 240","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, 4*delay","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y - Dy, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y }, nil, 4*delay ), \"\\\\fad(200,220)\"","delay = 180;\nDx = 40*ratio;\nDy = 8*ratio","Lua"); table.insert(transla_fx_library, Snake_Char_I); table.insert(transla_fx, "Snake Char I")
	Snake_Char_II = table.duplicate(Trans_Box); table.inbox(Snake_Char_II, "translation[fx]: Snake Char II","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 240","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, 4*delay","1","","char.text","shape.Lmove2( { fx.pos_x, fx.pos_y, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y - Dy, fx.pos_x, fx.pos_y + Dy, fx.pos_x, fx.pos_y }, nil, 4*delay ), format( \"\\\\org(%s,%s)\\\\t(0,%s,0.8,\\\\frx360)\\\\fad(200,220)\", fx.move_x2, fx.move_y1, 4*delay )","delay = 180;\nDx = 40*ratio;\nDy = 24*ratio","Lua"); table.insert(transla_fx_library, Snake_Char_II); table.insert(transla_fx, "Snake Char II")
	SNSD_Oh = table.duplicate(Trans_Box); table.inbox(SNSD_Oh, "translation[fx]: SNSD Oh","Translation Char",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time + char.i*20 - 800","l.end_time - 100","","","","","char.center","char.middle","","","5","0","fx.pos_x + Dxy*(-1)^j, fx.pos_x","fx.pos_y - Dxy*(-1)^j, fx.pos_y","800, 1000","2","","char.text","format( \"\\\\org(%s,%s)\\\\alpha&HFF&\\\\frz180\\\\fscx%s\\\\fscy%s\\\\t(0,800,0.6,\\\\frz720\\\\fscx%s\\\\fscy%s\\\\3a&H00&)\\\\t(800,1000,\\\\alpha&H00&)\\\\fad(0,200)\", fx.pos_x, fx.pos_y, 0.6*l.scale_x, 0.6*l.scale_y, l.scale_x, l.scale_y ), tag.only( j == 1, \"\\\\t(1000,1001,\\\\alpha&HFF&)\" )","Dxy = 16*ratio","Lua"); table.insert(transla_fx_library, SNSD_Oh); table.insert(transla_fx, "SNSD Oh")
	Spectrum_Move_Char = table.duplicate(Trans_Box); table.inbox(Spectrum_Move_Char, "translation[fx]: Spectrum Move Char","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 40 ) - 100","l.end_time - 200","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","format( \"\\\\org(%s,%s)\\\\frx%s\\\\frz%s\\\\t(0,%s,0.7,\\\\frx0\\\\frz0)\\\\fad(200,220)\", fx.move_x1, fx.move_y1 - 20*ratio, 140 + 2*char.i, 40 + char.i, 580 + 8*char.i )","","Lua"); table.insert(transla_fx_library, Spectrum_Move_Char); table.insert(transla_fx, "Spectrum Move Char")
	Static_Clip_Ascend = table.duplicate(Trans_Box); table.inbox(Static_Clip_Ascend, "translation[fx]: Static Clip Ascend","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) + 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + word.height, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Ascend); table.insert(transla_fx, "Static Clip Ascend")
	Static_Clip_Descend = table.duplicate(Trans_Box); table.inbox(Static_Clip_Descend, "translation[fx]: Static Clip Descend","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y - word.height, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Descend); table.insert(transla_fx, "Static Clip Descend")
	Static_Clip_Left = table.duplicate(Trans_Box); table.inbox(Static_Clip_Left, "translation[fx]: Static Clip Left","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x - word.width, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Left); table.insert(transla_fx, "Static Clip Left")
	Static_Clip_Left_Right = table.duplicate(Trans_Box); table.inbox(Static_Clip_Left_Right, "translation[fx]: Static Clip Left Right","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x + word.width*(-1)^word.i, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Left_Right); table.insert(transla_fx, "Static Clip Left Right")
	Static_Clip_Right = table.duplicate(Trans_Box); table.inbox(Static_Clip_Right, "translation[fx]: Static Clip Right","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x + word.width, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Right); table.insert(transla_fx, "Static Clip Right")
	Static_Clip_Top_Bottom = table.duplicate(Trans_Box); table.inbox(Static_Clip_Top_Bottom, "translation[fx]: Static Clip Top Bottom","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + word.height*(-1)^word.i, fx.pos_y","0, 400","1","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Top_Bottom); table.insert(transla_fx, "Static Clip Top Bottom")
	Static_Clip_Horizontal_Multi_I = table.duplicate(Trans_Box); table.inbox(Static_Clip_Horizontal_Multi_I, "translation[fx]: Static Clip Horizontal Multi I","Translation Word",true,false,"#FFFFFF","#0B2442","#000000","25","25","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x + word.width*(-1)^j, fx.pos_x","fx.pos_y, fx.pos_y","0, 460","5","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Horizontal_Multi_I); table.insert(transla_fx, "Static Clip Horizontal Multi I")
	Static_Clip_Horizontal_Multi_II = table.duplicate(Trans_Box); table.inbox(Static_Clip_Horizontal_Multi_II, "translation[fx]: Static Clip Horizontal Multi II","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time - 200","l.end_time - 200","","","","","word.center","word.middle","","","5","0","fx.pos_x + word.width*(-1)^j, fx.pos_x","fx.pos_y, fx.pos_y","0, 400","6","","word.text","tag.clip( fx.pos_l - word.width, fx.pos_t, 3*word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Horizontal_Multi_II); table.insert(transla_fx, "Static Clip Horizontal Multi II")
	Static_Clip_Vertical_Multi_I = table.duplicate(Trans_Box); table.inbox(Static_Clip_Vertical_Multi_I, "translation[fx]: Static Clip Vertical Multi I","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time + time_li( 70 ) - 200","l.end_time - 100","","","","","word.center","word.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + 0.6*word.height*(-1)^j, fx.pos_y","0, 450","1, ceil( word.width/8 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Vertical_Multi_I); table.insert(transla_fx, "Static Clip Vertical Multi I")
	Static_Clip_Vertical_Multi_II = table.duplicate(Trans_Box); table.inbox(Static_Clip_Vertical_Multi_II, "translation[fx]: Static Clip Vertical Multi II","Translation Word",true,false,"#E2EAFD","#3F3C3C","#FFFFFF","20","40","0","l.start_time - 200","l.end_time - 200","","","","","word.center","word.middle","","","5","0","fx.pos_x, fx.pos_x","fx.pos_y + 0.6*word.height*(-1)^j, fx.pos_y","0, 400","1, ceil( word.width/8 )","","word.text","tag.clip( fx.pos_l, fx.pos_t, word.width, word.height ), \"\\\\fad(0,220)\"","","Lua"); table.insert(transla_fx_library, Static_Clip_Vertical_Multi_II); table.insert(transla_fx, "Static Clip Vertical Multi II")
	Stela_Move_Left = table.duplicate(Trans_Box); table.inbox(Stela_Move_Left, "translation[fx]: Stela Move Left","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 20 ) - delay*module/3","l.end_time","","","","0","char.center","char.middle","","","5","0","fx.pos_x + Dx, fx.pos_x","fx.pos_y","0, delay + 50*module","7","","char.text","tag.only( j == 2, format( \"\\\\t(%s,%s,0.8,\\\\alpha&HFF&)\", delay, delay + 50 ) ), \"\\\\fad(300,300)\"","Dx = 86*ratio;\ndelay = 300","Lua"); table.insert(transla_fx_library, Stela_Move_Left); table.insert(transla_fx, "Stela Move Left")
	Tag_Oscill2_Demo_I = table.duplicate(Trans_Box); table.inbox(Tag_Oscill2_Demo_I, "translation[fx]: Tag Oscill2 Demo I","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","5r, l.width / 140r","","line.text_stripped","tag.clip( ), tag.only( R( 2 ) == 1, \"\\\\org( fx.pos_x, fx.pos_y - 10000r )\", \"\\\\org( fx.pos_x - 10000r, fx.pos_y )\" ) , tag.oscill2( { \"random\" }, \"\\\\frRcs( 0.02, 0.05 )\" ), \"\\\\fad(200,200)\"","random_mode = \"line\"","Lua",false); table.insert(transla_fx_library, Tag_Oscill2_Demo_I); table.insert(transla_fx, "Tag Oscill2 Demo I")
	Tag_Oscill2_Demo_II = table.duplicate(Trans_Box); table.inbox(Tag_Oscill2_Demo_II, "translation[fx]: Tag Oscill2 Demo II","Translation Line",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","12r","","line.text_stripped","tag.clip( 0, fx.pos_t, xres, l.height ), \"\\\\org( fx.pos_x, fx.pos_y - 12000r )\", tag.oscill2( { \"random\" }, \"\\\\frRcs( 0.2, 0.1 )\" ), \"\\\\fad(200,200)\"","random_mode = \"line\"","Lua",false); table.insert(transla_fx_library, Tag_Oscill2_Demo_II); table.insert(transla_fx, "Tag Oscill2 Demo II")
	Text_Mask_I = table.duplicate(Trans_Box); table.inbox(Text_Mask_I, "translation[fx]: Text Mask I","Translation Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask( )","","Mask = function( )\n	maxloop( R( 15, 20 ) )\n	if j == 1 then\n		return format( \"{\\\\pos(%s,%s)\\\\bord0\\\\shad0\\\\1c%s%s\\\\p1}%s\",\n			line.center, line.middle, text.color1, text.to_clip( ),\n			shape.size( shape.rectangle, 1.2*line.width, 1.2*line.height )\n		)\n	elseif j < maxj then\n		return format( \"{\\\\pos(%s,%s)\\\\bord0\\\\shad0\\\\1c%s\\\\blur%s%s\\\\p1}%s\",\n			line.center + R( -0.5*line.width, 0.5*line.width ), line.middle + R( -0.3*line.height, 0.3*line.height ),\n			color.interpolate( \"&H0000FF&\", \"&H000000&\", R( 0, 60 )/100 ), R( 40, 100 )/10, text.to_clip( ),\n			shape.size( shape.circle, R( 16, 42 ) )\n		)\n	else\n		return format( \"{\\\\1a&HFF&}%s\", line.text_stripped )\n	end\nend","Lua"); table.insert(transla_fx_library, Text_Mask_I); table.insert(transla_fx, "Text Mask I")
	Text_Mask_II = table.duplicate(Trans_Box); table.inbox(Text_Mask_II, "translation[fx]: Text Mask II","Translation Line",true,false,"#0382FD","#000000","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask2( )","","Mask2 = function( Color1, Color2 )\n	local Color1 = Color1 or shape.color1\n	local Color2 = Color2 or shape.color3\n	maxloop( 3 )\n	if j == 1 then\n		return format( \"{%s\\\\1c%s\\\\fscx%s\\\\fscy%s\\\\p1}%s\", text.to_clip( ), Color1, 1.2*l.width, 1.2*l.height, shape.rectangle )\n	elseif j == 2 then\n		local Shape = format( \"{%s\\\\1c%s\\\\1a%s\\\\blur%s\\\\p1}%s\", text.to_clip( ), color.interpolate( Color1, Color2, R( 0, 90 )/100 ), \n		ass_alpha( 65 ), R( 25, 65 )/10, shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		for i = 1, 16 do\n			Shape = Shape .. format( \"{\\\\1c%s\\\\blur%s}%s\", color.interpolate(Color1, Color2, R(0,90)/100), \n			R( 25, 65 )/10, shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		end\n		return Shape\n	else\n		return format( \"{\\\\1a&HFF&\\\\bord%s\\\\shad0}%s\", 2.8*ratio, line.text_stripped )\n	end\nend","Lua"); table.insert(transla_fx_library, Text_Mask_II); table.insert(transla_fx, "Text Mask II")
	Text_Mask_Color_Set = table.duplicate(Trans_Box); table.inbox(Text_Mask_Color_Set, "translation[fx]: Text Mask Color Set","Translation Line",true,false,"#929292","#0B2442","#000000","25","25","0","l.start_time","l.end_time","","","","","l.center","l.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","Mask3( color.set( times, colors, \"\\\\1c\"), color.set( times, color.interpolate( colors, \"&H000000&\", R( 100 )/100 ), \"\\\\1c\" ) )","","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:20.200\", \"0:00:30.116\", \"0:00:43.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\" };\nMask3 = function( Color1, Color2 )\n	maxloop( 3 )\n	if j == 1 then\n		return format( \"{%s%s\\\\fscx%s\\\\fscy%s\\\\p1}%s\", text.to_clip( ), Color1, 1.2*l.width, 1.2*l.height, shape.rectangle )\n	elseif j == 2 then\n		local Shape = format( \"{%s%s\\\\1a%s\\\\blur%s\\\\p1}%s\", text.to_clip( ), Color2, ass_alpha( 65 ), R( 25, 65 )/10, \n		shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		for i = 1, 16 do\n			Shape = Shape .. format( \"{%s\\\\blur%s}%s\", Color2, R( 25, 65 )/10, \n			shape.displace( shape.size( shape.circle, R( 20, 100 ), R( 20, 50 ) ), R( -50, 50 ), R( -12, 12 ) ) )\n		end\n		return Shape\n	end\n	return format( \"{\\\\1a&HFF&\\\\bord%s\\\\shad0}%s\", 2*ratio, line.text_stripped )\nend","Lua"); table.insert(transla_fx_library, Text_Mask_Color_Set); table.insert(transla_fx, "Text Mask Color Set")
	Translation_Clasic_Char = table.duplicate(Trans_Box); table.inbox(Translation_Clasic_Char, "translation[fx]: Translation Clasic Char","Translation Char",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 15 )","l.end_time + time_lo( 15 )","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","\"\\\\fad(300,300)\"",""); table.insert(transla_fx_library, Translation_Clasic_Char); table.insert(transla_fx, "Translation Clasic Char")
	Translation_Word = table.duplicate(Trans_Box); table.inbox(Translation_Word, "translation[fx]: Translation Word","Translation Word",true,false,"#FFFFFF","#008DFF","#000000","0","0","0","l.start_time + time_li( 50 ) - 200","l.end_time","","","","","word.center","word.middle","","","5","0","fx.pos_x + R( -25, 25 )*ratio, fx.pos_x","fx.pos_y + R( -25, 25 )*ratio, fx.pos_y","0, 400","1","","word.text","\"\\\\fad(300,300)\"",""); table.insert(transla_fx_library, Translation_Word); table.insert(transla_fx, "Translation Word")
	Tremor_Clip_leadin_and_leadout_I = table.duplicate(Trans_Box); table.inbox(Tremor_Clip_leadin_and_leadout_I, "translation[fx]: Tremor Clip leadin and leadout I","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","6","","line.text_stripped","tag.clip( \"shape.Rmove3( 50*ratio, 20*ratio, { 0, 500, fx.dur - 500, fx.dur }, 0.8, { 100 } )\" ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_Clip_leadin_and_leadout_I); table.insert(transla_fx, "Tremor Clip leadin and leadout I")
	Tremor_Clip_leadin_and_leadout_II = table.duplicate(Trans_Box); table.inbox(Tremor_Clip_leadin_and_leadout_II, "translation[fx]: Tremor Clip leadin and leadout II","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","6, ceil( line.width/(75*ratio) )","","line.text_stripped","tag.clip( \"shape.Rmove3( 50*ratio, 20*ratio, { 0, 500, fx.dur - 500, fx.dur }, 0.8, { 100 } )\" ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_Clip_leadin_and_leadout_II); table.insert(transla_fx, "Tremor Clip leadin and leadout II")
	Tremor_leadin_and_leadout_I = table.duplicate(Trans_Box); table.inbox(Tremor_leadin_and_leadout_I, "translation[fx]: Tremor leadin and leadout I","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Rmove3( 20*ratio, 20*ratio, { 0, 420, fx.dur - 420, fx.dur }, 0.8, { 60 } ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_leadin_and_leadout_I); table.insert(transla_fx, "Tremor leadin and leadout I")
	Tremor_leadin_and_leadout_II = table.duplicate(Trans_Box); table.inbox(Tremor_leadin_and_leadout_II, "translation[fx]: Tremor leadin and leadout II","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Rmove3( 0, 36*ratio, { 0, 400, fx.dur - 400, fx.dur }, 0.8, { 50 } ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_leadin_and_leadout_II); table.insert(transla_fx, "Tremor leadin and leadout II")
	Tremor_leadin_and_leadout_III = table.duplicate(Trans_Box); table.inbox(Tremor_leadin_and_leadout_III, "translation[fx]: Tremor leadin and leadout III","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Rmove3( 50*ratio, 0, { 0, 400, fx.dur - 400, fx.dur }, 0.8, { 50 } ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_leadin_and_leadout_III); table.insert(transla_fx, "Tremor leadin and leadout III")
	Tremor_Multi = table.duplicate(Trans_Box); table.inbox(Tremor_Multi, "translation[fx]: Tremor Multi","Translation Line",true,false,"#F6F3F3","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","shape.Rmove3( 15*ratio, 15*ratio, { 0, 400, fx.dur/2 - 200, fx.dur/2 + 200, fx.dur - 400, fx.dur }, 0.8, { 50 } ), \"\\\\fad(120,120)\"","","Lua"); table.insert(transla_fx_library, Tremor_Multi); table.insert(transla_fx, "Tremor Multi")

	--Function fx list
	function_color_ass = table.duplicate(PfxM_Box); table.inbox(function_color_ass, "function[fx]: function color ass","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1c%s\", color.ass( \"#FF0000\" ) )","hint = \"Esta función convierte un color de formato HTML a formato ASS, aunque ya no es necesaria usarla ya que está integrada en el KE y el cambio de formato se hace de manera automática\"","Lua",false); table.insert(function_fx_library, function_color_ass); table.insert(function_fx, "function color ass")
	function_color_c_to_vc = table.duplicate(PfxM_Box); table.inbox(function_color_c_to_vc, "function[fx]: function color c to vc","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1vc\" .. color.c_to_vc( \"&HFF0000&\" )","hint = \"Esta función cambia el formato de un color o de una tabla de colores, de formato ASS a formato VSFilterMod, aunque ya no es necesario usarla ya que está incomporada internamente en el KE y el cambio de formato se hace de forma automática.\"","Lua",false); table.insert(function_fx_library, function_color_c_to_vc); table.insert(function_fx, "function color c to vc")
	function_color_interpolate = table.duplicate(PfxM_Box); table.inbox(function_color_interpolate, "function[fx]: function color interpolate","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1vc\" .. color.interpolate( \"&HFF0000&\", \"&H0000FF&\", syl.i/syl.n )","hint = \"Esta función retorna la interpolación entre dos colores. Los dos primeros Argumentos pueden ser colores o tablas de colores. El tercer Argumento es 0.5 por default, y hace referencia a un número entre 0 y 1, y decide la tendencia del color retornado.\"","Lua",false); table.insert(function_fx_library, function_color_interpolate); table.insert(function_fx, "function color interpolate")
	function_color_mask = table.duplicate(PfxM_Box); table.inbox(function_color_mask, "function[fx]: function color mask","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.mask( \"\\\\1c\", \"&H00D2FF&\" )","hint = \"Esta función crea una especie de gradientes aleatorios entre el color ingresado en el segundo Argumento y el color negro por default, o con los colores ingresados a partir del tercer Argumento.\"","Lua",false); table.insert(function_fx_library, function_color_mask); table.insert(function_fx, "function color mask")
	function_color_module = table.duplicate(PfxM_Box); table.inbox(function_color_module, "function[fx]: function color module","Line",true,false,"#62C00C","#F63B3A","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_l + 30*(j - 1)","fx.pos_y","","l.width/30","25","shape.rectangle","\"\\\\bord0\\\\1c\" .. color.module( shape.color1, shape.color3 )","hint = \"Esta función función interpola dos colores respecto al module, es decir, respecto al total del loop del fx aplicado.\"","Lua",false); table.insert(function_fx_library, function_color_module); table.insert(function_fx, "function color module")
	function_color_module1 = table.duplicate(PfxM_Box); table.inbox(function_color_module1, "function[fx]: function color module1","Syl",true,false,"#527DF2","#595555","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1c\" .. color.module1( shape.color1, shape.color3 )","hint = \"Esta función función interpola dos colores respecto al module1, es decir, respecto al total de objetos karaoke de cada línea (char, syl, word...) del fx aplicado.\"","Lua",false); table.insert(function_fx_library, function_color_module1); table.insert(function_fx, "function color module1")
	function_color_module2 = table.duplicate(PfxM_Box); table.inbox(function_color_module2, "function[fx]: function color module2","Syl",true,false,"#527DF2","#E5F02A","#FFFFFF","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1c\" .. color.module2( shape.color1, shape.color3 )","hint = \"Esta función función interpola dos colores respecto al module2, es decir, respecto al total de líneas karaoke que tenga el archivo al que le apliquemos un fx.\"","Lua",false); table.insert(function_fx_library, function_color_module2); table.insert(function_fx, "function color module2")
	function_color_movemask = table.duplicate(PfxM_Box); table.inbox(function_color_movemask, "function[fx]: function color movemask","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemask( fx.dur, 200, \"\\\\1c\", \"&H00D2FF&\" )","hint = \"Esta función es similar a la función color.mask, pero con la diferencia que luego de crear el gradiente aleatorio, luego lo desplaza hacia la izquierda durante un tiempo determinado en el primer Aegumento y a una velocidad determinada por la duración de las transformaciones en el segundo Argumento.\"","Lua",false); table.insert(function_fx_library, function_color_movemask); table.insert(function_fx, "function color movemask")
	function_color_movemaskv = table.duplicate(PfxM_Box); table.inbox(function_color_movemaskv, "function[fx]: function color movemaskv","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.movemaskv( fx.dur, 220, \"\\\\1c\", \"&H0DC51C&\" )","hint = \"Esta función es similar a la función color.movemask, pero con la diferencia que desplaza el gradiente aleatorio verticalmente, desde abajo hacia arriba durante un tiempo determinado en el primer Aegumento y a una velocidad determinada por la duración de las transformaciones en el segundo Argumento.\"","Lua",false); table.insert(function_fx_library, function_color_movemaskv); table.insert(function_fx, "function color movemaskv")
	function_color_r = table.duplicate(PfxM_Box); table.inbox(function_color_r, "function[fx]: function color r","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1c%s\", color.r( ) )","hint = \"Esta función es similar a la función random.color, pero con la diferencia que incluye todos los colores del espectro, incluyendo el blanco y el negro y todas las combinaciones posibles\"","Lua",false); table.insert(function_fx_library, function_color_r); table.insert(function_fx, "function color r")
	function_color_rc = table.duplicate(PfxM_Box); table.inbox(function_color_rc, "function[fx]: function color rc","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1c%s\", options_func[ R( 6 ) ] )","hint = \"Esta función retorna una interpolación entre el color ingresado en el primer Argumento, y el color o los colores ingresados en el resto de los argumentos. Si en el primer argumento se ingresa una tabla, entonces la función retorna una tabla con las respectivas interpolaciones.\";\noptions_func = {\n	[01] = color.rc( shape.color1 ),\n	[02] = color.rc( shape.color1, \"&HFFFFFF&\", \"&HFF0000\" ),\n	[03] = color.rc( shape.color1, { \"&H000000&\", \"&H0000FF\" } ),\n	[04] = color.rc( { shape.color1, shape.color3, shape.color4 } )[R( 3 )],\n	[05] = color.rc( { shape.color1, shape.color3, shape.color4 }, \"&HFFFFFF&\", \"&HFF0000\" )[R( 3 )],\n	[06] = color.rc( { shape.color1, shape.color3, shape.color4 }, { \"&H000000&\", \"&H0000FF\" } )[R( 3 )]\n}","Lua",false); table.insert(function_fx_library, function_color_rc); table.insert(function_fx, "function color rc")
	function_color_rvc = table.duplicate(PfxM_Box); table.inbox(function_color_rvc, "function[fx]: function color rvc","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1vc%s\", options_func[ R( 6 ) ] )","hint = \"Esta función retorna una interpolación en formato VSFilterMod entre el color ingresado en el primer Argumento, y el color o los colores ingresados en el resto de los argumentos. Si en el primer argumento se ingresa una tabla, entonces la función retorna una tabla con las respectivas interpolaciones.\";\noptions_func = {\n	[01] = color.rvc( shape.color1 ),\n	[02] = color.rvc( shape.color1, \"&HFFFFFF&\", \"&HFF0000\" ),\n	[03] = color.rvc( shape.color1, { \"&H000000&\", \"&H0000FF\" } ),\n	[04] = color.rvc( { shape.color1, shape.color3, shape.color4 } )[R( 3 )],\n	[05] = color.rvc( { shape.color1, shape.color3, shape.color4 }, \"&HFFFFFF&\", \"&HFF0000\" )[R( 3 )],\n	[06] = color.rvc( { shape.color1, shape.color3, shape.color4 }, { \"&H000000&\", \"&H0000FF\" } )[R( 3 )]\n}","Lua",false); table.insert(function_fx_library, function_color_rvc); table.insert(function_fx, "function color rvc")
	function_color_set = table.duplicate(PfxM_Box); table.inbox(function_color_set, "function[fx]: function color set","Syl",true,false,"#4A4A4A","#FFFFFF","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.set( times, colors, \"\\\\1c\" )","mi_gradient = table.make( \"color\", syl.n, 10, 60 );\ntimes = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:20.200\", { \"0:00:30.116\", 1000 }, \"0:00:43.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", mi_gradient, \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\" }","Lua",false); table.insert(function_fx_library, function_color_set); table.insert(function_fx, "function color set")
	function_color_setmovemask = table.duplicate(PfxM_Box); table.inbox(function_color_setmovemask, "function[fx]: function color setmovemask","Syl",true,false,"#929292","#0B2442","#000000","25","25","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","color.setmovemask( 200, \"\\\\1c\", times, colors )","times = { \"0:00:06.066\", \"0:00:08.300\", \"0:00:10.535\", \"0:00:14.306\", \"0:00:20.200\", \"0:00:30.116\", \"0:00:43.066\" };\ncolors = { \"&HB82AFB&\", \"&HFB7E35&\", \"&H4414FA&\", \"&HB82AFB&\", \"&H44AAFA&\", \"&HFB7E35&\", \"&HB82AFB&\" };\n\nhint = \"Esta función es la combinación de la funciones color.set y color.movemask. La velocidad de desplazamiento del gradiente aleatorio es determinada por el primer Argumento de la función, que determina la duración de las transformaciones.\"","Lua",false); table.insert(function_fx_library, function_color_setmovemask); table.insert(function_fx, "function color setmovemask")
	function_color_vc = table.duplicate(PfxM_Box); table.inbox(function_color_vc, "function[fx]: function color vc","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1vc%s\", color.vc( \"&H0000FF&\" ) )","hint = \"Esta función convierte un color de formato ASS a formato VSFilterMod, aunque ya no es necesaria usarla ya que está integrada en el KE y el cambio de formato se hace de manera automática\"","Lua",false); table.insert(function_fx_library, function_color_vc); table.insert(function_fx, "function color vc")
	function_color_vc_to_c = table.duplicate(PfxM_Box); table.inbox(function_color_vc_to_c, "function[fx]: function color vc to c","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1c\" .. color.vc_to_c( \"(H0000FF,H0000FF,H0000FF,H0000FF)\" )","hint = \"Esta función convierte un color de formato VSFilterMod a formato ASS, aunque ya no es necesario usarla ya que se ejecuta internamente en el KE de manera automática, dependiendo el filtro seleccionado en la Ventana de Inicio. Si el Argumento ingresado es una tabla de colores, entonces la función retorna una tabla de colores convertidos en formato ASS.\"","Lua",false); table.insert(function_fx_library, function_color_vc_to_c); table.insert(function_fx, "function color vc to c")
	function_random_alpha = table.duplicate(PfxM_Box); table.inbox(function_random_alpha, "function[fx]: function random alpha","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1a\" .. options_func[ R( 9 ) ]","options_func = {\n	[01] = random.alpha( ),			-- nil, nil\n	[02] = random.alpha( 64 ),			-- number, nil\n	[03] = random.alpha( \"&H4E&\" ),		-- string, nil\n	[04] = random.alpha( nil, 172 ),			-- nil, number\n	[05] = random.alpha( nil, \"&HA7&\" ),		-- nil, string\n	[06] = random.alpha( 100, 200 ),			-- number, number\n	[07] = random.alpha( 64, \"&HA7&\" ),		-- number, string\n	[08] = random.alpha( \"&H8C&\", 176 ),		-- string, number\n	[09] = random.alpha( \"&H8C&\", \"&HFF&\" )	-- string, string\n}","Lua",false); table.insert(function_fx_library, function_random_alpha); table.insert(function_fx, "function random alpha")
	function_random_alphava = table.duplicate(PfxM_Box); table.inbox(function_random_alphava, "function[fx]: function random alphava","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1va\" .. options_func[ R( 9 ) ]","options_func = {\n	[01] = random.alphava( ),			-- nil, nil\n	[02] = random.alphava( 64 ),			-- number, nil\n	[03] = random.alphava( \"&H4E&\" ),		-- string, nil\n	[04] = random.alphava( nil, 172 ),		-- nil, number\n	[05] = random.alphava( nil, \"&HA7&\" ),		-- nil, string\n	[06] = random.alphava( 100, 200 ),		-- number, number\n	[07] = random.alphava( 64, \"&HA7&\" ),		-- number, string\n	[08] = random.alphava( \"&H8C&\", 176 ),		-- string, number\n	[09] = random.alphava( \"&H8C&\", \"&HFF&\" )	-- string, string\n}","Lua",false); table.insert(function_fx_library, function_random_alphava); table.insert(function_fx, "function random alphava")
	function_random_color = table.duplicate(PfxM_Box); table.inbox(function_random_color, "function[fx]: function random color","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1c\" .. options_func[ R( 27 ) ]","options_func = {\n	[01] = random.color( ),				-- nil, nil, nil\n	[02] = random.color( 64 ),				-- number, nil, nil\n	[03] = random.color( { 114, 300 } ),			-- table, nil, nil\n	[04] = random.color( nil, 72 ),				-- nil, number, nil\n	[05] = random.color( nil, { 50, 100 } ),			-- nil, table, nil\n	[06] = random.color( nil, nil, 48 ),			-- nil, nil, number\n	[07] = random.color( nil, nil, { 40, 80 } ),			-- nil, nil, table\n	[08] = random.color( 124, 76 ),				-- number, number, nil\n	[09] = random.color( 230, { 50, 100 } ),			-- number, table, nil\n	[10] = random.color( { 208, 300 }, 76 ),			-- table, number, nil\n	[11] = random.color( { 78, 300 }, { 20, 70 } ),			-- table, table, nil\n	[12] = random.color( 24, nil, 76 ),			-- number, nil, number\n	[13] = random.color( 353, nil, { 50, 100 } ),			-- number, nil, table\n	[14] = random.color( { 208, 300 }, nil, 76 ),			-- table, nil, number\n	[15] = random.color( { 78, 300 }, nil, { 50, 100 } ),		-- table, nil, table\n	[16] = random.color( 170, 80, 94 ),			-- number, number, number\n	[17] = random.color( 70, 80, { 50, 100 } ),			-- number, number, table\n	[18] = random.color( 240, { 50, 100 }, 80 ),			-- number, table, number\n	[19] = random.color( 330, { 50, 100 }, { 50, 100 } ),		-- number, table, table\n	[20] = random.color( { 60, 150 }, 80, 94 ),			-- table, number, number\n	[21] = random.color( { 60, 150 }, 80, { 50, 100 } ),		-- table, number, table\n	[22] = random.color( { 60, 150 }, { 50, 100 }, 80 ),		-- table, table, number\n	[23] = random.color( { 60, 150 }, { 50, 100 }, { 50, 100 } ),	-- table, table, table\n	[24] = random.color( nil, 60, 90 ),			-- nil, number, number\n	[25] = random.color( nil, 60, { 50, 100 } ),			-- nil, number, table\n	[26] = random.color( nil, { 50, 100 }, 60 ),			-- nil, table, number\n	[27] = random.color( nil, { 50, 100 }, { 50, 100 } )		-- nil, table, table\n}","Lua",false); table.insert(function_fx_library, function_random_color); table.insert(function_fx, "function random color")
	function_random_colorvc = table.duplicate(PfxM_Box); table.inbox(function_random_colorvc, "function[fx]: function random colorvc","Syl",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","\"\\\\1vc\" .. options_func[ R( 27 ) ]","options_func = {\n	[01] = random.colorvc( ),				-- nil, nil, nil\n	[02] = random.colorvc( 64 ),				-- number, nil, nil\n	[03] = random.colorvc( { 114, 300 } ),			-- table, nil, nil\n	[04] = random.colorvc( nil, 72 ),				-- nil, number, nil\n	[05] = random.colorvc( nil, { 50, 100 } ),			-- nil, table, nil\n	[06] = random.colorvc( nil, nil, 48 ),			-- nil, nil, number\n	[07] = random.colorvc( nil, nil, { 40, 80 } ),			-- nil, nil, table\n	[08] = random.colorvc( 124, 76 ),			-- number, number, nil\n	[09] = random.colorvc( 230, { 50, 100 } ),			-- number, table, nil\n	[10] = random.colorvc( { 208, 300 }, 76 ),			-- table, number, nil\n	[11] = random.colorvc( { 78, 300 }, { 20, 70 } ),		-- table, table, nil\n	[12] = random.colorvc( 24, nil, 76 ),			-- number, nil, number\n	[13] = random.colorvc( 353, nil, { 50, 100 } ),		-- number, nil, table\n	[14] = random.colorvc( { 208, 300 }, nil, 76 ),		-- table, nil, number\n	[15] = random.colorvc( { 78, 300 }, nil, { 50, 100 } ),		-- table, nil, table\n	[16] = random.colorvc( 170, 80, 94 ),			-- number, number, number\n	[17] = random.colorvc( 70, 80, { 50, 100 } ),			-- number, number, table\n	[18] = random.colorvc( 240, { 50, 100 }, 80 ),		-- number, table, number\n	[19] = random.colorvc( 330, { 50, 100 }, { 50, 100 } ),		-- number, table, table\n	[20] = random.colorvc( { 60, 150 }, 80, 94 ),			-- table, number, number\n	[21] = random.colorvc( { 60, 150 }, 80, { 50, 100 } ),		-- table, number, table\n	[22] = random.colorvc( { 60, 150 }, { 50, 100 }, 80 ),		-- table, table, number\n	[23] = random.colorvc( { 60, 150 }, { 50, 100 }, { 50, 100 } ),	-- table, table, table\n	[24] = random.colorvc( nil, 60, 90 ),			-- nil, number, number\n	[25] = random.colorvc( nil, 60, { 50, 100 } ),			-- nil, number, table\n	[26] = random.colorvc( nil, { 50, 100 }, 60 ),			-- nil, table, number\n	[27] = random.colorvc( nil, { 50, 100 }, { 50, 100 } )		-- nil, table, table\n}","Lua",false); table.insert(function_fx_library, function_random_colorvc); table.insert(function_fx, "function random colorvc")
	function_random_e = table.duplicate(PfxM_Box); table.inbox(function_random_e, "function[fx]: function random e","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\fscy%s\\\\3c%s\\\\blur2\", random.e( sizey ), random.e ( shape.color1, shape.color3, shape.color4 ) )","sizey = { 70, 80, 90, 100, 110, R( 80, 120 ), 120, 130 }","Lua",false); table.insert(function_fx_library, function_random_e); table.insert(function_fx, "function random e")
	function_random_unique = table.duplicate(PfxM_Box); table.inbox(function_random_unique, "function[fx]: function random unique","Syl",true,false,"#FADE22","#057ECF","#FD0A03","0","0","0","l.start_time","l.end_time","","","","","syl.center","syl.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","syl.text","format( \"\\\\1c%s\", random.unique( colors, syl.i ) )","colors = { shape.color1, shape.color3, shape.color4, color.interpolate( shape.color1, shape.color3 ), color.interpolate( shape.color1, shape.color4 ), color.interpolate( shape.color3, shape.color4 ) }","Lua",false); table.insert(function_fx_library, function_random_unique); table.insert(function_fx, "function random unique")
	function_shape_array = table.duplicate(PfxM_Box); table.inbox(function_shape_array, "function[fx]: function shape array","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","xres / 2","yres / 2","","1","","shape_array[ 12 ]","\"\\\\bord0\\\\shad0\"","Shapes = {\n	[ 1 ] = shape.size( shape.shine1t, 32 ),	-->Ver la función shape.size\n	[ 2 ] = shape.size( shape.rectangle, 24 )\n};\nshape_array = {\n	[ 1 ] = shape.array( Shapes[ 1 ], 12 ),	-->Hace un arreglo horizontal de 12 repeticiones de la Shape (ángulo = 0°)\n	[ 2 ] = shape.array( Shapes[ 1 ], 7, 45 ),	-->Hace un arreglo de 7 Shapes, con un ángulo de 45° (45° = pi/4)\n	[ 3 ] = shape.array( Shapes[ 2 ], 5, 90, 10 ),	-->Hace un arreglo de 5 shapes, con un ángulo de 90° y con una separación entre ellas de 10px\n	[ 4 ] = shape.array( Shapes[ 2 ], 5, { 10, 30 }, 10 ), -->Parecido al caso anterior, pero ahora se le agrega una rotación de 30° a las Shapes\n	[ 5 ] = shape.array( Shapes[ 2 ], { 5, 4 }, \"array\", { 10, 5 } ), -->Arreglo rectangular de 5x4, separados 10px a lo Ancho y 5px a lo Alto\n	[ 6 ] = shape.array( Shapes, { 5, 4 }, \"array\", { 10, 5 } ), -->Arreglo rectangular de 5x4 usando las Shapes de la table ingresada\n	[ 7 ] = shape.array( Shapes[ 2 ] , 8, \"radial\", 50 ), -->Arreglo radial de 8 Shapes con un Radio interior de 50px\n	[ 8 ] = shape.array( Shapes[ 2 ] , 8, \"radial\", { 50, 80 } ), -->Arreglo radial de 8 Shapes, con un Radio inicial de 50px y Radio final de 80px\n	[ 9 ] = shape.array( Shapes[ 2 ] , 8, \"radial\", { 60, 100, 120 } ), -->Radio inicial de 60px, Radio final de 100px y un Arco de 120°\n	[ 10 ] = shape.array( Shapes[ 2 ] , 8, \"radial\", { 60, 60, 150, 90 } ), -->Radio inicial y final de 60px, un Arco de 150° partiendo desde 90°\n	[ 11 ] = shape.array( Shapes[ 2 ] , { 6, 3 }, \"radial\", 64 ), -->Arreglo radial de 6 Shapes, repetido 3 veces, a una distancia de 0px entre sí\n	[ 12 ] = shape.array( Shapes[ 2 ] , { 6, 3 }, \"radial\", { 64, 10 } ), -->Las 3 repeticiones están separadas 10px entre sí\n	[ 13 ] = shape.array( Shapes , { 8, 3 }, \"radial\", { 64, 10 } ), -->Se alternan las Shapes de la tabla ingresada\n}","Lua",false); table.insert(function_fx_library, function_shape_array); table.insert(function_fx, "function shape array")
	function_shape_centerpos = table.duplicate(PfxM_Box); table.inbox(function_shape_centerpos, "function[fx]: function shape centerpos","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.centerpos( shape.star, 60, 94 )","","Hint = \"Esta función desplaza la Shape ingresada, respecto a su centro, a las coordenadas que le indiquemos (Px, Py) del plano del ASSDraw3. Ambos valores por Default son 0\"","Lua",false); table.insert(function_fx_library, function_shape_centerpos); table.insert(function_fx, "function shape centerpos")
	function_shape_displace = table.duplicate(PfxM_Box); table.inbox(function_shape_displace, "function[fx]: function shape displace","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.displace( shape.rectangle, -20, 45 )","","Hint = \"Esta función desplaza la Shape ingresada en el plano del ASSDraw3 la cantidad de pixeles en el plano que le indiquemos. El segundo Argumento indica el desplacemiento horizontal, y el tercero el vertical. Ambos valores por Default son 0\"","Lua",false); table.insert(function_fx_library, function_shape_displace); table.insert(function_fx, "function shape displace")
	function_shape_filter = table.duplicate(PfxM_Box); table.inbox(function_shape_filter, "function[fx]: function shape filter","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.filter( my_shape, my_filter )","\"\\\\bord0\\\\shad0\"","my_shape = shape.redraw( shape.circle, 4 ); -->redibuja la Shape en segmentos rectos de 4 px ( ver función shape.redraw )\nmy_filter = function( x, y )\n	x = x + Rs( 8 )\n	y = y + Rs( 8 )\n	return x, y\nend;\nHint = \"Es similar a la función shape.modify, pero con la diferencia que modifica los puntos de la Shape ingresada usando la Librería Yutils.lua\"","Lua",false); table.insert(function_fx_library, function_shape_filter); table.insert(function_fx, "function shape filter")
	function_shape_filter2 = table.duplicate(PfxM_Box); table.inbox(function_shape_filter2, "function[fx]: function shape filter2","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.filter2( shape.circle, my_filter, 3 )","\"\\\\bord0\\\\shad0\"","my_filter = function( x, y )\n	x = x + Rs( 5 )\n	y = y + Rs( 6 )\n	return x, y\nend;\nHint = \"shape.filter2( Shape, Filter, Split ) --> Es la unión de las funciones shape.modify y shape.filter, es decir que antes de aplicar la Función Filtro para modificar los puntos de la Shape ingresada, la Shape se redibuja en segmentos rectos que decidamos en el tercer Argumento de la función (Split), cuyo valor por default es de 2px\"","Lua",false); table.insert(function_fx_library, function_shape_filter2); table.insert(function_fx, "function shape filter2")
	function_shape_filter3 = table.duplicate(PfxM_Box); table.inbox(function_shape_filter3, "function[fx]: function shape filter3","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.filter3( shape.rectangle, 2, my_filter1, my_filter2 )","\"\\\\bord0\\\\shad0\"","my_filter1 = function( x, y )\n	x = math.polar( Ao + 30, Do, \"x\" )\n	y = math.polar( Ao + 30, Do, \"y\" )\n	return x, y\nend;\nmy_filter2 = function( x, y )\n	x = x\n	y = y + 12 * sin( 4 * pi * My )\n	return x, y\nend;\nHint = \"shape.filter3( Shape, Split, ... ) --> Es la evolución de la función shape.filter2, con las diferencias que, el Argumento Split ya no tiene valor por default, ya que si ponemos nil, entonces la Shape ingresada no se redibujará. Y la segunda diferencia es que podemos ingresar la cantidad de funciones Filtro que deseemos o una tabla de filtros\"","Lua",false); table.insert(function_fx_library, function_shape_filter3); table.insert(function_fx, "function shape filter3")
	function_shape_firstpos = table.duplicate(PfxM_Box); table.inbox(function_shape_firstpos, "function[fx]: function shape firstpos","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.firstpos( shape.flower1t, 60, 94 )","","Hint = \"Esta función desplaza la Shape ingresada, respecto al primer punto de su código, a las coordenadas que le indiquemos (Px, Py) del plano del ASSDraw3. Ambos valores por Default son 0\"","Lua",false); table.insert(function_fx_library, function_shape_firstpos); table.insert(function_fx, "function shape firstpos")
	function_shape_height = table.duplicate(PfxM_Box); table.inbox(function_shape_height, "function[fx]: function shape height","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.height( shape.circle )","","hint = \"Esta función retorna el alto total medido en pixeles de la shape ingresada.\"","Lua",false); table.insert(function_fx_library, function_shape_height); table.insert(function_fx, "function shape height")
	function_shape_incenter = table.duplicate(PfxM_Box); table.inbox(function_shape_incenter, "function[fx]: function shape incenter","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.incenter( shape.trebol )","","Hint = \"Esta función desplaza la Shape ingresada, respecto a su centro, a las coordenadas (0, 0) del plano del ASSDraw3\"","Lua",false); table.insert(function_fx_library, function_shape_incenter); table.insert(function_fx, "function shape incenter")
	function_shape_info = table.duplicate(PfxM_Box); table.inbox(function_shape_info, "function[fx]: function shape info","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","table.view( shape_info, \"info_from_shape\" )","","shape.info( shape.circle );\nshape_info = {\n	[ 1 ] = minx,	--> la menor de las coordenadas en \"x\"\n	[ 2 ] = maxx,	--> la mayor de las coordenadas en \"x\"\n	[ 3 ] = miny,	--> la menor de las coordenadas en \"y\"\n	[ 4 ] = maxy,	--> la mayor de las coordenadas en \"y\"\n	[ 5 ] = w_shape,	--> (width) ancho total en pixeles de la shape\n	[ 6 ] = h_shape,	--> (height) alto total en pixeles de la shape\n	[ 7 ] = c_shape,	--> (center) coordenada en \"x\" del centro de la shape\n	[ 8 ] = m_shape,	--> (middle) coordenada en \"y\" del centro de la shape\n	[ 9 ] = n_points,	--> cantidad de puntos de la shape\n};\nHint = \"Esta función nos permite usar 9 valores concernientes a la Shape ingresada. Los nombre de las 9 variables están consignados en la anterior table de valores\"","Lua",false); table.insert(function_fx_library, function_shape_info); table.insert(function_fx, "function shape info")
	function_shape_length = table.duplicate(PfxM_Box); table.inbox(function_shape_length, "function[fx]: function shape length","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.length( shape.circle )","","hint = \"Esta función retorna la longitud total del Perímetro de la shape ingresada.\"","Lua",false); table.insert(function_fx_library, function_shape_length); table.insert(function_fx, "function shape length")
	function_shape_Lmove = table.duplicate(PfxM_Box); table.inbox(function_shape_Lmove, "function[fx]: function shape Lmove","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","lmoves[ 1 ]","coors = { 320, 180, 710, 550 };\nlmoves = {\n	[ 1 ] = shape.Lmove( 640, 150, 80, 700, 0, fx.dur, 0.6 ),\n	[ 2 ] = shape.Lmove( coors, 300, 2200 )\n};\nHint = \"Esta función desplaza el objeto karaoke de manera lineal de un punto a otro. Las coordenadas de los dos puntos se pueden ingresar en los primeros cuatro Argumentos de la función o en una tabla que los contenga. Los tiempos del movimiento son por default 0 y fx.dur; y el último Argumento de la función es la aceleración del movimiento, que por default es 1\"","Lua",false); table.insert(function_fx_library, function_shape_Lmove); table.insert(function_fx, "function shape Lmove")
	function_shape_Lmove2 = table.duplicate(PfxM_Box); table.inbox(function_shape_Lmove2, "function[fx]: function shape Lmove2","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","line.text_stripped","lmoves2[ 2 ]","lmoves2 = {\n	[ 1 ] = shape.Lmove2( { -l.width/2, fx.pos_y, fx.pos_x, fx.pos_y, xres + l.width/2, fx.pos_y }, { 0, 200, fx.dur - 200, fx.dur } ),\n	[ 2 ] = shape.Lmove2( { -l.width/2, fx.pos_y, fx.pos_x, fx.pos_y - 150, fx.pos_x, fx.pos_y, xres + l.width/2, fx.pos_y }, nil, { 0, fx.dur - 200 } )\n};\nHint = \"Esta función desplaza el objeto karaoke de manera lineal entre todos los puntos que ingresemos. La opción 1 de la tabla anterior permite que seleccionemos los tiempos de cada movimiento entre cada uno de los puntos, y en la opción 2 solo colocamos los tiempos de inicio y final, y la función ejecuta todos lo movimientos dentro de ese rango de tiempo seleccionado\"","Lua",false); table.insert(function_fx_library, function_shape_Lmove2); table.insert(function_fx, "function shape Lmove2")
	function_shape_modify = table.duplicate(PfxM_Box); table.inbox(function_shape_modify, "function[fx]: function shape modify","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.modify( my_shape, my_filter )","\"\\\\bord0\\\\shad0\"","my_shape = shape.redraw( shape.circle, 5 ); -->redibuja la Shape en segmentos rectos de 5 px ( ver función shape.redraw )\nmy_filter = function( x, y )\n	x = Cx + math.polar( Ac, Dc + 15 * (-1) ^ Pk, \"x\" )\n	y = Cy + math.polar( Ac, Dc + 15 * (-1) ^ Pk, \"y\" )\n	return x, y\nend;\nHint = [[ Esta función modifica los puntos del código de una Shape a partir de una Funcíon conocida como Filtro. En la Función Filtro podemos contar con una serie de Variables por Default que hacen parte de la información fundamental de la Shape ingresada; las Variables son:\n	Cx --> coordenada en \"x\" del centro de la shape\n	Cy --> coordenada en \"y\" del centro de la shape\n	Do --> distancia del punto al origen\n	Dc --> distancia del punto al centro de la shape\n	Ao --> ángulo del origen al punto\n	Ac --> ángulo del centro al punto\n	Pn --> cantidad total de puntos en la shape\n	Pk --> contador de los puntos de la shape\n	Mx --> módulo de varianza respecto a \"x\", Mx = [0, 1]\n	My --> módulo de varianza respecto a \"y\", My = [0, 1]\n	Mp --> módulo de varianza respecto a los puntos, Mp = [0, 1] ]]","Lua",false); table.insert(function_fx_library, function_shape_modify); table.insert(function_fx, "function shape modify")
	function_shape_oblique = table.duplicate(PfxM_Box); table.inbox(function_shape_oblique, "function[fx]: function shape oblique","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.oblique( text.to_shape( \"86\" ), -20, \"y\" )","","hint = \"Esta función afila a la shape ingresada una cantidad de pixeles indicados en el segundo Argumento, y respecto al eje indicado en el tercero\"","Lua",false); table.insert(function_fx_library, function_shape_oblique); table.insert(function_fx, "function shape oblique")
	function_shape_origin = table.duplicate(PfxM_Box); table.inbox(function_shape_origin, "function[fx]: function shape origin","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.origin( \"m 0 -50 l -50 0 l 0 50 l 50 0 l 0 -50 \" )","","Hint = \"Esta función desplaza de forma automática la Shape ingresada al Cuadrante IV del plano de dibujo del ASSDraw3, haciendo que el valor mínimo de las coordenadas sea 0. Esto hace que todos los puntos de la Shape sean positivo o cero\"","Lua",false); table.insert(function_fx_library, function_shape_origin); table.insert(function_fx, "function shape origin")
	function_shape_ratio = table.duplicate(PfxM_Box); table.inbox(function_shape_ratio, "function[fx]: function shape ratio","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape_ratio[ 3 ]","","shape_ratio = {\n	[ 1 ] = shape.ratio( shape.note1t, 1.5 ),	-->Ambas dimensiones de la Shape aumentan en un 150% su tamaño\n	[ 2 ] = shape.ratio( shape.note1t, 1.5, 0.4 ),	-->El Ancho aumenta un 150% y el Alto se reduce en un 40%\n	[ 3 ] = shape.ratio( shape.note1t, { 50 } ),	-->La Shape cambia de tamaño proporcionalmente hasta que el Ancho sea de 50px\n	[ 4 ] = shape.ratio( shape.note1t, 1, { 80 } ),	-->La Shape cambia de tamaño proporcionalmente hasta que el Alto sea de 80px\n};\nHint = \"Esta función modifica el tamaño de la Shape ingresada haciendo uso de las proporciones ingresadas en los Argumentos 2 y 3 de la misma. La proporción 1 equivale al 100% que es el tamaño de cada dmensión por Default\"","Lua",false); table.insert(function_fx_library, function_shape_ratio); table.insert(function_fx, "function shape ratio")
	function_shape_redraw = table.duplicate(PfxM_Box); table.inbox(function_shape_redraw, "function[fx]: function shape redraw","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.redraw( shape.circle, 4 )","","hint = \"Esta función redibuja la shape ingresada en segmentos rectos con longitud determinada. La longitud de cada segmento es de 2 px por default, o la que ingresemos en el segundo Argumento de la función\"","Lua",false); table.insert(function_fx_library, function_shape_redraw); table.insert(function_fx, "function shape redraw")
	function_shape_reflect = table.duplicate(PfxM_Box); table.inbox(function_shape_reflect, "function[fx]: function shape reflect","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.reflect( text.to_shape( \"86\" ), \"y\" )","","hint = \"Esta función refleja a la shape ingresada respecto al eje que le indiquemos en el segundo Argumento de la función.\"","Lua",false); table.insert(function_fx_library, function_shape_reflect); table.insert(function_fx, "function shape reflect")
	function_shape_reverse = table.duplicate(PfxM_Box); table.inbox(function_shape_reverse, "function[fx]: function shape reverse","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.reverse( shape.rectangle )","","hint = \"Esta función reescribe el código de la shape de forma inversa\"","Lua",false); table.insert(function_fx_library, function_shape_reverse); table.insert(function_fx, "function shape reverse")
	function_shape_rotate = table.duplicate(PfxM_Box); table.inbox(function_shape_rotate, "function[fx]: function shape rotate","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.rotate( shape.rectangle, 30, 20, 20 )","","hint = \"Esta función retorna a la shape ingresada, rotada respecto al eje z. El ángulo de rotación se determina en el segundo Argumento de la función. El punto en donde rotará la shape es P = ( 0, 0 ) por default, pero las coordenadas de dicho punto se pueden decidir con los Argumentos tercero y cuarto de la función.\"","Lua",false); table.insert(function_fx_library, function_shape_rotate); table.insert(function_fx, "function shape rotate")
	function_shape_size = table.duplicate(PfxM_Box); table.inbox(function_shape_size, "function[fx]: function shape size","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape_size[ 5 ]","","shape_size = {\n	[ 1 ] = shape.size( shape.note2t, 125 ),	 -->Ambas dimensiones de la Shape se modifican hasta que midan 125px\n	[ 2 ] = shape.size( shape.note2t, 110, 60 ),	 -->El Ancho medirá 100px y el Alto 60px\n	[ 3 ] = shape.size( shape.note2t, { 50 } ),	 -->Ambas dimensiones se modifican agregando 50px a las medidas que ya tengan\n	[ 4 ] = shape.size( shape.note2t, { 80 }, 70 ),	 -->Le agrega 80px a lo que ya mida el Ancho de la Shape, y el Alto medirá 70px\n	[ 5 ] = shape.size( shape.note2t, { 65 }, { -40 } ) -->Le agrega 65px a la medida del Ancho, y resta 40px a la medida del Alto\n};\nHint = \"Esta función modifica el tamaño de la Shape ingresada en la cantidad de pixeles que ingresemos en los Argumentos 2 y 3\"","Lua",false); table.insert(function_fx_library, function_shape_size); table.insert(function_fx, "function shape size")
	function_shape_to_bezier = table.duplicate(PfxM_Box); table.inbox(function_shape_to_bezier, "function[fx]: function shape to bezier","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.modify( my_shape, my_filter )","\"\\\\bord0\\\\shad0\"","my_shape = shape.to_bezier( shape.redraw( shape.circle, 12 ) ); --> Ver funciones shape.modify y shape.redraw\nmy_filter = function( x, y )\n	x = x + Rs( 8 )\n	y = y + Rs( 8 )\n	return x, y\nend;\nHint = \"Esta función convierte todos los segmentos rectos de la Shape ingresada en un segmento Bezier\"","Lua",false); table.insert(function_fx_library, function_shape_to_bezier); table.insert(function_fx, "function shape to bezier")
	function_shape_width = table.duplicate(PfxM_Box); table.inbox(function_shape_width, "function[fx]: function shape width","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","shape.width( shape.circle )","","hint = \"Esta función retorna el ancho total medido en pixeles de la shape ingresada.\"","Lua",false); table.insert(function_fx_library, function_shape_width); table.insert(function_fx, "function shape width")
	function_table_view = table.duplicate(PfxM_Box); table.inbox(function_table_view, "function[fx]: function table view","Line",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","table.view( my_table, \"my_name_table\" )","","my_table = {\n	[ 1 ] = { x = 3, y = 4, z = 5 },\n	[ 2 ] = { [ 1 ] = 6, [ 2 ] = 7 },\n	m = \"mode\",\n	[ \"ratio\" ] = 12\n}","Lua",false); table.insert(function_fx_library, function_table_view); table.insert(function_fx, "function table view")
	function_text_bezier = table.duplicate(PfxM_Box); table.inbox(function_text_bezier, "function[fx]: function text bezier","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","text.bezier( mi_shape, mi_mode )","mi_shape = \"m 56 268 b 424 378 460 205 628 230 827 258 827 391 1216 358 \";\nmi_mode = (line.i - 1)%4 + 1","Lua",false); table.insert(function_fx_library, function_text_bezier); table.insert(function_fx, "function text bezier")
	function_text_bezier_move_mode = table.duplicate(PfxM_Box); table.inbox(function_text_bezier_move_mode, "function[fx]: function text bezier move mode","Char",true,false,"#FFFFFF","#ADC4D6","#6A8DD6","0","0","0","l.start_time","l.end_time","","","","","char.center","char.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","char.text","text.bezier( mi_shape, R( 5, 6 ) )","mi_shape = \"m 56 268 b 424 378 460 205 628 230 827 258 827 391 1216 358 \"","Lua",false); table.insert(function_fx_library, function_text_bezier_move_mode); table.insert(function_fx, "function text bezier move mode")
	function_text_bord_to_shape = table.duplicate(PfxM_Box); table.inbox(function_text_bord_to_shape, "function[fx]: function text bord to shape","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","text.bord_to_shape( )","","","Lua",false); table.insert(function_fx_library, function_text_bord_to_shape); table.insert(function_fx, "function text bord to shape")
	function_text_deformed = table.duplicate(PfxM_Box); table.inbox(function_text_deformed, "function[fx]: function text deformed","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","text.deformed( line.text_stripped, deformed, 16*rato )","","deformed = l.width/( 86*ratio )","Lua",false); table.insert(function_fx_library, function_text_deformed); table.insert(function_fx, "function text deformed")
	function_text_do_shape = table.duplicate(PfxM_Box); table.inbox(function_text_do_shape, "function[fx]: function text do shape","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","text.do_shape( line.text_stripped, mi_shape, 1, mi_mode, true )","","mi_shape = \"m 332 326 b 128 73 844 75 610 284 372 498 1090 539 992 228 \";\nmi_mode = (line.i - 1)%4 + 1","Lua",false); table.insert(function_fx_library, function_text_do_shape); table.insert(function_fx, "function text do shape")
	function_text_to_shape = table.duplicate(PfxM_Box); table.inbox(function_text_to_shape, "function[fx]: function text to shape","Line",true,false,"#FFFFFF","#343434","#000000","0","0","0","l.start_time","l.end_time","","","","","line.center","line.middle","","","5","0","fx.pos_x","fx.pos_y","","1","","text.to_shape( )","","","Lua",false); table.insert(function_fx_library, function_text_to_shape); table.insert(function_fx, "function text to shape")

	--===========================================================================================--
	include( "Effector-newfx-3.3.lua" )

	for i = 1, #leadin_fx do
		if i < 10 then
			leadin_fx[ i ] = format( "[00%s] %s", i, leadin_fx[ i ] )
		elseif i < 100 then
			leadin_fx[ i ] = format( "[0%s] %s", i, leadin_fx[ i ] )
		else
			leadin_fx[ i ] = format( "[%s] %s", i, leadin_fx[ i ] )
		end
	end
	for i = 1, #hilight_fx do
		if i < 10 then
			hilight_fx[ i ] = format( "[00%s] %s", i, hilight_fx[ i ] )
		elseif i < 100 then
			hilight_fx[ i ] = format( "[0%s] %s", i, hilight_fx[ i ] )
		else
			hilight_fx[ i ] = format( "[%s] %s", i, hilight_fx[ i ] )
		end
	end
	for i = 1, #leadout_fx do
		if i < 10 then
			leadout_fx[ i ] = format( "[00%s] %s", i, leadout_fx[ i ] )
		elseif i < 100 then
			leadout_fx[ i ] = format( "[0%s] %s", i, leadout_fx[ i ] )
		else
			leadout_fx[ i ] = format( "[%s] %s", i, leadout_fx[ i ] )
		end
	end
	for i = 1, #shape_fx do
		if i < 10 then
			shape_fx[ i ] = format( "[00%s] %s", i, shape_fx[ i ] )
		elseif i < 100 then
			shape_fx[ i ] = format( "[0%s] %s", i, shape_fx[ i ] )
		else
			shape_fx[ i ] = format( "[%s] %s", i, shape_fx[ i ] )
		end
	end
	for i = 1, #transla_fx do
		if i < 10 then
			transla_fx[ i ] = format( "[00%s] %s", i, transla_fx[ i ] )
		elseif i < 100 then
			transla_fx[ i ] = format( "[0%s] %s", i, transla_fx[ i ] )
		else
			transla_fx[ i ] = format( "[%s] %s", i, transla_fx[ i ] )
		end
	end
	for i = 1, #function_fx do
		if i < 10 then
			function_fx[ i ] = format( "[00%s] %s", i, function_fx[ i ] )
		elseif i < 100 then
			function_fx[ i ] = format( "[0%s] %s", i, function_fx[ i ] )
		else
			function_fx[ i ] = format( "[%s] %s", i, function_fx[ i ] )
		end
	end
	--==================================================================================================================--
	aegisub.register_macro( script_name .. " " .. script_version .. script_update, script_description, effector.macro_fx )
	aegisub.register_filter( script_name .. " " .. script_version .. script_update, "", 2000, effector.macro_fx )
	--==================================================================================================================--
